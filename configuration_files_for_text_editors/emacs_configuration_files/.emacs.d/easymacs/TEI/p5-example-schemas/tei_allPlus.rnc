default namespace = "http://www.tei-c.org/ns/1.0"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace a1 = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1998/Math/MathML"
namespace ns2 = "http://www.w3.org/2000/svg"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2007-03-13T16:04:05Z.

# 
# This template file is freely available and you are hereby
#             authorised to copy, modify, and redistribute it in any way without
#             further reference or permissions.
# When making such modifications, you are strongly recommended to
#             change the present text to include an accurate statement of the
#             licencing conditions applicable to your modified text.
div {
  Boolean.datatype = "false" | "true"
  # 'clip-rule' or 'fill-rule' property/attribute value
  ClipFillRule.datatype = "nonzero" | "evenodd" | "inherit"
  # media type, as per [RFC2045]
  ContentType.datatype = string
  # a <coordinate>
  Coordinate.datatype = string
  # a list of <coordinate>s
  Coordinates.datatype = string
  # a <color> value
  Color.datatype = string
  # a <integer>
  Integer.datatype = string
  # a language code, as per [RFC3066]
  LanguageCode.datatype = xsd:NMTOKEN
  # comma-separated list of language codes, as per [RFC3066]
  LanguageCodes.datatype = string
  # a <length>
  Length.datatype = string
  # a list of <length>s
  Lengths.datatype = string
  # a <number>
  Number.datatype = string
  # a list of <number>s
  Numbers.datatype = string
  # opacity value (e.g., <number>)
  OpacityValue.datatype = string
  # a path data specification
  PathData.datatype = string
  # 'preserveAspectRatio' attribute specification
  PreserveAspectRatioSpec.datatype = string
  # script expression
  Script.datatype = string
  # An SVG color value (RGB plus optional ICC)
  SVGColor.datatype = string
  # arbitrary text string
  Text.datatype = string
  # list of transforms
  TransformList.datatype = string
  # a Uniform Resource Identifier, see [URI]
  URI.datatype = string
  # 'viewBox' attribute specification
  ViewBoxSpec.datatype = string
  # end of svg-datatypes.mod
  
  # .......................................................................
  
  # SVG 1.1 Qualified Name Module .........................................
  
  # file: svg-qname.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-qname.mod,v 1.3 2002/11/03 15:54:14 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Qualified Name//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-qname.mod"
  # 
  # .......................................................................
  
  # Qualified Name
  # 
  # This module is contained in two parts, labeled Section 'A' and 'B':
  # 
  #    Section A declares parameter entities to support namespace-
  #    qualified names, namespace declarations, and name prefixing
  #    for SVG and extensions.
  # 
  #    Section B declares parameter entities used to provide
  #    namespace-qualified names for all SVG element types:
  
  # Section A: SVG XML Namespace Framework ::::::::::::::::::::::
  
  # 1. Declare a %SVG.prefixed; conditional section keyword, used
  # to activate namespace prefixing. The default value should
  # inherit '%NS.prefixed;' from the DTD driver, so that unless
  # overridden, the default behaviour follows the overall DTD
  # prefixing scheme.
  
  # 2. Declare a parameter entity (eg., %SVG.xmlns;) containing
  # the URI reference used to identify the SVG namespace:
  
  # 3. Declare parameter entities (eg., %SVG.prefix;) containing
  # the default namespace prefix string(s) to use when prefixing
  # is enabled. This may be overridden in the DTD driver or the
  # internal subset of an document instance. If no default prefix
  # is desired, this may be declared as an empty string.
  
  # 4. Declare parameter entities (eg., %SVG.pfx;) containing the
  # colonized prefix(es) (eg., '%SVG.prefix;:') used when
  # prefixing is active, an empty string when it is not.
  
  # 5. The parameter entity %SVG.xmlns.extra.attrib; may be
  # redeclared to contain any non-SVG namespace declaration
  # attributes for namespaces embedded in SVG. The default
  # is an empty string.
  
  # Declare a parameter entity XLINK.xmlns.attrib containing
  # the XML Namespace declarations for XLink.
  XLINK.xmlns.attrib = empty
  # Declare a parameter entity %NS.decl.attrib; containing
  # all XML Namespace declarations used in the DTD, plus the
  # xmlns declaration for SVG, its form dependent on whether
  # prefixing is active.
  
  # Declare a parameter entity %SVG.xmlns.attrib; containing
  # all XML namespace declaration attributes used by SVG,
  # including a default xmlns attribute when prefixing is
  # inactive.
  SVG.xmlns.attrib = XLINK.xmlns.attrib
  # Section B: SVG Qualified Names ::::::::::::::::::::::::::::::
  
  # 6. This section declares parameter entities used to provide
  # namespace-qualified names for all SVG element types.
  
  # module: svg-structure.mod .........................
  
  # module: svg-conditional.mod .......................
  
  # module: svg-image.mod .............................
  
  # module: svg-style.mod .............................
  
  # module: svg-shape.mod .............................
  
  # module: svg-text.mod ..............................
  
  # module: svg-marker.mod ............................
  
  # module: svg-profile.mod ...........................
  
  # module: svg-gradient.mod ..........................
  
  # module: svg-pattern.mod ...........................
  
  # module: svg-clip.mod ..............................
  
  # module: svg-mask.mod ..............................
  
  # module: svg-filter.mod ............................
  
  # module: svg-cursor.mod ............................
  
  # module: svg-hyperlink.mod .........................
  
  # module: svg-view.mod ..............................
  
  # module: svg-script.mod ............................
  
  # module: svg-animation.mod .........................
  
  # module: svg-font.mod ..............................
  
  # module: svg-extensibility.mod .....................
  
  # end of svg-qname.mod
  
  # instantiate the Document Model declared in the DTD driver
  
  # .......................................................................
  
  # SVG 1.1 Document Model Module .........................................
  
  # file: svg11-model.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg11-model.mod,v 1.3 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Document Model//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-model.mod"
  # 
  # .......................................................................
  
  # SVG 1.1 Document Model
  # 
  # This module describes the groupings of elements that make up
  # common content models for SVG elements.
  
  # module: svg-structure.mod .........................
  SVG.Description.extra.class = notAllowed
  SVG.Description.class =
    desc | title | metadata | SVG.Description.extra.class
  SVG.Use.extra.class = notAllowed
  SVG.Use.class = use | SVG.Use.extra.class
  SVG.Structure.extra.class = notAllowed
  SVG.Structure.class =
    svg | g | defs | symbol | SVG.Use.class | SVG.Structure.extra.class
  # module: svg-conditional.mod .......................
  SVG.Conditional.extra.class = notAllowed
  SVG.Conditional.class = switch | SVG.Conditional.extra.class
  # module: svg-image.mod .............................
  SVG.Image.extra.class = notAllowed
  SVG.Image.class = image | SVG.Image.extra.class
  # module: svg-style.mod .............................
  SVG.Style.extra.class = notAllowed
  SVG.Style.class = style | SVG.Style.extra.class
  # module: svg-shape.mod .............................
  SVG.Shape.extra.class = notAllowed
  SVG.Shape.class =
    path
    | rect
    | circle
    | line
    | ellipse
    | polyline
    | polygon
    | SVG.Shape.extra.class
  # module: svg-text.mod ..............................
  SVG.Text.extra.class = notAllowed
  SVG.Text.class = \text | altGlyphDef | SVG.Text.extra.class
  SVG.TextContent.extra.class = notAllowed
  SVG.TextContent.class =
    tspan | tref | textPath | altGlyph | SVG.TextContent.extra.class
  # module: svg-marker.mod ............................
  SVG.Marker.extra.class = notAllowed
  SVG.Marker.class = marker | SVG.Marker.extra.class
  # module: svg-profile.mod ...........................
  SVG.ColorProfile.extra.class = notAllowed
  SVG.ColorProfile.class = color-profile | SVG.ColorProfile.extra.class
  # module: svg-gradient.mod ..........................
  SVG.Gradient.extra.class = notAllowed
  SVG.Gradient.class =
    linearGradient | radialGradient | SVG.Gradient.extra.class
  # module: svg-pattern.mod ...........................
  SVG.Pattern.extra.class = notAllowed
  SVG.Pattern.class = svgpattern | SVG.Pattern.extra.class
  # module: svg-clip.mod ..............................
  SVG.Clip.extra.class = notAllowed
  SVG.Clip.class = clipPath | SVG.Clip.extra.class
  # module: svg-mask.mod ..............................
  SVG.Mask.extra.class = notAllowed
  SVG.Mask.class = mask | SVG.Mask.extra.class
  # module: svg-filter.mod ............................
  SVG.Filter.extra.class = notAllowed
  SVG.Filter.class = filter | SVG.Filter.extra.class
  SVG.FilterPrimitive.extra.class = notAllowed
  SVG.FilterPrimitive.class =
    feBlend
    | feColorMatrix
    | feComponentTransfer
    | feComposite
    | feConvolveMatrix
    | feDiffuseLighting
    | feDisplacementMap
    | feFlood
    | feGaussianBlur
    | feImage
    | feMerge
    | feMorphology
    | feOffset
    | feSpecularLighting
    | feTile
    | feTurbulence
    | SVG.FilterPrimitive.extra.class
  # module: svg-cursor.mod ............................
  SVG.Cursor.extra.class = notAllowed
  SVG.Cursor.class = cursor | SVG.Cursor.extra.class
  # module: svg-hyperlink.mod .........................
  SVG.Hyperlink.extra.class = notAllowed
  SVG.Hyperlink.class = a | SVG.Hyperlink.extra.class
  # module: svg-view.mod ..............................
  SVG.View.extra.class = notAllowed
  SVG.View.class = view | SVG.View.extra.class
  # module: svg-script.mod ............................
  SVG.Script.extra.class = notAllowed
  SVG.Script.class = script | SVG.Script.extra.class
  # module: svg-animation.mod .........................
  SVG.Animation.extra.class = notAllowed
  SVG.Animation.class =
    animate
    | set
    | animateMotion
    | animateColor
    | animateTransform
    | SVG.Animation.extra.class
  # module: svg-font.mod ..............................
  SVG.Font.extra.class = notAllowed
  SVG.Font.class = font | font-face | SVG.Font.extra.class
  # module: svg-extensibility.mod .....................
  SVG.Extensibility.extra.class = notAllowed
  SVG.Extensibility.class =
    foreignObject | SVG.Extensibility.extra.class
  # end of svg11-model.mod
  
  # instantiate the Attribute Collection declared in the DTD driver
  
  # .......................................................................
  
  # SVG 1.1 Attribute Collection Module ...................................
  
  # file: svg11-attribs.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg11-attribs.mod,v 1.4 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Attribute Collection//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-attribs.mod"
  # 
  # .......................................................................
  
  # SVG 1.1 Attribute Collection
  # 
  # This module defines the set of common attributes that can be present
  # on many SVG elements.
  
  # module: svg-conditional.mod .......................
  ExtensionList.datatype = string
  FeatureList.datatype = string
  SVG.Conditional.extra.attrib = empty
  SVG.Conditional.attrib =
    attribute requiredFeatures { FeatureList.datatype }?,
    attribute requiredExtensions { ExtensionList.datatype }?,
    attribute systemLanguage { LanguageCodes.datatype }?,
    SVG.Conditional.extra.attrib
  # module: svg-style.mod .............................
  ClassList.datatype = string
  StyleSheet.datatype = string
  SVG.Style.extra.attrib = empty
  SVG.Style.attrib =
    attribute style { StyleSheet.datatype }?,
    attribute class { ClassList.datatype }?,
    SVG.Style.extra.attrib
  # module: svg-text.mod ..............................
  BaselineShiftValue.datatype = string
  FontFamilyValue.datatype = string
  FontSizeValue.datatype = string
  FontSizeAdjustValue.datatype = string
  GlyphOrientationHorizontalValue.datatype = string
  GlyphOrientationVerticalValue.datatype = string
  KerningValue.datatype = string
  SpacingValue.datatype = string
  TextDecorationValue.datatype = string
  SVG.Text.extra.attrib = empty
  SVG.Text.attrib =
    attribute writing-mode {
      "lr-tb" | "rl-tb" | "tb-rl" | "lr" | "rl" | "tb" | "inherit"
    }?,
    SVG.Text.extra.attrib
  SVG.TextContent.extra.attrib = empty
  SVG.TextContent.attrib =
    attribute alignment-baseline {
      "auto"
      | "baseline"
      | "before-edge"
      | "text-before-edge"
      | "middle"
      | "central"
      | "after-edge"
      | "text-after-edge"
      | "ideographic"
      | "alphabetic"
      | "hanging"
      | "mathematical"
      | "inherit"
    }?,
    attribute baseline-shift { BaselineShiftValue.datatype }?,
    attribute direction { "ltr" | "rtl" | "inherit" }?,
    attribute dominant-baseline {
      "auto"
      | "use-script"
      | "no-change"
      | "reset-size"
      | "ideographic"
      | "alphabetic"
      | "hanging"
      | "mathematical"
      | "central"
      | "middle"
      | "text-after-edge"
      | "text-before-edge"
      | "inherit"
    }?,
    attribute glyph-orientation-horizontal {
      GlyphOrientationHorizontalValue.datatype
    }?,
    attribute glyph-orientation-vertical {
      GlyphOrientationVerticalValue.datatype
    }?,
    attribute kerning { KerningValue.datatype }?,
    attribute letter-spacing { SpacingValue.datatype }?,
    attribute text-anchor { "start" | "middle" | "end" | "inherit" }?,
    attribute text-decoration { TextDecorationValue.datatype }?,
    attribute unicode-bidi {
      "normal" | "embed" | "bidi-override" | "inherit"
    }?,
    attribute word-spacing { SpacingValue.datatype }?,
    SVG.TextContent.extra.attrib
  SVG.Font.extra.attrib = empty
  SVG.Font.attrib =
    attribute font-family { FontFamilyValue.datatype }?,
    attribute font-size { FontSizeValue.datatype }?,
    attribute font-size-adjust { FontSizeAdjustValue.datatype }?,
    attribute font-stretch {
      "normal"
      | "wider"
      | "narrower"
      | "ultra-condensed"
      | "extra-condensed"
      | "condensed"
      | "semi-condensed"
      | "semi-expanded"
      | "expanded"
      | "extra-expanded"
      | "ultra-expanded"
      | "inherit"
    }?,
    attribute font-style {
      "normal" | "italic" | "oblique" | "inherit"
    }?,
    attribute font-variant { "normal" | "small-caps" | "inherit" }?,
    attribute font-weight {
      "normal"
      | "bold"
      | "bolder"
      | "lighter"
      | "100"
      | "200"
      | "300"
      | "400"
      | "500"
      | "600"
      | "700"
      | "800"
      | "900"
      | "inherit"
    }?,
    SVG.Font.extra.attrib
  # module: svg-marker.mod ............................
  MarkerValue.datatype = string
  SVG.Marker.extra.attrib = empty
  SVG.Marker.attrib =
    attribute marker-start { MarkerValue.datatype }?,
    attribute marker-mid { MarkerValue.datatype }?,
    attribute marker-end { MarkerValue.datatype }?,
    SVG.Marker.extra.attrib
  # module: svg-profile.mod ...........................
  SVG.ColorProfile.extra.attrib = empty
  SVG.ColorProfile.attrib =
    attribute color-profile { text }?,
    SVG.ColorProfile.extra.attrib
  # module: svg-gradient.mod ..........................
  NumberOrPercentage.datatype = string
  SVG.Gradient.extra.attrib = empty
  SVG.Gradient.attrib =
    attribute stop-color { SVGColor.datatype }?,
    attribute stop-opacity { OpacityValue.datatype }?,
    SVG.Gradient.extra.attrib
  # module: svg-clip.mod ..............................
  ClipPathValue.datatype = string
  SVG.Clip.extra.attrib = empty
  SVG.Clip.attrib =
    attribute clip-path { ClipPathValue.datatype }?,
    attribute clip-rule { ClipFillRule.datatype }?,
    SVG.Clip.extra.attrib
  # module: svg-mask.mod ..............................
  MaskValue.datatype = string
  SVG.Mask.extra.attrib = empty
  SVG.Mask.attrib =
    attribute mask { MaskValue.datatype }?,
    SVG.Mask.extra.attrib
  # module: svg-filter.mod ............................
  FilterValue.datatype = string
  NumberOptionalNumber.datatype = string
  SVG.Filter.extra.attrib = empty
  SVG.Filter.attrib =
    attribute filter { FilterValue.datatype }?,
    SVG.Filter.extra.attrib
  SVG.FilterColor.extra.attrib = empty
  SVG.FilterColor.attrib =
    attribute color-interpolation-filters {
      "auto" | "sRGB" | "linearRGB" | "inherit"
    }?,
    SVG.FilterColor.extra.attrib
  # module: svg-cursor.mod ............................
  CursorValue.datatype = string
  SVG.Cursor.extra.attrib = empty
  SVG.Cursor.attrib =
    attribute cursor { CursorValue.datatype }?,
    SVG.Cursor.extra.attrib
  # end of svg11-attribs.mod
  
  # end of svg-framework.mod
  
  # Post-Framework Redeclaration Placeholder ....................
  
  # :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  # Core Attribute Module .......................................
  
  # .......................................................................
  
  # SVG 1.1 Core Attribute Module .........................................
  
  # file: svg-core-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-core-attrib.mod,v 1.3 2002/04/28 13:50:23 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Core Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-core-attrib.mod"
  # 
  # .......................................................................
  
  # Core Attribute
  # 
  #    id, xml:base, xml:lang, xml:space
  # 
  # This module defines the core set of attributes that can be present on
  # any element.
  SVG.id.attrib = attribute id { xsd:ID }?
  SVG.base.attrib = attribute xml:base { URI.datatype }?
  SVG.lang.attrib = attribute xml:lang { LanguageCode.datatype }?
  SVG.space.attrib = attribute xml:space { "default" | "preserve" }?
  SVG.Core.extra.attrib = empty
  SVG.Core.attrib =
    SVG.id.attrib,
    SVG.base.attrib,
    SVG.lang.attrib,
    SVG.space.attrib,
    SVG.Core.extra.attrib
  # end of svg-core-attrib.mod
  
  # Container Attribute Module ..................................
  
  # .......................................................................
  
  # SVG 1.1 Container Attribute Module ....................................
  
  # file: svg-container-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-container-attrib.mod,v 1.2 2002/04/20 18:07:42 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Container Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-container-attrib.mod"
  # 
  # .......................................................................
  
  # Container Attribute
  # 
  #    enable-background
  # 
  # This module defines the Container attribute set.
  
  # 'enable-background' property/attribute value (e.g., 'new', 'accumulate')
  EnableBackgroundValue.datatype = string
  SVG.enable-background.attrib =
    attribute enable-background { EnableBackgroundValue.datatype }?
  SVG.Container.extra.attrib = empty
  SVG.Container.attrib =
    SVG.enable-background.attrib, SVG.Container.extra.attrib
  # end of svg-container-attrib.mod
  
  # Viewport Attribute Module ...................................
  
  # .......................................................................
  
  # SVG 1.1 Viewport Attribute Module .....................................
  
  # file: svg-viewport-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-viewport-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Viewport Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-viewport-attrib.mod"
  # 
  # .......................................................................
  
  # Viewport Attribute
  # 
  #    clip, overflow
  # 
  # This module defines the Viewport attribute set.
  
  # 'clip' property/attribute value (e.g., 'auto', rect(...))
  ClipValue.datatype = string
  SVG.clip.attrib = attribute clip { ClipValue.datatype }?
  SVG.overflow.attrib =
    attribute overflow {
      "visible" | "hidden" | "scroll" | "auto" | "inherit"
    }?
  SVG.Viewport.extra.attrib = empty
  SVG.Viewport.attrib =
    SVG.clip.attrib, SVG.overflow.attrib, SVG.Viewport.extra.attrib
  # end of svg-viewport-attrib.mod
  
  # Paint Attribute Module ......................................
  
  # .......................................................................
  
  # SVG 1.1 Paint Attribute Module ........................................
  
  # file: svg-paint-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-paint-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Paint Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-paint-attrib.mod"
  # 
  # .......................................................................
  
  # Paint Attribute
  # 
  #    fill, fill-rule, stroke, stroke-dasharray, stroke-dashoffset,
  #    stroke-linecap, stroke-linejoin, stroke-miterlimit, stroke-width, color,
  #    color-interpolation, color-rendering
  # 
  # This module defines the Paint and Color attribute sets.
  
  # a 'fill' or 'stroke' property/attribute value: <paint>
  Paint.datatype = string
  # 'stroke-dasharray' property/attribute value (e.g., 'none', list of <number>s)
  StrokeDashArrayValue.datatype = string
  # 'stroke-dashoffset' property/attribute value (e.g., 'none', <legnth>)
  StrokeDashOffsetValue.datatype = string
  # 'stroke-miterlimit' property/attribute value (e.g., <number>)
  StrokeMiterLimitValue.datatype = string
  # 'stroke-width' property/attribute value (e.g., <length>)
  StrokeWidthValue.datatype = string
  SVG.fill.attrib = attribute fill { Paint.datatype }?
  SVG.fill-rule.attrib = attribute fill-rule { ClipFillRule.datatype }?
  SVG.stroke.attrib = attribute stroke { Paint.datatype }?
  SVG.stroke-dasharray.attrib =
    attribute stroke-dasharray { StrokeDashArrayValue.datatype }?
  SVG.stroke-dashoffset.attrib =
    attribute stroke-dashoffset { StrokeDashOffsetValue.datatype }?
  SVG.stroke-linecap.attrib =
    attribute stroke-linecap {
      "butt" | "round" | "square" | "inherit"
    }?
  SVG.stroke-linejoin.attrib =
    attribute stroke-linejoin {
      "miter" | "round" | "bevel" | "inherit"
    }?
  SVG.stroke-miterlimit.attrib =
    attribute stroke-miterlimit { StrokeMiterLimitValue.datatype }?
  SVG.stroke-width.attrib =
    attribute stroke-width { StrokeWidthValue.datatype }?
  SVG.Paint.extra.attrib = empty
  SVG.Paint.attrib =
    SVG.fill.attrib,
    SVG.fill-rule.attrib,
    SVG.stroke.attrib,
    SVG.stroke-dasharray.attrib,
    SVG.stroke-dashoffset.attrib,
    SVG.stroke-linecap.attrib,
    SVG.stroke-linejoin.attrib,
    SVG.stroke-miterlimit.attrib,
    SVG.stroke-width.attrib,
    SVG.Paint.extra.attrib
  SVG.color.attrib = attribute color { Color.datatype }?
  SVG.color-interpolation.attrib =
    attribute color-interpolation {
      "auto" | "sRGB" | "linearRGB" | "inherit"
    }?
  SVG.color-rendering.attrib =
    attribute color-rendering {
      "auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"
    }?
  SVG.Color.extra.attrib = empty
  SVG.Color.attrib =
    SVG.color.attrib,
    SVG.color-interpolation.attrib,
    SVG.color-rendering.attrib,
    SVG.Color.extra.attrib
  # end of svg-paint-attrib.mod
  
  # Paint Opacity Attribute Module ..............................
  
  # .......................................................................
  
  # SVG 1.1 Paint Opacity Attribute Module ................................
  
  # file: svg-opacity-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-opacity-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Paint Opacity Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-opacity-attrib.mod"
  # 
  # .......................................................................
  
  # Paint Opacity Attribute
  # 
  #    opacity, fill-opacity, stroke-opacity
  # 
  # This module defines the Opacity attribute set.
  SVG.opacity.attrib = attribute opacity { OpacityValue.datatype }?
  SVG.fill-opacity.attrib =
    attribute fill-opacity { OpacityValue.datatype }?
  SVG.stroke-opacity.attrib =
    attribute stroke-opacity { OpacityValue.datatype }?
  SVG.Opacity.extra.attrib = empty
  SVG.Opacity.attrib =
    SVG.opacity.attrib,
    SVG.fill-opacity.attrib,
    SVG.stroke-opacity.attrib,
    SVG.Opacity.extra.attrib
  # end of svg-opacity-attrib.mod
  
  # Graphics Attribute Module ...................................
  
  # .......................................................................
  
  # SVG 1.1 Graphics Attribute Module .....................................
  
  # file: svg-graphics-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-graphics-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Graphics Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-graphics-attrib.mod"
  # 
  # .......................................................................
  
  # Graphics Attribute
  # 
  #    display, image-rendering, pointer-events, shape-rendering,
  #    text-rendering, visibility
  # 
  # This module defines the Graphics attribute set.
  SVG.display.attrib =
    attribute display {
      "inline"
      | "block"
      | "list-item"
      | "run-in"
      | "compact"
      | "marker"
      | "table"
      | "inline-table"
      | "table-row-group"
      | "table-header-group"
      | "table-footer-group"
      | "table-row"
      | "table-column-group"
      | "table-column"
      | "table-cell"
      | "table-caption"
      | "none"
      | "inherit"
    }?
  SVG.image-rendering.attrib =
    attribute image-rendering {
      "auto" | "optimizeSpeed" | "optimizeQuality" | "inherit"
    }?
  SVG.pointer-events.attrib =
    attribute pointer-events {
      "visiblePainted"
      | "visibleFill"
      | "visibleStroke"
      | "visible"
      | "painted"
      | "fill"
      | "stroke"
      | "all"
      | "none"
      | "inherit"
    }?
  SVG.shape-rendering.attrib =
    attribute shape-rendering {
      "auto"
      | "optimizeSpeed"
      | "crispEdges"
      | "geometricPrecision"
      | "inherit"
    }?
  SVG.text-rendering.attrib =
    attribute text-rendering {
      "auto"
      | "optimizeSpeed"
      | "optimizeLegibility"
      | "geometricPrecision"
      | "inherit"
    }?
  SVG.visibility.attrib =
    attribute visibility { "visible" | "hidden" | "inherit" }?
  SVG.Graphics.extra.attrib = empty
  SVG.Graphics.attrib =
    SVG.display.attrib,
    SVG.image-rendering.attrib,
    SVG.pointer-events.attrib,
    SVG.shape-rendering.attrib,
    SVG.text-rendering.attrib,
    SVG.visibility.attrib,
    SVG.Graphics.extra.attrib
  # end of svg-graphics-attrib.mod
  
  # Document Events Attribute Module ............................
  
  # .......................................................................
  
  # SVG 1.1 Document Events Attribute Module ..............................
  
  # file: svg-docevents-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-docevents-attrib.mod,v 1.2 2002/04/20 18:07:42 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Document Events Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-docevents-attrib.mod"
  # 
  # .......................................................................
  
  # Document Events Attribute
  # 
  #    onunload, onabort, onerror, onresize, onscroll, onzoom
  # 
  # This module defines the DocumentEvents attribute set.
  SVG.onunload.attrib = attribute onunload { Script.datatype }?
  SVG.onabort.attrib = attribute onabort { Script.datatype }?
  SVG.onerror.attrib = attribute onerror { Script.datatype }?
  SVG.onresize.attrib = attribute onresize { Script.datatype }?
  SVG.onscroll.attrib = attribute onscroll { Script.datatype }?
  SVG.onzoom.attrib = attribute onzoom { Script.datatype }?
  SVG.DocumentEvents.extra.attrib = empty
  SVG.DocumentEvents.attrib =
    SVG.onunload.attrib,
    SVG.onabort.attrib,
    SVG.onerror.attrib,
    SVG.onresize.attrib,
    SVG.onscroll.attrib,
    SVG.onzoom.attrib,
    SVG.DocumentEvents.extra.attrib
  # end of svg-docevents-attrib.mod
  
  # Graphical Element Events Attribute Module ...................
  
  # .......................................................................
  
  # SVG 1.1 Graphical Element Events Attribute Module .....................
  
  # file: svg-graphevents-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-graphevents-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Graphical Element Events Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-graphevents-attrib.mod"
  # 
  # .......................................................................
  
  # Graphical Element Events Attribute
  # 
  #    onfocusin, onfocusout, onactivate, onclick, onmousedown, onmouseup,
  #    onmouseover, onmousemove, onmouseout, onload
  # 
  # This module defines the GraphicalEvents attribute set.
  SVG.onfocusin.attrib = attribute onfocusin { Script.datatype }?
  SVG.onfocusout.attrib = attribute onfocusout { Script.datatype }?
  SVG.onactivate.attrib = attribute onactivate { Script.datatype }?
  SVG.onclick.attrib = attribute onclick { Script.datatype }?
  SVG.onmousedown.attrib = attribute onmousedown { Script.datatype }?
  SVG.onmouseup.attrib = attribute onmouseup { Script.datatype }?
  SVG.onmouseover.attrib = attribute onmouseover { Script.datatype }?
  SVG.onmousemove.attrib = attribute onmousemove { Script.datatype }?
  SVG.onmouseout.attrib = attribute onmouseout { Script.datatype }?
  SVG.onload.attrib = attribute onload { Script.datatype }?
  SVG.GraphicalEvents.extra.attrib = empty
  SVG.GraphicalEvents.attrib =
    SVG.onfocusin.attrib,
    SVG.onfocusout.attrib,
    SVG.onactivate.attrib,
    SVG.onclick.attrib,
    SVG.onmousedown.attrib,
    SVG.onmouseup.attrib,
    SVG.onmouseover.attrib,
    SVG.onmousemove.attrib,
    SVG.onmouseout.attrib,
    SVG.onload.attrib,
    SVG.GraphicalEvents.extra.attrib
  # end of svg-graphevents-attrib.mod
  
  # Animation Events Attribute Module ...........................
  
  # .......................................................................
  
  # SVG 1.1 Animation Events Attribute Module .............................
  
  # file: svg-animevents-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-animevents-attrib.mod,v 1.3 2002/04/28 13:50:23 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 Animation Events Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-animevents-attrib.mod"
  # 
  # .......................................................................
  
  # Animation Events Attribute
  # 
  #    onbegin, onend, onrepeat, onload
  # 
  # This module defines the AnimationEvents attribute set.
  SVG.onbegin.attrib = attribute onbegin { Script.datatype }?
  SVG.onend.attrib = attribute onend { Script.datatype }?
  SVG.onrepeat.attrib = attribute onrepeat { Script.datatype }?
  SVG.AnimationEvents.extra.attrib = empty
  SVG.AnimationEvents.attrib =
    SVG.onbegin.attrib,
    SVG.onend.attrib,
    SVG.onrepeat.attrib,
    SVG.onload.attrib,
    SVG.AnimationEvents.extra.attrib
  # end of svg-animevents-attrib.mod
  
  # XLink Attribute Module ......................................
  
  # .......................................................................
  
  # SVG 1.1 XLink Attribute Module ........................................
  
  # file: svg-xlink-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-xlink-attrib.mod,v 1.2 2002/04/20 18:07:43 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 XLink Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-xlink-attrib.mod"
  # 
  # .......................................................................
  
  # XLink Attribute
  # 
  #   type, href, role, arcrole, title, show, actuate
  # 
  # This module defines the XLink, XLinkRequired, XLinkEmbed, and
  # XLinkReplace attribute set.
  SVG.XLink.extra.attrib = empty
  SVG.XLink.attrib =
    XLINK.xmlns.attrib,
    [ a:defaultValue = "simple" ] attribute xlink:type { "simple" }?,
    attribute xlink:href { URI.datatype }?,
    attribute xlink:role { URI.datatype }?,
    attribute xlink:arcrole { URI.datatype }?,
    attribute xlink:title { text }?,
    [ a:defaultValue = "other" ] attribute xlink:show { "other" }?,
    [ a:defaultValue = "onLoad" ] attribute xlink:actuate { "onLoad" }?,
    SVG.XLink.extra.attrib
  SVG.XLinkRequired.extra.attrib = empty
  SVG.XLinkRequired.attrib =
    XLINK.xmlns.attrib,
    [ a:defaultValue = "simple" ] attribute xlink:type { "simple" }?,
    attribute xlink:href { URI.datatype },
    attribute xlink:role { URI.datatype }?,
    attribute xlink:arcrole { URI.datatype }?,
    attribute xlink:title { text }?,
    [ a:defaultValue = "other" ] attribute xlink:show { "other" }?,
    [ a:defaultValue = "onLoad" ] attribute xlink:actuate { "onLoad" }?,
    SVG.XLinkRequired.extra.attrib
  SVG.XLinkEmbed.extra.attrib = empty
  SVG.XLinkEmbed.attrib =
    XLINK.xmlns.attrib,
    [ a:defaultValue = "simple" ] attribute xlink:type { "simple" }?,
    attribute xlink:href { URI.datatype },
    attribute xlink:role { URI.datatype }?,
    attribute xlink:arcrole { URI.datatype }?,
    attribute xlink:title { text }?,
    [ a:defaultValue = "embed" ] attribute xlink:show { "embed" }?,
    [ a:defaultValue = "onLoad" ] attribute xlink:actuate { "onLoad" }?,
    SVG.XLinkEmbed.extra.attrib
  SVG.XLinkReplace.extra.attrib = empty
  SVG.XLinkReplace.attrib =
    XLINK.xmlns.attrib,
    [ a:defaultValue = "simple" ] attribute xlink:type { "simple" }?,
    attribute xlink:href { URI.datatype },
    attribute xlink:role { URI.datatype }?,
    attribute xlink:arcrole { URI.datatype }?,
    attribute xlink:title { text }?,
    [ a:defaultValue = "replace" ]
    attribute xlink:show { "new" | "replace" }?,
    [ a:defaultValue = "onRequest" ]
    attribute xlink:actuate { "onRequest" }?,
    SVG.XLinkReplace.extra.attrib
  # end of svg-xlink-attrib.mod
  
  # External Resources Attribute Module .........................
  
  # .......................................................................
  
  # SVG 1.1 External Resources Attribute Module ...........................
  
  # file: svg-extresources-attrib.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-extresources-attrib.mod,v 1.2 2002/04/20 18:07:42 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ENTITIES SVG 1.1 External Resources Attribute//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-extresources-attrib.mod"
  # 
  # .......................................................................
  
  # External Resources Attribute
  # 
  #    externalResourcesRequired
  # 
  # This module defines the External attribute set.
  SVG.externalResourcesRequired.attrib =
    attribute externalResourcesRequired { Boolean.datatype }?
  SVG.External.extra.attrib = empty
  SVG.External.attrib =
    SVG.externalResourcesRequired.attrib, SVG.External.extra.attrib
  # end of svg-extresources-attrib.mod
  
  # :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  
  # Structure Module ............................................
  
  # .......................................................................
  
  # SVG 1.1 Structure Module ..............................................
  
  # file: svg-structure.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-structure.mod,v 1.5 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Structure//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-structure.mod"
  # 
  # .......................................................................
  
  # Structure
  # 
  #    svg, g, defs, desc, title, metadata, symbol, use
  # 
  # This module declares the major structural elements and their attributes.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Description.class .............................
  
  # SVG.Use.class .....................................
  
  # SVG.Structure.class ...............................
  
  # SVG.Presentation.attrib ...........................
  SVG.Presentation.extra.attrib = empty
  SVG.Presentation.attrib =
    SVG.Container.attrib,
    SVG.Viewport.attrib,
    SVG.Text.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Marker.attrib,
    SVG.ColorProfile.attrib,
    SVG.Gradient.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.FilterColor.attrib,
    SVG.Cursor.attrib,
    attribute flood-color { SVGColor.datatype }?,
    attribute flood-opacity { OpacityValue.datatype }?,
    attribute lighting-color { SVGColor.datatype }?,
    SVG.Presentation.extra.attrib
  # svg: SVG Document Element .........................
  SVG.svg.extra.content = notAllowed
  SVG.svg.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.svg.extra.content)*
  svg = element ns2:svg { attlist.svg, SVG.svg.content }
  # end of SVG.svg.element
  attlist.svg &=
    SVG.xmlns.attrib,
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.DocumentEvents.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute viewBox { ViewBoxSpec.datatype }?,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?,
    [ a:defaultValue = "magnify" ]
    attribute zoomAndPan { "disable" | "magnify" }?,
    [ a:defaultValue = "1.1" ] attribute version { string "1.1" }?,
    attribute baseProfile { Text.datatype }?,
    [ a:defaultValue = "text/ecmascript" ]
    attribute contentScriptType { ContentType.datatype }?,
    [ a:defaultValue = "text/css" ]
    attribute contentStyleType { ContentType.datatype }?
  # end of SVG.svg.attlist
  
  # g: Group Element ..................................
  SVG.g.extra.content = notAllowed
  SVG.g.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.g.extra.content)*
  g = element ns2:g { attlist.g, SVG.g.content }
  # end of SVG.g.element
  attlist.g &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute transform { TransformList.datatype }?
  # end of SVG.g.attlist
  
  # defs: Definisions Element .........................
  SVG.defs.extra.content = notAllowed
  SVG.defs.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.defs.extra.content)*
  defs = element ns2:defs { attlist.defs, SVG.defs.content }
  # end of SVG.defs.element
  attlist.defs &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute transform { TransformList.datatype }?
  # end of SVG.defs.attlist
  
  # desc: Description Element .........................
  SVG.desc.extra.content = notAllowed
  SVG.desc.content = (text | SVG.desc.extra.content)*
  desc = element ns2:desc { attlist.desc, SVG.desc.content }
  # end of SVG.desc.element
  attlist.desc &= SVG.Core.attrib, SVG.Style.attrib
  # end of SVG.desc.attlist
  
  # title: Title Element ..............................
  SVG.title.extra.content = notAllowed
  SVG.title.content = (text | SVG.title.extra.content)*
  title = element ns2:title { attlist.title, SVG.title.content }
  # end of SVG.title.element
  attlist.title &= SVG.Core.attrib, SVG.Style.attrib
  # end of SVG.title.attlist
  
  # metadata: Metadata Element ........................
  SVG.metadata.extra.content = notAllowed
  SVG.metadata.content = (text | SVG.metadata.extra.content)*
  metadata =
    element ns2:metadata { attlist.metadata, SVG.metadata.content }
  # end of SVG.metadata.element
  attlist.metadata &= SVG.Core.attrib
  # end of SVG.metadata.attlist
  
  # symbol: Symbol Element ............................
  SVG.symbol.extra.content = notAllowed
  SVG.symbol.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.symbol.extra.content)*
  symbol = element ns2:symbol { attlist.symbol, SVG.symbol.content }
  # end of SVG.symbol.element
  attlist.symbol &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute viewBox { ViewBoxSpec.datatype }?,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?
  # end of SVG.symbol.attlist
  
  # use: Use Element ..................................
  SVG.use.extra.content = notAllowed
  SVG.use.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.use.extra.content)*
  use = element ns2:use { attlist.use, SVG.use.content }
  # end of SVG.use.element
  attlist.use &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.XLinkEmbed.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.use.attlist
  
  # end of svg-structure.mod
  
  # Conditional Processing Module ...............................
  
  # .......................................................................
  
  # SVG 1.1 Conditional Processing Module .................................
  
  # file: svg-conditional.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-conditional.mod,v 1.4 2002/11/14 15:11:02 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Conditional Processing//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-conditional.mod"
  # 
  # .......................................................................
  
  # Conditional Processing
  # 
  #    switch
  # 
  # This module declares markup to provide support for conditional processing.
  
  # extension list specification
  
  # feature list specification
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Conditional.class .............................
  
  # SVG.Conditional.attrib ............................
  
  # SVG.Presentation.attrib ...........................
  
  # switch: Switch Element ............................
  SVG.switch.extra.content = notAllowed
  SVG.switch.content =
    SVG.Description.class*,
    (svg
     | g
     | use
     | \text
     | SVG.Animation.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Shape.class
     | SVG.Hyperlink.class
     | SVG.Extensibility.class
     | SVG.switch.extra.content)*
  switch = element ns2:switch { attlist.switch, SVG.switch.content }
  # end of SVG.switch.element
  attlist.switch &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute transform { TransformList.datatype }?
  # end of SVG.switch.attlist
  
  # end of svg-conditional.mod
  
  # Image Module ................................................
  
  # .......................................................................
  
  # SVG 1.1 Image Module ..................................................
  
  # file: svg-image.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-image.mod,v 1.4 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Image//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-image.mod"
  # 
  # .......................................................................
  
  # Image
  # 
  #    image
  # 
  # This module declares markup to provide support for image.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Image.class ...................................
  
  # image: Image Element ..............................
  SVG.image.extra.content = notAllowed
  SVG.image.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.image.extra.content)*
  image = element ns2:image { attlist.image, SVG.image.content }
  # end of SVG.image.element
  attlist.image &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Viewport.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.ColorProfile.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.XLinkEmbed.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype },
    attribute height { Length.datatype },
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.image.attlist
  
  # end of svg-image.mod
  
  # Style Module ................................................
  
  # .......................................................................
  
  # SVG 1.1 Style Module ..................................................
  
  # file: svg-style.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-style.mod,v 1.3 2002/10/24 17:40:16 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Style//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-style.mod"
  # 
  # .......................................................................
  
  # Style
  # 
  #    style
  # 
  # This module declares markup to provide support for stylesheet.
  
  # list of classes
  
  # comma-separated list of media descriptors.
  MediaDesc.datatype = string
  # style sheet data
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Style.class ...................................
  
  # SVG.Style.attrib ..................................
  
  # style: Style Element ..............................
  SVG.style.extra.content = notAllowed
  SVG.style.content = (text | SVG.style.extra.content)*
  style = element ns2:style { attlist.style, SVG.style.content }
  # end of SVG.style.element
  attlist.style &=
    [ a:defaultValue = "preserve" ] attribute xml:space { "preserve" }?,
    SVG.id.attrib,
    SVG.base.attrib,
    SVG.lang.attrib,
    SVG.Core.extra.attrib,
    attribute type { ContentType.datatype },
    attribute media { MediaDesc.datatype }?,
    attribute title { Text.datatype }?
  # end of SVG.style.attlist
  
  # end of svg-style.mod
  
  # Shape Module ................................................
  
  # .......................................................................
  
  # SVG 1.1 Shape Module ..................................................
  
  # file: svg-shape.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-shape.mod,v 1.3 2002/10/24 17:40:16 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Shape//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-shape.mod"
  # 
  # .......................................................................
  
  # Shape
  # 
  #    path, rect, circle, line, ellipse, polyline, polygon
  # 
  # This module declares markup to provide support for graphical shapes.
  
  # a list of points
  Points.datatype = string
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Shape.class ...................................
  
  # path: Path Element ................................
  SVG.path.extra.content = notAllowed
  SVG.path.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.path.extra.content)*
  path = element ns2:path { attlist.path, SVG.path.content }
  # end of SVG.path.element
  attlist.path &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Marker.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute d { PathData.datatype },
    attribute pathLength { Number.datatype }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.path.attlist
  
  # rect: Rectangle Element ...........................
  SVG.rect.extra.content = notAllowed
  SVG.rect.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.rect.extra.content)*
  rect = element ns2:rect { attlist.rect, SVG.rect.content }
  # end of SVG.rect.element
  attlist.rect &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype },
    attribute height { Length.datatype },
    attribute rx { Length.datatype }?,
    attribute ry { Length.datatype }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.rect.attlist
  
  # circle: Circle Element ............................
  SVG.circle.extra.content = notAllowed
  SVG.circle.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.circle.extra.content)*
  circle = element ns2:circle { attlist.circle, SVG.circle.content }
  # end of SVG.circle.element
  attlist.circle &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute cx { Coordinate.datatype }?,
    attribute cy { Coordinate.datatype }?,
    attribute r { Length.datatype },
    attribute transform { TransformList.datatype }?
  # end of SVG.circle.attlist
  
  # line: Line Element ................................
  SVG.line.extra.content = notAllowed
  SVG.line.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.line.extra.content)*
  line = element ns2:line { attlist.line, SVG.line.content }
  # end of SVG.line.element
  attlist.line &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Marker.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute x1 { Coordinate.datatype }?,
    attribute y1 { Coordinate.datatype }?,
    attribute x2 { Coordinate.datatype }?,
    attribute y2 { Coordinate.datatype }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.line.attlist
  
  # ellipse: Ellipse Element ..........................
  SVG.ellipse.extra.content = notAllowed
  SVG.ellipse.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.ellipse.extra.content)*
  ellipse = element ns2:ellipse { attlist.ellipse, SVG.ellipse.content }
  # end of SVG.ellipse.element
  attlist.ellipse &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute cx { Coordinate.datatype }?,
    attribute cy { Coordinate.datatype }?,
    attribute rx { Length.datatype },
    attribute ry { Length.datatype },
    attribute transform { TransformList.datatype }?
  # end of SVG.ellipse.attlist
  
  # polyline: Polyline Element ........................
  SVG.polyline.extra.content = notAllowed
  SVG.polyline.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.polyline.extra.content)*
  polyline =
    element ns2:polyline { attlist.polyline, SVG.polyline.content }
  # end of SVG.polyline.element
  attlist.polyline &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Marker.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute points { Points.datatype },
    attribute transform { TransformList.datatype }?
  # end of SVG.polyline.attlist
  
  # polygon: Polygon Element ..........................
  SVG.polygon.extra.content = notAllowed
  SVG.polygon.content =
    SVG.Description.class*,
    (SVG.Animation.class | SVG.polygon.extra.content)*
  polygon = element ns2:polygon { attlist.polygon, SVG.polygon.content }
  # end of SVG.polygon.element
  attlist.polygon &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Marker.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute points { Points.datatype },
    attribute transform { TransformList.datatype }?
  # end of SVG.polygon.attlist
  
  # end of svg-shape.mod
  
  # Text Module .................................................
  
  # .......................................................................
  
  # SVG 1.1 Text Module ...................................................
  
  # file: svg-text.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-text.mod,v 1.4 2002/10/24 17:40:16 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Text//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-text.mod"
  # 
  # .......................................................................
  
  # Text
  # 
  #    text, tspan, tref, textPath, altGlyph, altGlyphDef, altGlyphItem,
  #    glyphRef
  # 
  # This module declares markup to provide support for alternate glyph.
  
  # 'baseline-shift' property/attribute value (e.g., 'baseline', 'sub', etc.)
  
  # 'font-family' property/attribute value (i.e., list of fonts)
  
  # 'font-size' property/attribute value
  
  # 'font-size-adjust' property/attribute value
  
  # 'glyph-orientation-horizontal' property/attribute value (e.g., <angle>)
  
  # 'glyph-orientation-vertical' property/attribute value (e.g., 'auto', <angle>)
  
  # 'kerning' property/attribute value (e.g., 'auto', <length>)
  
  # 'letter-spacing' or 'word-spacing' property/attribute value (e.g., 'normal', <length>)
  
  # 'text-decoration' property/attribute value (e.g., 'none', 'underline')
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Text.class ....................................
  
  # SVG.TextContent.class .............................
  
  # SVG.Text.attrib ...................................
  
  # SVG.TextContent.attrib ............................
  
  # SVG.Font.attrib ...................................
  
  # text: Text Element ................................
  SVG.text.extra.content = notAllowed
  SVG.text.content =
    (text
     | SVG.Description.class
     | SVG.Animation.class
     | SVG.TextContent.class
     | SVG.Hyperlink.class
     | SVG.text.extra.content)*
  \text = element ns2:text { attlist.text, SVG.text.content }
  # end of SVG.text.element
  attlist.text &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Text.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute x { Coordinates.datatype }?,
    attribute y { Coordinates.datatype }?,
    attribute dx { Lengths.datatype }?,
    attribute dy { Lengths.datatype }?,
    attribute rotate { Numbers.datatype }?,
    attribute textLength { Length.datatype }?,
    attribute lengthAdjust { "spacing" | "spacingAndGlyphs" }?,
    attribute transform { TransformList.datatype }?
  # end of SVG.text.attlist
  
  # tspan: Text Span Element ..........................
  SVG.tspan.extra.content = notAllowed
  SVG.tspan.content =
    (text
     | tspan
     | tref
     | altGlyph
     | animate
     | set
     | animateColor
     | SVG.Description.class
     | SVG.Hyperlink.class
     | SVG.tspan.extra.content)*
  tspan = element ns2:tspan { attlist.tspan, SVG.tspan.content }
  # end of SVG.tspan.element
  attlist.tspan &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute x { Coordinates.datatype }?,
    attribute y { Coordinates.datatype }?,
    attribute dx { Lengths.datatype }?,
    attribute dy { Lengths.datatype }?,
    attribute rotate { Numbers.datatype }?,
    attribute textLength { Length.datatype }?,
    attribute lengthAdjust { "spacing" | "spacingAndGlyphs" }?
  # end of SVG.tspan.attlist
  
  # tref: Text Reference Element ......................
  SVG.tref.extra.content = notAllowed
  SVG.tref.content =
    (animate
     | set
     | animateColor
     | SVG.Description.class
     | SVG.tref.extra.content)*
  tref = element ns2:tref { attlist.tref, SVG.tref.content }
  # end of SVG.tref.element
  attlist.tref &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.XLinkRequired.attrib,
    SVG.External.attrib,
    attribute x { Coordinates.datatype }?,
    attribute y { Coordinates.datatype }?,
    attribute dx { Lengths.datatype }?,
    attribute dy { Lengths.datatype }?,
    attribute rotate { Numbers.datatype }?,
    attribute textLength { Length.datatype }?,
    attribute lengthAdjust { "spacing" | "spacingAndGlyphs" }?
  # end of SVG.tref.attlist
  
  # textPath: Text Path Element .......................
  SVG.textPath.extra.content = notAllowed
  SVG.textPath.content =
    (text
     | tspan
     | tref
     | altGlyph
     | animate
     | set
     | animateColor
     | SVG.Description.class
     | SVG.Hyperlink.class
     | SVG.textPath.extra.content)*
  textPath =
    element ns2:textPath { attlist.textPath, SVG.textPath.content }
  # end of SVG.textPath.element
  attlist.textPath &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.XLinkRequired.attrib,
    SVG.External.attrib,
    attribute startOffset { Length.datatype }?,
    attribute textLength { Length.datatype }?,
    attribute lengthAdjust { "spacing" | "spacingAndGlyphs" }?,
    attribute method { "align" | "stretch" }?,
    attribute spacing { "auto" | "exact" }?
  # end of SVG.textPath.attlist
  
  # altGlyph: Alternate Glyph Element .................
  SVG.altGlyph.extra.content = notAllowed
  SVG.altGlyph.content = (text | SVG.altGlyph.extra.content)*
  altGlyph =
    element ns2:altGlyph { attlist.altGlyph, SVG.altGlyph.content }
  # end of SVG.altGlyph.element
  attlist.altGlyph &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.Cursor.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute x { Coordinates.datatype }?,
    attribute y { Coordinates.datatype }?,
    attribute dx { Lengths.datatype }?,
    attribute dy { Lengths.datatype }?,
    attribute glyphRef { text }?,
    attribute format { text }?,
    attribute rotate { Numbers.datatype }?
  # end of SVG.altGlyph.attlist
  
  # altGlyphDef: Alternate Glyph Definition Element ...
  SVG.altGlyphDef.extra.content = notAllowed
  SVG.altGlyphDef.content =
    (glyphRef+ | altGlyphItem+) | SVG.altGlyphDef.extra.content
  altGlyphDef =
    element ns2:altGlyphDef {
      attlist.altGlyphDef, SVG.altGlyphDef.content
    }
  # end of SVG.altGlyphDef.element
  attlist.altGlyphDef &= SVG.Core.attrib
  # end of SVG.altGlyphDef.attlist
  
  # altGlyphItem: Alternate Glyph Item Element ........
  SVG.altGlyphItem.extra.content = notAllowed
  SVG.altGlyphItem.content = glyphRef+ | SVG.altGlyphItem.extra.content
  altGlyphItem =
    element ns2:altGlyphItem {
      attlist.altGlyphItem, SVG.altGlyphItem.content
    }
  # end of SVG.altGlyphItem.element
  attlist.altGlyphItem &= SVG.Core.attrib
  # end of SVG.altGlyphItem.attlist
  
  # glyphRef: Glyph Reference Element .................
  SVG.glyphRef.content = empty
  glyphRef =
    element ns2:glyphRef { attlist.glyphRef, SVG.glyphRef.content }
  # end of SVG.glyphRef.element
  attlist.glyphRef &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Font.attrib,
    SVG.XLink.attrib,
    attribute x { Number.datatype }?,
    attribute y { Number.datatype }?,
    attribute dx { Number.datatype }?,
    attribute dy { Number.datatype }?,
    attribute glyphRef { text }?,
    attribute format { text }?
  # end of SVG.glyphRef.attlist
  
  # end of svg-text.mod
  
  # Marker Module ...............................................
  
  # .......................................................................
  
  # SVG 1.1 Marker Module .................................................
  
  # file: svg-marker.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-marker.mod,v 1.4 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Marker//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-marker.mod"
  # 
  # .......................................................................
  
  # Marker
  # 
  #    marker
  # 
  # This module declares markup to provide support for marker.
  
  # 'marker' property/attribute value (e.g., 'none', <uri>)
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Marker.class ..................................
  
  # SVG.Marker.attrib .................................
  
  # SVG.Presentation.attrib ...........................
  
  # marker: Marker Element ............................
  SVG.marker.extra.content = notAllowed
  SVG.marker.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.marker.extra.content)*
  marker = element ns2:marker { attlist.marker, SVG.marker.content }
  # end of SVG.marker.element
  attlist.marker &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.External.attrib,
    attribute refX { Coordinate.datatype }?,
    attribute refY { Coordinate.datatype }?,
    attribute markerUnits { "strokeWidth" | "userSpaceOnUse" }?,
    attribute markerWidth { Length.datatype }?,
    attribute markerHeight { Length.datatype }?,
    attribute orient { text }?,
    attribute viewBox { ViewBoxSpec.datatype }?,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?
  # end of SVG.marker.attlist
  
  # end of svg-marker.mod
  
  # Color Profile Module ........................................
  
  # .......................................................................
  
  # SVG 1.1 Color Profile Module ..........................................
  
  # file: svg-profile.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-profile.mod,v 1.3 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Color Profile//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-profile.mod"
  # 
  # .......................................................................
  
  # Color Profile
  # 
  #    color-profile
  # 
  # This module declares markup to provide support for color profile.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.ColorProfile.class ............................
  
  # SVG.ColorProfile.attrib ...........................
  
  # color-profile: Color Profile Element ..............
  SVG.color-profile.extra.content = notAllowed
  SVG.color-profile.content =
    (SVG.Description.class | SVG.color-profile.extra.content)*
  color-profile =
    element ns2:color-profile {
      attlist.color-profile, SVG.color-profile.content
    }
  # end of SVG.color-profile.element
  attlist.color-profile &=
    SVG.Core.attrib,
    SVG.XLink.attrib,
    attribute local { text }?,
    attribute name { text },
    [ a:defaultValue = "auto" ]
    attribute rendering-intent {
      "auto"
      | "perceptual"
      | "relative-colorimetric"
      | "saturation"
      | "absolute-colorimetric"
    }?
  # end of SVG.color-profile.attlist
  
  # end of svg-profile.mod
  
  # Gradient Module .............................................
  
  # .......................................................................
  
  # SVG 1.1 Gradient Module ...............................................
  
  # file: svg-gradient.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-gradient.mod,v 1.3 2002/10/24 17:40:15 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Gradient//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-gradient.mod"
  # 
  # .......................................................................
  
  # Gradient
  # 
  #    linearGradient, radialGradient, stop
  # 
  # This module declares markup to provide support for gradient fill.
  
  # a <number> or a <percentage>
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Gradient.class ................................
  
  # SVG.Gradient.attrib ...............................
  
  # linearGradient: Linear Gradient Element ...........
  SVG.linearGradient.extra.content = notAllowed
  SVG.linearGradient.content =
    SVG.Description.class*,
    (stop
     | animate
     | set
     | animateTransform
     | SVG.linearGradient.extra.content)*
  linearGradient =
    element ns2:linearGradient {
      attlist.linearGradient, SVG.linearGradient.content
    }
  # end of SVG.linearGradient.element
  attlist.linearGradient &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.Gradient.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute x1 { Coordinate.datatype }?,
    attribute y1 { Coordinate.datatype }?,
    attribute x2 { Coordinate.datatype }?,
    attribute y2 { Coordinate.datatype }?,
    attribute gradientUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
    attribute gradientTransform { TransformList.datatype }?,
    attribute spreadMethod { "pad" | "reflect" | "repeat" }?
  # end of SVG.linearGradient.attlist
  
  # radialGradient: Radial Gradient Element ...........
  SVG.radialGradient.extra.content = notAllowed
  SVG.radialGradient.content =
    SVG.Description.class*,
    (stop
     | animate
     | set
     | animateTransform
     | SVG.radialGradient.extra.content)*
  radialGradient =
    element ns2:radialGradient {
      attlist.radialGradient, SVG.radialGradient.content
    }
  # end of SVG.radialGradient.element
  attlist.radialGradient &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.Gradient.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute cx { Coordinate.datatype }?,
    attribute cy { Coordinate.datatype }?,
    attribute r { Length.datatype }?,
    attribute fx { Coordinate.datatype }?,
    attribute fy { Coordinate.datatype }?,
    attribute gradientUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
    attribute gradientTransform { TransformList.datatype }?,
    attribute spreadMethod { "pad" | "reflect" | "repeat" }?
  # end of SVG.radialGradient.attlist
  
  # stop: Stop Element ................................
  SVG.stop.extra.content = notAllowed
  SVG.stop.content =
    (animate | set | animateColor | SVG.stop.extra.content)*
  stop = element ns2:stop { attlist.stop, SVG.stop.content }
  # end of SVG.stop.element
  attlist.stop &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.Gradient.attrib,
    attribute offset { NumberOrPercentage.datatype }
  # end of SVG.stop.attlist
  
  # end of svg-gradient.mod
  
  # Pattern Module ..............................................
  
  # .......................................................................
  
  # SVG 1.1 Pattern Module ................................................
  
  # file: svg-pattern.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-pattern.mod,v 1.4 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Pattern//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-pattern.mod"
  # 
  # .......................................................................
  
  # Pattern
  # 
  #    pattern
  # 
  # This module declares markup to provide support for pattern fill.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Pattern.class .................................
  
  # SVG.Presentation.attrib ...........................
  
  # pattern: Pattern Element ..........................
  SVG.pattern.extra.content = notAllowed
  SVG.pattern.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.pattern.extra.content)*
  svgpattern =
    element ns2:pattern { attlist.pattern, SVG.pattern.content }
  # end of SVG.pattern.element
  attlist.pattern &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute patternUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
    attribute patternContentUnits {
      "userSpaceOnUse" | "objectBoundingBox"
    }?,
    attribute patternTransform { TransformList.datatype }?,
    attribute viewBox { ViewBoxSpec.datatype }?,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?
  # end of SVG.pattern.attlist
  
  # end of svg-pattern.mod
  
  # Clip Module .................................................
  
  # .......................................................................
  
  # SVG 1.1 Clip Module ...................................................
  
  # file: svg-clip.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-clip.mod,v 1.3 2002/10/24 17:40:15 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Clip//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-clip.mod"
  # 
  # .......................................................................
  
  # Clip
  # 
  #    clipPath
  # 
  # This module declares markup to provide support for clipping.
  
  # 'clip-path' property/attribute value (e.g., 'none', <uri>)
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Clip.class ....................................
  
  # SVG.Clip.attrib ...................................
  
  # clipPath: Clip Path Element .......................
  SVG.clipPath.extra.content = notAllowed
  SVG.clipPath.content =
    SVG.Description.class*,
    (SVG.Animation.class
     | SVG.Use.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.clipPath.extra.content)*
  clipPath =
    element ns2:clipPath { attlist.clipPath, SVG.clipPath.content }
  # end of SVG.clipPath.element
  attlist.clipPath &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Text.attrib,
    SVG.TextContent.attrib,
    SVG.Font.attrib,
    SVG.Paint.attrib,
    SVG.Color.attrib,
    SVG.Opacity.attrib,
    SVG.Graphics.attrib,
    SVG.Clip.attrib,
    SVG.Mask.attrib,
    SVG.Filter.attrib,
    SVG.Cursor.attrib,
    SVG.External.attrib,
    attribute transform { TransformList.datatype }?,
    attribute clipPathUnits { "userSpaceOnUse" | "objectBoundingBox" }?
  # end of SVG.clipPath.attlist
  
  # end of svg-clip.mod
  
  # Mask Module .................................................
  
  # .......................................................................
  
  # SVG 1.1 Mask Module ...................................................
  
  # file: svg-mask.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-mask.mod,v 1.4 2002/11/14 15:11:03 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Mask//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-mask.mod"
  # 
  # .......................................................................
  
  # Mask
  # 
  #    mask
  # 
  # This module declares markup to provide support for masking.
  
  # 'mask' property/attribute value (e.g., 'none', <uri>)
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Mask.class ....................................
  
  # SVG.Mask.attrib ...................................
  
  # SVG.Presentation.attrib ...........................
  
  # mask: Mask Element ................................
  SVG.mask.extra.content = notAllowed
  SVG.mask.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.mask.extra.content)*
  mask = element ns2:mask { attlist.mask, SVG.mask.content }
  # end of SVG.mask.element
  attlist.mask &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute maskUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
    attribute maskContentUnits {
      "userSpaceOnUse" | "objectBoundingBox"
    }?
  # end of SVG.mask.attlist
  
  # end of svg-mask.mod
  
  # Filter Module ...............................................
  
  # .......................................................................
  
  # SVG 1.1 Filter Module .................................................
  
  # file: svg-filter.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-filter.mod,v 1.4 2002/11/14 15:11:02 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Filter//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-filter.mod"
  # 
  # .......................................................................
  
  # Filter
  # 
  #    filter, feBlend, feColorMatrix, feComponentTransfer, feComposite,
  #    feConvolveMatrix, feDiffuseLighting, feDisplacementMap, feFlood,
  #    feGaussianBlur, feImage, feMerge, feMergeNode, feMorphology, feOffset,
  #    feSpecularLighting, feTile, feTurbulence, feDistantLight, fePointLight,
  #    feSpotLight, feFuncR, feFuncG, feFuncB, feFuncA
  # 
  # This module declares markup to provide support for filter effect.
  
  # 'filter' property/attribute value (e.g., 'none', <uri>)
  
  # list of <number>s, but at least one and at most two
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Filter.class ..................................
  
  # SVG.FilterPrimitive.class .........................
  
  # SVG.Filter.attrib .................................
  
  # SVG.FilterColor.attrib ............................
  
  # SVG.FilterPrimitive.attrib ........................
  SVG.FilterPrimitive.extra.attrib = empty
  SVG.FilterPrimitive.attrib =
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute result { text }?,
    SVG.FilterPrimitive.extra.attrib
  # SVG.FilterPrimitiveWithIn.attrib ..................
  SVG.FilterPrimitiveWithIn.extra.attrib = empty
  SVG.FilterPrimitiveWithIn.attrib =
    SVG.FilterPrimitive.attrib,
    attribute in { text }?,
    SVG.FilterPrimitiveWithIn.extra.attrib
  # SVG.Presentation.attrib ...........................
  
  # filter: Filter Element ............................
  SVG.filter.extra.content = notAllowed
  SVG.filter.content =
    SVG.Description.class*,
    (animate
     | set
     | SVG.FilterPrimitive.class
     | SVG.filter.extra.content)*
  filter = element ns2:filter { attlist.filter, SVG.filter.content }
  # end of SVG.filter.element
  attlist.filter &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype }?,
    attribute height { Length.datatype }?,
    attribute filterRes { NumberOptionalNumber.datatype }?,
    attribute filterUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
    attribute primitiveUnits { "userSpaceOnUse" | "objectBoundingBox" }?
  # end of SVG.filter.attlist
  
  # feBlend: Filter Effect Blend Element ..............
  SVG.feBlend.extra.content = notAllowed
  SVG.feBlend.content = (animate | set | SVG.feBlend.extra.content)*
  feBlend = element ns2:feBlend { attlist.feBlend, SVG.feBlend.content }
  # end of SVG.feBlend.element
  attlist.feBlend &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute in2 { text },
    [ a:defaultValue = "normal" ]
    attribute mode {
      "normal" | "multiply" | "screen" | "darken" | "lighten"
    }?
  # end of SVG.feBlend.attlist
  
  # feColorMatrix: Filter Effect Color Matrix Element .
  SVG.feColorMatrix.extra.content = notAllowed
  SVG.feColorMatrix.content =
    (animate | set | SVG.feColorMatrix.extra.content)*
  feColorMatrix =
    element ns2:feColorMatrix {
      attlist.feColorMatrix, SVG.feColorMatrix.content
    }
  # end of SVG.feColorMatrix.element
  attlist.feColorMatrix &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    [ a:defaultValue = "matrix" ]
    attribute type {
      "matrix" | "saturate" | "hueRotate" | "luminanceToAlpha"
    }?,
    attribute values { text }?
  # end of SVG.feColorMatrix.attlist
  
  # feComponentTransfer: Filter Effect Component Transfer Element
  SVG.feComponentTransfer.extra.content = empty
  SVG.feComponentTransfer.content =
    feFuncR?,
    feFuncG?,
    feFuncB?,
    feFuncA?,
    SVG.feComponentTransfer.extra.content
  feComponentTransfer =
    element ns2:feComponentTransfer {
      attlist.feComponentTransfer, SVG.feComponentTransfer.content
    }
  # end of SVG.feComponentTransfer.element
  attlist.feComponentTransfer &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib
  # end of SVG.feComponentTransfer.attlist
  
  # feComposite: Filter Effect Composite Element ......
  SVG.feComposite.extra.content = notAllowed
  SVG.feComposite.content =
    (animate | set | SVG.feComposite.extra.content)*
  feComposite =
    element ns2:feComposite {
      attlist.feComposite, SVG.feComposite.content
    }
  # end of SVG.feComposite.element
  attlist.feComposite &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute in2 { text },
    [ a:defaultValue = "over" ]
    attribute operator {
      "over" | "in" | "out" | "atop" | "xor" | "arithmetic"
    }?,
    attribute k1 { Number.datatype }?,
    attribute k2 { Number.datatype }?,
    attribute k3 { Number.datatype }?,
    attribute k4 { Number.datatype }?
  # end of SVG.feComposite.attlist
  
  # feConvolveMatrix: Filter Effect Convolve Matrix Element
  SVG.feConvolveMatrix.extra.content = notAllowed
  SVG.feConvolveMatrix.content =
    (animate | set | SVG.feConvolveMatrix.extra.content)*
  feConvolveMatrix =
    element ns2:feConvolveMatrix {
      attlist.feConvolveMatrix, SVG.feConvolveMatrix.content
    }
  # end of SVG.feConvolveMatrix.element
  attlist.feConvolveMatrix &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute order { NumberOptionalNumber.datatype },
    attribute kernelMatrix { text },
    attribute divisor { Number.datatype }?,
    attribute bias { Number.datatype }?,
    attribute targetX { Integer.datatype }?,
    attribute targetY { Integer.datatype }?,
    [ a:defaultValue = "duplicate" ]
    attribute edgeMode { "duplicate" | "wrap" | "none" }?,
    attribute kernelUnitLength { NumberOptionalNumber.datatype }?,
    attribute preserveAlpha { Boolean.datatype }?
  # end of SVG.feConvolveMatrix.attlist
  
  # feDiffuseLighting: Filter Effect Diffuse Lighting Element
  SVG.feDiffuseLighting.extra.content = notAllowed
  SVG.feDiffuseLighting.content =
    (feDistantLight | fePointLight | feSpotLight),
    (animate
     | set
     | animateColor
     | SVG.feDiffuseLighting.extra.content)*
  feDiffuseLighting =
    element ns2:feDiffuseLighting {
      attlist.feDiffuseLighting, SVG.feDiffuseLighting.content
    }
  # end of SVG.feDiffuseLighting.element
  attlist.feDiffuseLighting &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute lighting-color { SVGColor.datatype }?,
    attribute surfaceScale { Number.datatype }?,
    attribute diffuseConstant { Number.datatype }?,
    attribute kernelUnitLength { NumberOptionalNumber.datatype }?
  # end of SVG.feDiffuseLighting.attlist
  
  # feDisplacementMap: Filter Effect Displacement Map Element
  SVG.feDisplacementMap.extra.content = notAllowed
  SVG.feDisplacementMap.content =
    (animate | set | SVG.feDisplacementMap.extra.content)*
  feDisplacementMap =
    element ns2:feDisplacementMap {
      attlist.feDisplacementMap, SVG.feDisplacementMap.content
    }
  # end of SVG.feDisplacementMap.element
  attlist.feDisplacementMap &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute in2 { text },
    attribute scale { Number.datatype }?,
    [ a:defaultValue = "A" ]
    attribute xChannelSelector { "R" | "G" | "B" | "A" }?,
    [ a:defaultValue = "A" ]
    attribute yChannelSelector { "R" | "G" | "B" | "A" }?
  # end of SVG.feDisplacementMap.attlist
  
  # feFlood: Filter Effect Flood Element ..............
  SVG.feFlood.extra.content = notAllowed
  SVG.feFlood.content =
    (animate | set | animateColor | SVG.feFlood.extra.content)*
  feFlood = element ns2:feFlood { attlist.feFlood, SVG.feFlood.content }
  # end of SVG.feFlood.element
  attlist.feFlood &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute flood-color { SVGColor.datatype }?,
    attribute flood-opacity { OpacityValue.datatype }?
  # end of SVG.feFlood.attlist
  
  # feGaussianBlur: Filter Effect Gaussian Blur Element
  SVG.feGaussianBlur.extra.content = notAllowed
  SVG.feGaussianBlur.content =
    (animate | set | SVG.feGaussianBlur.extra.content)*
  feGaussianBlur =
    element ns2:feGaussianBlur {
      attlist.feGaussianBlur, SVG.feGaussianBlur.content
    }
  # end of SVG.feGaussianBlur.element
  attlist.feGaussianBlur &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute stdDeviation { NumberOptionalNumber.datatype }?
  # end of SVG.feGaussianBlur.attlist
  
  # feImage: Filter Effect Image Element ..............
  SVG.feImage.extra.content = notAllowed
  SVG.feImage.content =
    (animate | set | animateTransform | SVG.feImage.extra.content)*
  feImage = element ns2:feImage { attlist.feImage, SVG.feImage.content }
  # end of SVG.feImage.element
  attlist.feImage &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.FilterPrimitive.attrib,
    SVG.XLinkEmbed.attrib,
    SVG.External.attrib,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?
  # end of SVG.feImage.attlist
  
  # feMerge: Filter Effect Merge Element ..............
  SVG.feMerge.extra.content = notAllowed
  SVG.feMerge.content = (feMergeNode | SVG.feMerge.extra.content)*
  feMerge = element ns2:feMerge { attlist.feMerge, SVG.feMerge.content }
  # end of SVG.feMerge.element
  attlist.feMerge &=
    SVG.Core.attrib, SVG.FilterColor.attrib, SVG.FilterPrimitive.attrib
  # end of SVG.feMerge.attlist
  
  # feMergeNode: Filter Effect Merge Node Element .....
  SVG.feMergeNode.extra.content = notAllowed
  SVG.feMergeNode.content =
    (animate | set | SVG.feMergeNode.extra.content)*
  feMergeNode =
    element ns2:feMergeNode {
      attlist.feMergeNode, SVG.feMergeNode.content
    }
  # end of SVG.feMergeNode.element
  attlist.feMergeNode &=
    SVG.Core.attrib,
    attribute in { text }?
  # end of SVG.feMergeNode.attlist
  
  # feMorphology: Filter Effect Morphology Element ....
  SVG.feMorphology.extra.content = notAllowed
  SVG.feMorphology.content =
    (animate | set | SVG.feMorphology.extra.content)*
  feMorphology =
    element ns2:feMorphology {
      attlist.feMorphology, SVG.feMorphology.content
    }
  # end of SVG.feMorphology.element
  attlist.feMorphology &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    [ a:defaultValue = "erode" ]
    attribute operator { "erode" | "dilate" }?,
    attribute radius { NumberOptionalNumber.datatype }?
  # end of SVG.feMorphology.attlist
  
  # feOffset: Filter Effect Offset Element ............
  SVG.feOffset.extra.content = notAllowed
  SVG.feOffset.content = (animate | set | SVG.feOffset.extra.content)*
  feOffset =
    element ns2:feOffset { attlist.feOffset, SVG.feOffset.content }
  # end of SVG.feOffset.element
  attlist.feOffset &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute dx { Number.datatype }?,
    attribute dy { Number.datatype }?
  # end of SVG.feOffset.attlist
  
  # feSpecularLighting: Filter Effect Specular Lighting Element
  SVG.feSpecularLighting.extra.content = notAllowed
  SVG.feSpecularLighting.content =
    (feDistantLight | fePointLight | feSpotLight),
    (animate
     | set
     | animateColor
     | SVG.feSpecularLighting.extra.content)*
  feSpecularLighting =
    element ns2:feSpecularLighting {
      attlist.feSpecularLighting, SVG.feSpecularLighting.content
    }
  # end of SVG.feSpecularLighting.element
  attlist.feSpecularLighting &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Color.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib,
    attribute lighting-color { SVGColor.datatype }?,
    attribute surfaceScale { Number.datatype }?,
    attribute specularConstant { Number.datatype }?,
    attribute specularExponent { Number.datatype }?,
    attribute kernelUnitLength { NumberOptionalNumber.datatype }?
  # end of SVG.feSpecularLighting.attlist
  
  # feTile: Filter Effect Tile Element ................
  SVG.feTile.extra.content = notAllowed
  SVG.feTile.content = (animate | set | SVG.feTile.extra.content)*
  feTile = element ns2:feTile { attlist.feTile, SVG.feTile.content }
  # end of SVG.feTile.element
  attlist.feTile &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitiveWithIn.attrib
  # end of SVG.feTile.attlist
  
  # feTurbulence: Filter Effect Turbulence Element ....
  SVG.feTurbulence.extra.content = notAllowed
  SVG.feTurbulence.content =
    (animate | set | SVG.feTurbulence.extra.content)*
  feTurbulence =
    element ns2:feTurbulence {
      attlist.feTurbulence, SVG.feTurbulence.content
    }
  # end of SVG.feTurbulence.element
  attlist.feTurbulence &=
    SVG.Core.attrib,
    SVG.FilterColor.attrib,
    SVG.FilterPrimitive.attrib,
    attribute baseFrequency { NumberOptionalNumber.datatype }?,
    attribute numOctaves { Integer.datatype }?,
    attribute seed { Number.datatype }?,
    [ a:defaultValue = "noStitch" ]
    attribute stitchTiles { "stitch" | "noStitch" }?,
    [ a:defaultValue = "turbulence" ]
    attribute type { "fractalNoise" | "turbulence" }?
  # end of SVG.feTurbulence.attlist
  
  # feDistantLight: Filter Effect Distant Light Element
  SVG.feDistantLight.extra.content = notAllowed
  SVG.feDistantLight.content =
    (animate | set | SVG.feDistantLight.extra.content)*
  feDistantLight =
    element ns2:feDistantLight {
      attlist.feDistantLight, SVG.feDistantLight.content
    }
  # end of SVG.feDistantLight.element
  attlist.feDistantLight &=
    SVG.Core.attrib,
    attribute azimuth { Number.datatype }?,
    attribute elevation { Number.datatype }?
  # end of SVG.feDistantLight.attlist
  
  # fePointLight: Filter Effect Point Light Element ...
  SVG.fePointLight.extra.content = notAllowed
  SVG.fePointLight.content =
    (animate | set | SVG.fePointLight.extra.content)*
  fePointLight =
    element ns2:fePointLight {
      attlist.fePointLight, SVG.fePointLight.content
    }
  # end of SVG.fePointLight.element
  attlist.fePointLight &=
    SVG.Core.attrib,
    attribute x { Number.datatype }?,
    attribute y { Number.datatype }?,
    attribute z { Number.datatype }?
  # end of SVG.fePointLight.attlist
  
  # feSpotLight: Filter Effect Spot Light Element .....
  SVG.feSpotLight.extra.content = notAllowed
  SVG.feSpotLight.content =
    (animate | set | SVG.feSpotLight.extra.content)*
  feSpotLight =
    element ns2:feSpotLight {
      attlist.feSpotLight, SVG.feSpotLight.content
    }
  # end of SVG.feSpotLight.element
  attlist.feSpotLight &=
    SVG.Core.attrib,
    attribute x { Number.datatype }?,
    attribute y { Number.datatype }?,
    attribute z { Number.datatype }?,
    attribute pointsAtX { Number.datatype }?,
    attribute pointsAtY { Number.datatype }?,
    attribute pointsAtZ { Number.datatype }?,
    attribute specularExponent { Number.datatype }?,
    attribute limitingConeAngle { Number.datatype }?
  # end of SVG.feSpotLight.attlist
  
  # feFuncR: Filter Effect Function Red Element .......
  SVG.feFuncR.extra.content = notAllowed
  SVG.feFuncR.content = (animate | set | SVG.feFuncR.extra.content)*
  feFuncR = element ns2:feFuncR { attlist.feFuncR, SVG.feFuncR.content }
  # end of SVG.feFuncR.element
  attlist.feFuncR &=
    SVG.Core.attrib,
    attribute type {
      "identity" | "table" | "discrete" | "linear" | "gamma"
    },
    attribute tableValues { text }?,
    attribute slope { Number.datatype }?,
    attribute intercept { Number.datatype }?,
    attribute amplitude { Number.datatype }?,
    attribute exponent { Number.datatype }?,
    attribute offset { Number.datatype }?
  # end of SVG.feFuncR.attlist
  
  # feFuncG: Filter Effect Function Green Element .....
  SVG.feFuncG.extra.content = notAllowed
  SVG.feFuncG.content = (animate | set | SVG.feFuncG.extra.content)*
  feFuncG = element ns2:feFuncG { attlist.feFuncG, SVG.feFuncG.content }
  # end of SVG.feFuncG.element
  attlist.feFuncG &=
    SVG.Core.attrib,
    attribute type {
      "identity" | "table" | "discrete" | "linear" | "gamma"
    },
    attribute tableValues { text }?,
    attribute slope { Number.datatype }?,
    attribute intercept { Number.datatype }?,
    attribute amplitude { Number.datatype }?,
    attribute exponent { Number.datatype }?,
    attribute offset { Number.datatype }?
  # end of SVG.feFuncG.attlist
  
  # feFuncB: Filter Effect Function Blue Element ......
  SVG.feFuncB.extra.content = notAllowed
  SVG.feFuncB.content = (animate | set | SVG.feFuncB.extra.content)*
  feFuncB = element ns2:feFuncB { attlist.feFuncB, SVG.feFuncB.content }
  # end of SVG.feFuncB.element
  attlist.feFuncB &=
    SVG.Core.attrib,
    attribute type {
      "identity" | "table" | "discrete" | "linear" | "gamma"
    },
    attribute tableValues { text }?,
    attribute slope { Number.datatype }?,
    attribute intercept { Number.datatype }?,
    attribute amplitude { Number.datatype }?,
    attribute exponent { Number.datatype }?,
    attribute offset { Number.datatype }?
  # end of SVG.feFuncB.attlist
  
  # feFuncA: Filter Effect Function Alpha Element .....
  SVG.feFuncA.extra.content = notAllowed
  SVG.feFuncA.content = (animate | set | SVG.feFuncA.extra.content)*
  feFuncA = element ns2:feFuncA { attlist.feFuncA, SVG.feFuncA.content }
  # end of SVG.feFuncA.element
  attlist.feFuncA &=
    SVG.Core.attrib,
    attribute type {
      "identity" | "table" | "discrete" | "linear" | "gamma"
    },
    attribute tableValues { text }?,
    attribute slope { Number.datatype }?,
    attribute intercept { Number.datatype }?,
    attribute amplitude { Number.datatype }?,
    attribute exponent { Number.datatype }?,
    attribute offset { Number.datatype }?
  # end of SVG.feFuncA.attlist
  
  # end of svg-filter.mod
  
  # Cursor Module ...............................................
  
  # .......................................................................
  
  # SVG 1.1 Cursor Module .................................................
  
  # file: svg-cursor.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-cursor.mod,v 1.3 2002/10/24 17:40:15 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Cursor//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-cursor.mod"
  # 
  # .......................................................................
  
  # Cursor
  # 
  #    cursor
  # 
  # This module declares markup to provide support for cursor.
  
  # 'cursor' property/attribute value (e.g., 'crosshair', <uri>)
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Cursor.class ..................................
  
  # SVG.Cursor.attrib .................................
  
  # cursor: Cursor Element ............................
  SVG.cursor.extra.content = notAllowed
  SVG.cursor.content =
    (SVG.Description.class | SVG.cursor.extra.content)*
  cursor = element ns2:cursor { attlist.cursor, SVG.cursor.content }
  # end of SVG.cursor.element
  attlist.cursor &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.XLinkRequired.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?
  # end of SVG.cursor.attlist
  
  # end of svg-cursor.mod
  
  # Hyperlinking Module .........................................
  
  # .......................................................................
  
  # SVG 1.1 Hyperlinking Module ...........................................
  
  # file: svg-hyperlink.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-hyperlink.mod,v 1.4 2002/11/14 15:11:02 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Hyperlinking//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-hyperlink.mod"
  # 
  # .......................................................................
  
  # Hyperlinking
  # 
  #    a
  # 
  # This module declares markup to provide support for hyper linking.
  
  # link to this target
  LinkTarget.datatype = xsd:NMTOKEN
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Hyperlink.class ...............................
  
  # SVG.Presentation.attrib ...........................
  
  # a: Anchor Element .................................
  SVG.a.extra.content = notAllowed
  SVG.a.content =
    (text
     | SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.a.extra.content)*
  a = element ns2:a { attlist.a, SVG.a.content }
  # end of SVG.a.element
  attlist.a &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.XLinkReplace.attrib,
    SVG.External.attrib,
    attribute transform { TransformList.datatype }?,
    attribute target { LinkTarget.datatype }?
  # end of SVG.a.attlist
  
  # end of svg-hyperlink.mod
  
  # View Module .................................................
  
  # .......................................................................
  
  # SVG 1.1 View Module ...................................................
  
  # file: svg-view.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-view.mod,v 1.3 2002/10/24 17:40:16 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 View//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-view.mod"
  # 
  # .......................................................................
  
  # View
  # 
  #    view
  # 
  # This module declares markup to provide support for view.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.View.class ....................................
  
  # view: View Element ................................
  SVG.view.extra.content = notAllowed
  SVG.view.content = (SVG.Description.class | SVG.view.extra.content)*
  view = element ns2:view { attlist.view, SVG.view.content }
  # end of SVG.view.element
  attlist.view &=
    SVG.Core.attrib,
    SVG.External.attrib,
    attribute viewBox { ViewBoxSpec.datatype }?,
    [ a:defaultValue = "xMidYMid meet" ]
    attribute preserveAspectRatio { PreserveAspectRatioSpec.datatype }?,
    [ a:defaultValue = "magnify" ]
    attribute zoomAndPan { "disable" | "magnify" }?,
    attribute viewTarget { text }?
  # end of SVG.view.attlist
  
  # end of svg-view.mod
  
  # Scripting Module ............................................
  
  # .......................................................................
  
  # SVG 1.1 Scripting Module ..............................................
  
  # file: svg-script.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-script.mod,v 1.3 2002/10/24 17:40:16 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Scripting//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-script.mod"
  # 
  # .......................................................................
  
  # Scripting
  # 
  #    script
  # 
  # This module declares markup to provide support for scripting.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Script.class ..................................
  
  # script: Script Element ............................
  SVG.script.extra.content = notAllowed
  SVG.script.content = (text | SVG.script.extra.content)*
  script = element ns2:script { attlist.script, SVG.script.content }
  # end of SVG.script.element
  attlist.script &=
    SVG.Core.attrib,
    SVG.XLink.attrib,
    SVG.External.attrib,
    attribute type { ContentType.datatype }
  # end of SVG.script.attlist
  
  # end of svg-script.mod
  
  # Animation Module ............................................
  
  # .......................................................................
  
  # SVG 1.1 Animation Module ..............................................
  
  # file: svg-animation.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-animation.mod,v 1.3 2002/10/24 17:40:14 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Animation//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-animation.mod"
  # 
  # .......................................................................
  
  # Animation
  # 
  #    animate, set, animateMotion, animateColor, animateTransform, mpath
  # 
  # This module declares markup to provide support for animation.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Animation.class ...............................
  
  # SVG.Animation.attrib ..............................
  SVG.Animation.extra.attrib = empty
  SVG.Animation.attrib = SVG.XLink.attrib, SVG.Animation.extra.attrib
  # SVG.AnimationAttribute.attrib .....................
  SVG.AnimationAttribute.extra.attrib = empty
  SVG.AnimationAttribute.attrib =
    attribute attributeName { text },
    attribute attributeType { text }?,
    SVG.AnimationAttribute.extra.attrib
  # SVG.AnimationTiming.attrib ........................
  SVG.AnimationTiming.extra.attrib = empty
  SVG.AnimationTiming.attrib =
    attribute begin { text }?,
    attribute dur { text }?,
    attribute end { text }?,
    attribute min { text }?,
    attribute max { text }?,
    [ a:defaultValue = "always" ]
    attribute restart { "always" | "never" | "whenNotActive" }?,
    attribute repeatCount { text }?,
    attribute repeatDur { text }?,
    [ a:defaultValue = "remove" ]
    attribute fill { "remove" | "freeze" }?,
    SVG.AnimationTiming.extra.attrib
  # SVG.AnimationValue.attrib .........................
  SVG.AnimationValue.extra.attrib = empty
  SVG.AnimationValue.attrib =
    [ a:defaultValue = "linear" ]
    attribute calcMode { "discrete" | "linear" | "paced" | "spline" }?,
    attribute values { text }?,
    attribute keyTimes { text }?,
    attribute keySplines { text }?,
    attribute from { text }?,
    attribute to { text }?,
    attribute by { text }?,
    SVG.AnimationValue.extra.attrib
  # SVG.AnimationAddtion.attrib .......................
  SVG.AnimationAddtion.extra.attrib = empty
  SVG.AnimationAddtion.attrib =
    [ a:defaultValue = "replace" ]
    attribute additive { "replace" | "sum" }?,
    [ a:defaultValue = "none" ]
    attribute accumulate { "none" | "sum" }?,
    SVG.AnimationAddtion.extra.attrib
  # animate: Animate Element ..........................
  SVG.animate.extra.content = notAllowed
  SVG.animate.content =
    (SVG.Description.class | SVG.animate.extra.content)*
  animate = element ns2:animate { attlist.animate, SVG.animate.content }
  # end of SVG.animate.element
  attlist.animate &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.AnimationEvents.attrib,
    SVG.External.attrib,
    SVG.Animation.attrib,
    SVG.AnimationAttribute.attrib,
    SVG.AnimationTiming.attrib,
    SVG.AnimationValue.attrib,
    SVG.AnimationAddtion.attrib
  # end of SVG.animate.attlist
  
  # set: Set Element ..................................
  SVG.set.extra.content = notAllowed
  SVG.set.content = (SVG.Description.class | SVG.set.extra.content)*
  set = element ns2:set { attlist.set, SVG.set.content }
  # end of SVG.set.element
  attlist.set &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.AnimationEvents.attrib,
    SVG.External.attrib,
    SVG.Animation.attrib,
    SVG.AnimationAttribute.attrib,
    SVG.AnimationTiming.attrib,
    attribute to { text }?
  # end of SVG.set.attlist
  
  # animateMotion: Animate Motion Element .............
  SVG.animateMotion.extra.content = empty
  SVG.animateMotion.content =
    SVG.Description.class*, mpath?, SVG.animateMotion.extra.content
  animateMotion =
    element ns2:animateMotion {
      attlist.animateMotion, SVG.animateMotion.content
    }
  # end of SVG.animateMotion.element
  attlist.animateMotion &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.AnimationEvents.attrib,
    SVG.External.attrib,
    SVG.Animation.attrib,
    SVG.AnimationTiming.attrib,
    SVG.AnimationAddtion.attrib,
    [ a:defaultValue = "paced" ]
    attribute calcMode { "discrete" | "linear" | "paced" | "spline" }?,
    attribute values { text }?,
    attribute keyTimes { text }?,
    attribute keySplines { text }?,
    attribute from { text }?,
    attribute to { text }?,
    attribute by { text }?,
    attribute path { text }?,
    attribute keyPoints { text }?,
    attribute rotate { text }?,
    attribute origin { text }?
  # end of SVG.animateMotion.attlist
  
  # animateColor: Animate Color Element ...............
  SVG.animateColor.extra.content = notAllowed
  SVG.animateColor.content =
    (SVG.Description.class | SVG.animateColor.extra.content)*
  animateColor =
    element ns2:animateColor {
      attlist.animateColor, SVG.animateColor.content
    }
  # end of SVG.animateColor.element
  attlist.animateColor &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.AnimationEvents.attrib,
    SVG.External.attrib,
    SVG.Animation.attrib,
    SVG.AnimationAttribute.attrib,
    SVG.AnimationTiming.attrib,
    SVG.AnimationValue.attrib,
    SVG.AnimationAddtion.attrib
  # end of SVG.animateColor.attlist
  
  # animateTransform: Animate Transform Element .......
  SVG.animateTransform.extra.content = notAllowed
  SVG.animateTransform.content =
    (SVG.Description.class | SVG.animateTransform.extra.content)*
  animateTransform =
    element ns2:animateTransform {
      attlist.animateTransform, SVG.animateTransform.content
    }
  # end of SVG.animateTransform.element
  attlist.animateTransform &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.AnimationEvents.attrib,
    SVG.External.attrib,
    SVG.Animation.attrib,
    SVG.AnimationAttribute.attrib,
    SVG.AnimationTiming.attrib,
    SVG.AnimationValue.attrib,
    SVG.AnimationAddtion.attrib,
    [ a:defaultValue = "translate" ]
    attribute type {
      "translate" | "scale" | "rotate" | "skewX" | "skewY"
    }?
  # end of SVG.animateTransform.attlist
  
  # mpath: Motion Path Element ........................
  SVG.mpath.extra.content = notAllowed
  SVG.mpath.content = (SVG.Description.class | SVG.mpath.extra.content)*
  mpath = element ns2:mpath { attlist.mpath, SVG.mpath.content }
  # end of SVG.mpath.element
  attlist.mpath &=
    SVG.Core.attrib, SVG.XLinkRequired.attrib, SVG.External.attrib
  # end of SVG.mpath.attlist
  
  # end of svg-animation.mod
  
  # Font Module .................................................
  
  # .......................................................................
  
  # SVG 1.1 Font Module ...................................................
  
  # file: svg-font.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-font.mod,v 1.4 2002/11/14 15:11:02 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Font//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-font.mod"
  # 
  # .......................................................................
  
  # Font
  # 
  #    font, font-face, glyph, missing-glyph, hkern, vkern, font-face-src,
  #    font-face-uri, font-face-format, font-face-name, definition-src
  # 
  # This module declares markup to provide support for template.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Font.class ....................................
  
  # SVG.Presentation.attrib ...........................
  
  # font: Font Element ................................
  SVG.font.extra.content = notAllowed
  SVG.font.content =
    SVG.Description.class*,
    font-face,
    missing-glyph,
    (glyph | hkern | vkern | SVG.font.extra.content)*
  font = element ns2:font { attlist.font, SVG.font.content }
  # end of SVG.font.element
  attlist.font &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.External.attrib,
    attribute horiz-origin-x { Number.datatype }?,
    attribute horiz-origin-y { Number.datatype }?,
    attribute horiz-adv-x { Number.datatype },
    attribute vert-origin-x { Number.datatype }?,
    attribute vert-origin-y { Number.datatype }?,
    attribute vert-adv-y { Number.datatype }?
  # end of SVG.font.attlist
  
  # font-face: Font Face Element ......................
  SVG.font-face.extra.content = empty
  SVG.font-face.content =
    SVG.Description.class*,
    font-face-src?,
    definition-src?,
    SVG.font-face.extra.content
  font-face =
    element ns2:font-face { attlist.font-face, SVG.font-face.content }
  # end of SVG.font-face.element
  attlist.font-face &=
    SVG.Core.attrib,
    attribute font-family { text }?,
    attribute font-style { text }?,
    attribute font-variant { text }?,
    attribute font-weight { text }?,
    attribute font-stretch { text }?,
    attribute font-size { text }?,
    attribute unicode-range { text }?,
    attribute units-per-em { Number.datatype }?,
    attribute panose-1 { text }?,
    attribute stemv { Number.datatype }?,
    attribute stemh { Number.datatype }?,
    attribute slope { Number.datatype }?,
    attribute cap-height { Number.datatype }?,
    attribute x-height { Number.datatype }?,
    attribute accent-height { Number.datatype }?,
    attribute ascent { Number.datatype }?,
    attribute descent { Number.datatype }?,
    attribute widths { text }?,
    attribute bbox { text }?,
    attribute ideographic { Number.datatype }?,
    attribute alphabetic { Number.datatype }?,
    attribute mathematical { Number.datatype }?,
    attribute hanging { Number.datatype }?,
    attribute v-ideographic { Number.datatype }?,
    attribute v-alphabetic { Number.datatype }?,
    attribute v-mathematical { Number.datatype }?,
    attribute v-hanging { Number.datatype }?,
    attribute underline-position { Number.datatype }?,
    attribute underline-thickness { Number.datatype }?,
    attribute strikethrough-position { Number.datatype }?,
    attribute strikethrough-thickness { Number.datatype }?,
    attribute overline-position { Number.datatype }?,
    attribute overline-thickness { Number.datatype }?
  # end of SVG.font-face.attlist
  
  # glyph: Glyph Element ..............................
  SVG.glyph.extra.content = notAllowed
  SVG.glyph.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.glyph.extra.content)*
  glyph = element ns2:glyph { attlist.glyph, SVG.glyph.content }
  # end of SVG.glyph.element
  attlist.glyph &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    attribute unicode { text }?,
    attribute glyph-name { text }?,
    attribute d { PathData.datatype }?,
    attribute orientation { text }?,
    attribute arabic-form { text }?,
    attribute lang { LanguageCodes.datatype }?,
    attribute horiz-adv-x { Number.datatype }?,
    attribute vert-origin-x { Number.datatype }?,
    attribute vert-origin-y { Number.datatype }?,
    attribute vert-adv-y { Number.datatype }?
  # end of SVG.glyph.attlist
  
  # missing-glyph: Missing Glyph Element ..............
  SVG.missing-glyph.extra.content = notAllowed
  SVG.missing-glyph.content =
    (SVG.Description.class
     | SVG.Animation.class
     | SVG.Structure.class
     | SVG.Conditional.class
     | SVG.Image.class
     | SVG.Style.class
     | SVG.Shape.class
     | SVG.Text.class
     | SVG.Marker.class
     | SVG.ColorProfile.class
     | SVG.Gradient.class
     | SVG.Pattern.class
     | SVG.Clip.class
     | SVG.Mask.class
     | SVG.Filter.class
     | SVG.Cursor.class
     | SVG.Hyperlink.class
     | SVG.View.class
     | SVG.Script.class
     | SVG.Font.class
     | SVG.missing-glyph.extra.content)*
  missing-glyph =
    element ns2:missing-glyph {
      attlist.missing-glyph, SVG.missing-glyph.content
    }
  # end of SVG.missing-glyph.element
  attlist.missing-glyph &=
    SVG.Core.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    attribute d { PathData.datatype }?,
    attribute horiz-adv-x { Number.datatype }?,
    attribute vert-origin-x { Number.datatype }?,
    attribute vert-origin-y { Number.datatype }?,
    attribute vert-adv-y { Number.datatype }?
  # end of SVG.missing-glyph.attlist
  
  # hkern: Horizontal Kerning Element .................
  SVG.hkern.content = empty
  hkern = element ns2:hkern { attlist.hkern, SVG.hkern.content }
  # end of SVG.hkern.element
  attlist.hkern &=
    SVG.Core.attrib,
    attribute u1 { text }?,
    attribute g1 { text }?,
    attribute u2 { text }?,
    attribute g2 { text }?,
    attribute k { Number.datatype }
  # end of SVG.hkern.attlist
  
  # vkern: Vertical Kerning Element ...................
  SVG.vkern.content = empty
  vkern = element ns2:vkern { attlist.vkern, SVG.vkern.content }
  # end of SVG.vkern.element
  attlist.vkern &=
    SVG.Core.attrib,
    attribute u1 { text }?,
    attribute g1 { text }?,
    attribute u2 { text }?,
    attribute g2 { text }?,
    attribute k { Number.datatype }
  # end of SVG.vkern.attlist
  
  # font-face-src: Font Face Source Element ...........
  SVG.font-face-src.extra.content = notAllowed
  SVG.font-face-src.content =
    (font-face-uri | font-face-name | SVG.font-face-src.extra.content)+
  font-face-src =
    element ns2:font-face-src {
      attlist.font-face-src, SVG.font-face-src.content
    }
  # end of SVG.font-face-src.element
  attlist.font-face-src &= SVG.Core.attrib
  # end of SVG.font-face-src.attlist
  
  # font-face-uri: Font Face URI Element ..............
  SVG.font-face-uri.extra.content = notAllowed
  SVG.font-face-uri.content =
    (font-face-format | SVG.font-face-uri.extra.content)*
  font-face-uri =
    element ns2:font-face-uri {
      attlist.font-face-uri, SVG.font-face-uri.content
    }
  # end of SVG.font-face-uri.element
  attlist.font-face-uri &= SVG.Core.attrib, SVG.XLinkRequired.attrib
  # end of SVG.font-face-uri.attlist
  
  # font-face-format: Font Face Format Element ........
  SVG.font-face-format.content = empty
  font-face-format =
    element ns2:font-face-format {
      attlist.font-face-format, SVG.font-face-format.content
    }
  # end of SVG.font-face-format.element
  attlist.font-face-format &=
    SVG.Core.attrib,
    attribute string { text }?
  # end of SVG.font-face-format.attlist
  
  # font-face-name: Font Face Name Element ............
  SVG.font-face-name.content = empty
  font-face-name =
    element ns2:font-face-name {
      attlist.font-face-name, SVG.font-face-name.content
    }
  # end of SVG.font-face-name.element
  attlist.font-face-name &=
    SVG.Core.attrib,
    attribute name { text }?
  # end of SVG.font-face-name.attlist
  
  # definition-src: Definition Source Element .........
  SVG.definition-src.content = empty
  definition-src =
    element ns2:definition-src {
      attlist.definition-src, SVG.definition-src.content
    }
  # end of SVG.definition-src.element
  attlist.definition-src &= SVG.Core.attrib, SVG.XLinkRequired.attrib
  # end of SVG.definition-src.attlist
  
  # end of svg-font.mod
  
  # Extensibility Module ........................................
  
  # .......................................................................
  
  # SVG 1.1 Extensibility Module ..........................................
  
  # file: svg-extensibility.mod
  # 
  # This is SVG, a language for describing two-dimensional graphics in XML.
  # Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
  # Revision: $Id: svg-extensibility.mod,v 1.4 2002/11/14 15:11:02 fujisawa Exp $
  # 
  # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
  # 
  #    PUBLIC "-//W3C//ELEMENTS SVG 1.1 Extensibility//EN"
  #    SYSTEM "http://www.w3.org/Graphics/SVG/1.1/DTD/svg-extensibility.mod"
  # 
  # .......................................................................
  
  # Extensibility
  # 
  #    foreignObject
  # 
  # This module declares markup to provide support for extensibility.
  
  # Qualified Names (Default) .........................
  
  # Attribute Collections (Default) ...................
  
  # SVG.Extensibility.class ...........................
  
  # SVG.Presentation.attrib ...........................
  
  # foreignObject: Foreign Object Element .............
  SVG.foreignObject.extra.content = notAllowed
  SVG.foreignObject.content = (text | SVG.foreignObject.extra.content)*
  foreignObject =
    element ns2:foreignObject {
      attlist.foreignObject, SVG.foreignObject.content
    }
  # end of SVG.foreignObject.element
  attlist.foreignObject &=
    SVG.Core.attrib,
    SVG.Conditional.attrib,
    SVG.Style.attrib,
    SVG.Presentation.attrib,
    SVG.GraphicalEvents.attrib,
    SVG.External.attrib,
    attribute x { Coordinate.datatype }?,
    attribute y { Coordinate.datatype }?,
    attribute width { Length.datatype },
    attribute height { Length.datatype },
    attribute transform { TransformList.datatype }?
  tei_model.graphicLike |= svg
}
div {
  # MathML 2.0 DTD  .......................................................
  
  # file: mathml2.dtd
  
  # MathML 2.0 DTD
  # 
  # This is the Mathematical Markup Language (MathML) 2.0, an XML
  # application for describing mathematical notation and capturing
  # both its structure and content.
  # 
  # Copyright 1998-2002 World Wide Web Consortium
  #    (Massachusetts Institute of Technology, Institut National de
  #     Recherche en Informatique et en Automatique, Keio University).
  #     All Rights Reserved.
  # 
  # Permission to use, copy, modify and distribute the MathML 2.0 DTD and
  # its accompanying documentation for any purpose and without fee is
  # hereby granted in perpetuity, provided that the above copyright notice
  # and this paragraph appear in all copies.  The copyright holders make
  # no representation about the suitability of the DTD for any purpose.
  # 
  # It is provided "as is" without expressed or implied warranty.
  # 
  #    Revision:   $Id: mathml2-main.rng 492 2005-06-24 20:30:39Z rahtz $
  # 
  # This entity may be identified by the PUBLIC and SYSTEM identifiers:
  # 
  #   PUBLIC "-//W3C//DTD MathML 2.0//EN"
  #   SYSTEM "mathml2.dtd"
  # 
  # Revisions: editor and revision history at EOF
  
  # MathML Qualified Names module ...............................
  
  # Start of import of mathml2-qname-1.mod.rng
  div {
    # .......................................................................
    
    # MathML Qualified Names Module  ........................................
    
    # file: mathml2-qname-1.mod
    # 
    # This is the Mathematical Markup Language (MathML) 2.0, an XML 
    # application for describing mathematical notation and capturing 
    # both its structure and content.
    # 
    # Copyright 1998-2000 W3C (MIT, INRIA, Keio), All Rights Reserved.
    # Revision: $Id: mathml2-qname-1.mod.rng 1784 2006-10-06 08:23:45Z rahtz $ 
    # 
    # This DTD module is identified by the PUBLIC and SYSTEM identifiers:
    # 
    #   PUBLIC "-//W3C//ENTITIES MathML 2.0 Qualified Names 1.0//EN"
    #   SYSTEM "mathml2-qname-1.mod"
    # 
    # Revisions:
    # (none)
    # .......................................................................
    
    # MathML Qualified Names
    # 
    # This module is contained in two parts, labeled Section 'A' and 'B':
    # 
    #   Section A declares parameter entities to support namespace-
    #   qualified names, namespace declarations, and name prefixing 
    #   for MathML.
    # 
    #   Section B declares parameter entities used to provide
    #   namespace-qualified names for all MathML element types.
    # 
    # This module is derived from the XHTML Qualified Names Template module.
    
    # Section A: XHTML XML Namespace Framework ::::::::::::::::::::
    
    # XLink ...............
    math_XLINK.xmlns.attrib = empty
    # MathML ..............
    MATHML.xmlns.extra.attrib = math_XLINK.xmlns.attrib
    MATHML.xmlns.attrib = empty, MATHML.xmlns.extra.attrib
  }
  # End of import of mathml2-qname-1.mod.rng
  
  # if %NS.prefixed; is INCLUDE, include all NS attributes, 
  # otherwise just those associated with MathML
  MATHML.NamespaceDecl.attrib = MATHML.xmlns.attrib
  # Attributes shared by all elements  ..........................
  MATHML.Common.attrib =
    MATHML.NamespaceDecl.attrib,
    attribute xlink:href { text }?,
    attribute xlink:type { text }?,
    attribute class { text }?,
    attribute style { text }?,
    attribute id { xsd:ID }?,
    attribute xref { xsd:IDREF }?,
    attribute other { text }?
  # Presentation element set  ...................................
  
  # Attribute definitions
  mathml.att-fontsize = attribute fontsize { text }?
  mathml.att-fontweight = attribute fontweight { "normal" | "bold" }?
  mathml.att-fontstyle = attribute fontstyle { "normal" | "italic" }?
  mathml.att-fontfamily = attribute fontfamily { text }?
  mathml.att-color = attribute color { text }?
  # MathML2 typographically-distinguished symbol attributes
  mathml.att-mathvariant = attribute mathvariant { text }?
  mathml.att-mathsize = attribute mathsize { text }?
  mathml.att-mathcolor = attribute mathcolor { text }?
  mathml.att-mathbackground = attribute mathbackground { text }?
  mathml.att-fontinfo =
    mathml.att-fontsize,
    mathml.att-fontweight,
    mathml.att-fontstyle,
    mathml.att-fontfamily,
    mathml.att-color,
    mathml.att-mathvariant,
    mathml.att-mathsize,
    mathml.att-mathcolor,
    mathml.att-mathbackground
  mathml.att-form = attribute form { "prefix" | "infix" | "postfix" }?
  mathml.att-fence = attribute fence { "true" | "false" }?
  mathml.att-separator = attribute separator { "true" | "false" }?
  mathml.att-lspace = attribute lspace { text }?
  mathml.att-rspace = attribute rspace { text }?
  mathml.att-stretchy = attribute stretchy { "true" | "false" }?
  mathml.att-symmetric = attribute symmetric { "true" | "false" }?
  mathml.att-maxsize = attribute maxsize { text }?
  mathml.att-minsize = attribute minsize { text }?
  mathml.att-largeop = attribute largeop { "true" | "false" }?
  mathml.att-movablelimits =
    attribute movablelimits { "true" | "false" }?
  mathml.att-accent = attribute accent { "true" | "false" }?
  mathml.att-opinfo =
    mathml.att-form,
    mathml.att-fence,
    mathml.att-separator,
    mathml.att-lspace,
    mathml.att-rspace,
    mathml.att-stretchy,
    mathml.att-symmetric,
    mathml.att-maxsize,
    mathml.att-minsize,
    mathml.att-largeop,
    mathml.att-movablelimits,
    mathml.att-accent
  mathml.att-width = attribute width { text }?
  mathml.att-height = attribute height { text }?
  mathml.att-depth = attribute depth { text }?
  mathml.att-linebreak = attribute linebreak { text }?
  mathml.att-sizeinfo =
    mathml.att-width, mathml.att-height, mathml.att-depth
  mathml.att-lquote = attribute lquote { text }?
  mathml.att-rquote = attribute rquote { text }?
  mathml.att-linethickness = attribute linethickness { text }?
  mathml.att-scriptlevel = attribute scriptlevel { text }?
  mathml.att-displaystyle = attribute displaystyle { "true" | "false" }?
  mathml.att-scriptsizemultiplier =
    attribute scriptsizemultiplier { text }?
  mathml.att-scriptminsize = attribute scriptminsize { text }?
  mathml.att-background = attribute background { text }?
  mathml.att-veryverythinmathspace =
    attribute veryverythinmathspace { text }?
  mathml.att-verythinmathspace = attribute verythinmathspace { text }?
  mathml.att-thinmathspace = attribute thinmathspace { text }?
  mathml.att-mediummathspace = attribute mediummathspace { text }?
  mathml.att-thickmathspace = attribute thickmathspace { text }?
  mathml.att-verythickmathspace = attribute verythickmathspace { text }?
  mathml.att-veryverythickmathspace =
    attribute veryverythickmathspace { text }?
  mathml.att-open = attribute open { text }?
  mathml.att-close = attribute close { text }?
  mathml.att-separators = attribute separators { text }?
  mathml.att-subscriptshift = attribute subscriptshift { text }?
  mathml.att-superscriptshift = attribute superscriptshift { text }?
  mathml.att-accentunder = attribute accentunder { "true" | "false" }?
  mathml.att-align = attribute align { text }?
  mathml.att-numalign = attribute numalign { text }?
  mathml.att-denomalign = attribute denomalign { text }?
  mathml.att-rowalign = attribute rowalign { text }?
  mathml.att-columnalign = attribute columnalign { text }?
  mathml.att-columnwidth = attribute columnwidth { text }?
  mathml.att-groupalign = attribute groupalign { text }?
  mathml.att-alignmentscope = attribute alignmentscope { text }?
  mathml.att-rowspacing = attribute rowspacing { text }?
  mathml.att-columnspacing = attribute columnspacing { text }?
  mathml.att-rowlines = attribute rowlines { text }?
  mathml.att-columnlines = attribute columnlines { text }?
  mathml.att-frame = attribute frame { "none" | "solid" | "dashed" }?
  mathml.att-side =
    attribute side {
      "left" | "right" | "leftoverlap" | "rightoverlap"
    }?
  mathml.att-framespacing = attribute framespacing { text }?
  mathml.att-equalrows = attribute equalrows { text }?
  mathml.att-equalcolumns = attribute equalcolumns { text }?
  mathml.att-tableinfo =
    mathml.att-align,
    mathml.att-rowalign,
    mathml.att-columnalign,
    mathml.att-columnwidth,
    mathml.att-groupalign,
    mathml.att-alignmentscope,
    mathml.att-side,
    mathml.att-rowspacing,
    mathml.att-columnspacing,
    mathml.att-rowlines,
    mathml.att-columnlines,
    mathml.att-width,
    mathml.att-frame,
    mathml.att-framespacing,
    mathml.att-equalrows,
    mathml.att-equalcolumns,
    mathml.att-displaystyle
  mathml.att-rowspan = attribute rowspan { text }?
  mathml.att-columnspan = attribute columnspan { text }?
  mathml.att-edge = attribute edge { "left" | "right" }?
  mathml.att-actiontype = attribute actiontype { text }?
  mathml.att-selection = attribute selection { text }?
  mathml.att-name = attribute name { text }?
  mathml.att-alt = attribute alt { text }?
  mathml.att-index = attribute index { text }?
  mathml.att-bevelled = attribute bevelled { text }?
  # Presentation schemata with content
  mathml.ptoken =
    mathml.mi | mathml.mn | mathml.mo | mathml.mtext | mathml.ms
  mathml.attlist-mi &= MATHML.Common.attrib, mathml.att-fontinfo
  mathml.attlist-mn &= MATHML.Common.attrib, mathml.att-fontinfo
  mathml.attlist-mo &=
    MATHML.Common.attrib, mathml.att-fontinfo, mathml.att-opinfo
  mathml.attlist-mtext &= MATHML.Common.attrib, mathml.att-fontinfo
  mathml.attlist-ms &=
    MATHML.Common.attrib,
    mathml.att-fontinfo,
    mathml.att-lquote,
    mathml.att-rquote
  # Empty presentation schemata
  mathml.petoken = mathml.mspace
  mathml.mspace = element ns1:mspace { mathml.attlist-mspace, empty }
  mathml.any |= mathml.mspace
  mathml.attlist-mspace &=
    mathml.att-sizeinfo, mathml.att-linebreak, MATHML.Common.attrib
  # Presentation: general layout schemata
  mathml.pgenschema =
    mathml.mrow
    | mathml.mfrac
    | mathml.msqrt
    | mathml.mroot
    | mathml.menclose
    | mathml.mstyle
    | mathml.merror
    | mathml.mpadded
    | mathml.mphantom
    | mathml.mfenced
  mathml.attlist-mrow &= MATHML.Common.attrib
  mathml.attlist-mfrac &=
    MATHML.Common.attrib,
    mathml.att-bevelled,
    mathml.att-numalign,
    mathml.att-denomalign,
    mathml.att-linethickness
  mathml.attlist-msqrt &= MATHML.Common.attrib
  mathml.attlist-menclose &=
    MATHML.Common.attrib,
    [ a:defaultValue = "longdiv" ] attribute notation { text }?
  mathml.attlist-mroot &= MATHML.Common.attrib
  mathml.attlist-mstyle &=
    MATHML.Common.attrib,
    mathml.att-fontinfo,
    mathml.att-opinfo,
    mathml.att-lquote,
    mathml.att-rquote,
    mathml.att-linethickness,
    mathml.att-scriptlevel,
    mathml.att-scriptsizemultiplier,
    mathml.att-scriptminsize,
    mathml.att-background,
    mathml.att-veryverythinmathspace,
    mathml.att-verythinmathspace,
    mathml.att-thinmathspace,
    mathml.att-mediummathspace,
    mathml.att-thickmathspace,
    mathml.att-verythickmathspace,
    mathml.att-veryverythickmathspace,
    mathml.att-open,
    mathml.att-close,
    mathml.att-separators,
    mathml.att-subscriptshift,
    mathml.att-superscriptshift,
    mathml.att-accentunder,
    mathml.att-tableinfo,
    mathml.att-rowspan,
    mathml.att-columnspan,
    mathml.att-edge,
    mathml.att-actiontype,
    mathml.att-selection
  mathml.attlist-merror &= MATHML.Common.attrib
  mathml.attlist-mpadded &=
    MATHML.Common.attrib, mathml.att-sizeinfo, mathml.att-lspace
  mathml.attlist-mphantom &= MATHML.Common.attrib
  mathml.attlist-mfenced &=
    MATHML.Common.attrib,
    mathml.att-open,
    mathml.att-close,
    mathml.att-separators
  # Presentation layout schemata: scripts and limits
  mathml.pscrschema =
    mathml.msub
    | mathml.msup
    | mathml.msubsup
    | mathml.munder
    | mathml.mover
    | mathml.munderover
    | mathml.mmultiscripts
  mathml.attlist-msub &= MATHML.Common.attrib, mathml.att-subscriptshift
  mathml.attlist-msup &=
    MATHML.Common.attrib, mathml.att-superscriptshift
  mathml.attlist-msubsup &=
    MATHML.Common.attrib,
    mathml.att-subscriptshift,
    mathml.att-superscriptshift
  mathml.attlist-munder &= MATHML.Common.attrib, mathml.att-accentunder
  mathml.attlist-mover &= MATHML.Common.attrib, mathml.att-accent
  mathml.attlist-munderover &=
    MATHML.Common.attrib, mathml.att-accent, mathml.att-accentunder
  mathml.attlist-mmultiscripts &=
    MATHML.Common.attrib,
    mathml.att-subscriptshift,
    mathml.att-superscriptshift
  # Presentation layout schemata: empty elements for scripts
  mathml.pscreschema = mathml.mprescripts | mathml.none
  mathml.mprescripts =
    element ns1:mprescripts { mathml.attlist-mprescripts, empty }
  mathml.any |= mathml.mprescripts
  mathml.attlist-mprescripts &= MATHML.xmlns.attrib
  mathml.none = element ns1:none { mathml.attlist-none, empty }
  mathml.any |= mathml.none
  mathml.attlist-none &= MATHML.xmlns.attrib
  # Presentation layout schemata: tables
  mathml.ptabschema =
    mathml.mtable | mathml.mtr | mathml.mlabeledtr | mathml.mtd
  mathml.attlist-mtable &= MATHML.Common.attrib, mathml.att-tableinfo
  mathml.attlist-mtr &=
    MATHML.Common.attrib,
    mathml.att-rowalign,
    mathml.att-columnalign,
    mathml.att-groupalign
  mathml.attlist-mlabeledtr &=
    MATHML.Common.attrib,
    mathml.att-rowalign,
    mathml.att-columnalign,
    mathml.att-groupalign
  mathml.attlist-mtd &=
    MATHML.Common.attrib,
    mathml.att-rowalign,
    mathml.att-columnalign,
    mathml.att-groupalign,
    mathml.att-rowspan,
    mathml.att-columnspan
  mathml.plschema =
    mathml.pgenschema | mathml.pscrschema | mathml.ptabschema
  # Empty presentation layout schemata
  mathml.peschema = mathml.maligngroup | mathml.malignmark
  mathml.malignmark =
    element ns1:malignmark { mathml.attlist-malignmark, empty }
  mathml.any |= mathml.malignmark
  mathml.attlist-malignmark &= mathml.att-edge
  mathml.maligngroup =
    element ns1:maligngroup { mathml.attlist-maligngroup, empty }
  mathml.any |= mathml.maligngroup
  mathml.attlist-maligngroup &=
    MATHML.Common.attrib, mathml.att-groupalign
  mathml.mglyph = element ns1:mglyph { mathml.attlist-mglyph, empty }
  mathml.any |= mathml.mglyph
  mathml.attlist-mglyph &=
    mathml.att-alt, mathml.att-fontfamily, mathml.att-index
  # Presentation action schemata
  mathml.pactions = mathml.maction
  mathml.attlist-maction &=
    MATHML.Common.attrib, mathml.att-actiontype, mathml.att-selection
  # The following entity for substitution into
  # content constructs excludes elements that
  # are not valid as expressions.
  mathml.PresInCont =
    mathml.ptoken
    | mathml.petoken
    | mathml.plschema
    | mathml.peschema
    | mathml.pactions
  # Presentation entity: all presentation constructs
  mathml.Presentation =
    mathml.ptoken
    | mathml.petoken
    | mathml.pscreschema
    | mathml.plschema
    | mathml.peschema
    | mathml.pactions
  # Content element set  ........................................
  
  # Attribute definitions
  mathml.att-base = [ a:defaultValue = "10" ] attribute base { text }?
  mathml.att-closure =
    [ a:defaultValue = "closed" ] attribute closure { text }?
  mathml.att-definition =
    [ a:defaultValue = "" ] attribute definitionURL { text }?
  mathml.att-encoding =
    [ a:defaultValue = "" ] attribute encoding { text }?
  mathml.att-nargs = [ a:defaultValue = "1" ] attribute nargs { text }?
  mathml.att-occurrence =
    [ a:defaultValue = "function-model" ] attribute occurrence { text }?
  mathml.att-order =
    [ a:defaultValue = "numeric" ] attribute order { text }?
  mathml.att-scope =
    [ a:defaultValue = "local" ] attribute scope { text }?
  mathml.att-type = attribute type { text }?
  # Content elements: leaf nodes
  mathml.ctoken = mathml.csymbol | mathml.ci | mathml.cn
  mathml.attlist-ci &=
    MATHML.Common.attrib,
    mathml.att-type,
    mathml.att-definition,
    mathml.att-encoding
  mathml.attlist-csymbol &=
    MATHML.Common.attrib,
    mathml.att-encoding,
    mathml.att-type,
    mathml.att-definition
  mathml.attlist-cn &=
    MATHML.Common.attrib,
    mathml.att-type,
    mathml.att-base,
    mathml.att-definition,
    mathml.att-encoding
  # Content elements: specials
  mathml.cspecial = mathml.apply | mathml.reln | mathml.lambda
  mathml.attlist-apply &= MATHML.Common.attrib
  mathml.attlist-reln &= MATHML.Common.attrib
  mathml.attlist-lambda &= MATHML.Common.attrib
  # Content elements: others
  mathml.cother = mathml.condition | mathml.declare | mathml.sep
  mathml.attlist-condition &= MATHML.Common.attrib
  mathml.attlist-declare &=
    MATHML.Common.attrib,
    mathml.att-type,
    mathml.att-scope,
    mathml.att-nargs,
    mathml.att-occurrence,
    mathml.att-definition,
    mathml.att-encoding
  mathml.sep = element ns1:sep { mathml.attlist-sep, empty }
  mathml.any |= mathml.sep
  mathml.attlist-sep &= MATHML.xmlns.attrib
  # Content elements: semantic mapping
  mathml.csemantics =
    mathml.semantics | mathml.annotation | mathml.annotation-xml
  mathml.attlist-semantics &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.attlist-annotation &= MATHML.Common.attrib, mathml.att-encoding
  mathml.attlist-annotation-xml &=
    MATHML.Common.attrib, mathml.att-encoding
  # Content elements: constructors
  mathml.cconstructor =
    mathml.interval
    | mathml.list
    | mathml.matrix
    | mathml.matrixrow
    | mathml.set
    | mathml.vector
    | mathml.piecewise
  mathml.attlist-interval &= MATHML.Common.attrib, mathml.att-closure
  mathml.attlist-set &= MATHML.Common.attrib, mathml.att-type
  mathml.attlist-list &= MATHML.Common.attrib, mathml.att-order
  mathml.attlist-vector &= MATHML.Common.attrib
  mathml.attlist-matrix &= MATHML.Common.attrib
  mathml.attlist-matrixrow &= MATHML.Common.attrib
  mathml.attlist-piecewise &= MATHML.Common.attrib
  mathml.attlist-piece &= MATHML.Common.attrib
  mathml.attlist-otherwise &= MATHML.Common.attrib
  # Content elements: symbols
  mathml.c0ary =
    mathml.integers
    | mathml.reals
    | mathml.rationals
    | mathml.naturalnumbers
    | mathml.complexes
    | mathml.primes
    | mathml.exponentiale
    | mathml.imaginaryi
    | mathml.notanumber
    | mathml.true
    | mathml.false
    | mathml.emptyset
    | mathml.pi
    | mathml.eulergamma
    | mathml.infinity
  mathml.integers =
    element ns1:integers { mathml.attlist-integers, empty }
  mathml.any |= mathml.integers
  mathml.attlist-integers &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.reals = element ns1:reals { mathml.attlist-reals, empty }
  mathml.any |= mathml.reals
  mathml.attlist-reals &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.rationals =
    element ns1:rationals { mathml.attlist-rationals, empty }
  mathml.any |= mathml.rationals
  mathml.attlist-rationals &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.naturalnumbers =
    element ns1:naturalnumbers { mathml.attlist-naturalnumbers, empty }
  mathml.any |= mathml.naturalnumbers
  mathml.attlist-naturalnumbers &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.complexes =
    element ns1:complexes { mathml.attlist-complexes, empty }
  mathml.any |= mathml.complexes
  mathml.attlist-complexes &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.primes = element ns1:primes { mathml.attlist-primes, empty }
  mathml.any |= mathml.primes
  mathml.attlist-primes &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.exponentiale =
    element ns1:exponentiale { mathml.attlist-exponentiale, empty }
  mathml.any |= mathml.exponentiale
  mathml.attlist-exponentiale &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.imaginaryi =
    element ns1:imaginaryi { mathml.attlist-imaginaryi, empty }
  mathml.any |= mathml.imaginaryi
  mathml.attlist-imaginaryi &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.notanumber =
    element ns1:notanumber { mathml.attlist-notanumber, empty }
  mathml.any |= mathml.notanumber
  mathml.attlist-notanumber &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.true = element ns1:true { mathml.attlist-true, empty }
  mathml.any |= mathml.true
  mathml.attlist-true &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.false = element ns1:false { mathml.attlist-false, empty }
  mathml.any |= mathml.false
  mathml.attlist-false &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.emptyset =
    element ns1:emptyset { mathml.attlist-emptyset, empty }
  mathml.any |= mathml.emptyset
  mathml.attlist-emptyset &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.pi = element ns1:pi { mathml.attlist-pi, empty }
  mathml.any |= mathml.pi
  mathml.attlist-pi &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.eulergamma =
    element ns1:eulergamma { mathml.attlist-eulergamma, empty }
  mathml.any |= mathml.eulergamma
  mathml.attlist-eulergamma &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.infinity =
    element ns1:infinity { mathml.attlist-infinity, empty }
  mathml.any |= mathml.infinity
  mathml.attlist-infinity &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  # Content elements: operators
  mathml.cfuncop1ary =
    mathml.inverse
    | mathml.ident
    | mathml.domain
    | mathml.codomain
    | mathml.image
  mathml.inverse = element ns1:inverse { mathml.attlist-inverse, empty }
  mathml.any |= mathml.inverse
  mathml.attlist-inverse &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.domain = element ns1:domain { mathml.attlist-domain, empty }
  mathml.any |= mathml.domain
  mathml.attlist-domain &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.codomain =
    element ns1:codomain { mathml.attlist-codomain, empty }
  mathml.any |= mathml.codomain
  mathml.attlist-codomain &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.image = element ns1:image { mathml.attlist-image, empty }
  mathml.any |= mathml.image
  mathml.attlist-image &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cfuncopnary = mathml.fn | mathml.compose
  mathml.attlist-fn &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.ident = element ns1:ident { mathml.attlist-ident, empty }
  mathml.any |= mathml.ident
  mathml.attlist-ident &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.compose = element ns1:compose { mathml.attlist-compose, empty }
  mathml.any |= mathml.compose
  mathml.attlist-compose &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.carithop1ary =
    mathml.abs
    | mathml.conjugate
    | mathml.exp
    | mathml.factorial
    | mathml.arg
    | mathml.real
    | mathml.imaginary
    | mathml.floor
    | mathml.ceiling
  mathml.exp = element ns1:exp { mathml.attlist-exp, empty }
  mathml.any |= mathml.exp
  mathml.attlist-exp &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.abs = element ns1:abs { mathml.attlist-abs, empty }
  mathml.any |= mathml.abs
  mathml.attlist-abs &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arg = element ns1:arg { mathml.attlist-arg, empty }
  mathml.any |= mathml.arg
  mathml.attlist-arg &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.real = element ns1:real { mathml.attlist-real, empty }
  mathml.any |= mathml.real
  mathml.attlist-real &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.imaginary =
    element ns1:imaginary { mathml.attlist-imaginary, empty }
  mathml.any |= mathml.imaginary
  mathml.attlist-imaginary &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.conjugate =
    element ns1:conjugate { mathml.attlist-conjugate, empty }
  mathml.any |= mathml.conjugate
  mathml.attlist-conjugate &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.factorial =
    element ns1:factorial { mathml.attlist-factorial, empty }
  mathml.any |= mathml.factorial
  mathml.attlist-factorial &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.floor = element ns1:floor { mathml.attlist-floor, empty }
  mathml.any |= mathml.floor
  mathml.attlist-floor &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.ceiling = element ns1:ceiling { mathml.attlist-ceiling, empty }
  mathml.any |= mathml.ceiling
  mathml.attlist-ceiling &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.carithop1or2ary = mathml.minus
  mathml.minus = element ns1:minus { mathml.attlist-minus, empty }
  mathml.any |= mathml.minus
  mathml.attlist-minus &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.carithop2ary =
    mathml.quotient | mathml.divide | mathml.power | mathml.rem
  mathml.quotient =
    element ns1:quotient { mathml.attlist-quotient, empty }
  mathml.any |= mathml.quotient
  mathml.attlist-quotient &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.divide = element ns1:divide { mathml.attlist-divide, empty }
  mathml.any |= mathml.divide
  mathml.attlist-divide &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.power = element ns1:power { mathml.attlist-power, empty }
  mathml.any |= mathml.power
  mathml.attlist-power &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.rem = element ns1:rem { mathml.attlist-rem, empty }
  mathml.any |= mathml.rem
  mathml.attlist-rem &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.carithopnary =
    mathml.plus
    | mathml.times
    | mathml.max
    | mathml.min
    | mathml.gcd
    | mathml.lcm
  mathml.plus = element ns1:plus { mathml.attlist-plus, empty }
  mathml.any |= mathml.plus
  mathml.attlist-plus &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.max = element ns1:max { mathml.attlist-max, empty }
  mathml.any |= mathml.max
  mathml.attlist-max &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.min = element ns1:min { mathml.attlist-min, empty }
  mathml.any |= mathml.min
  mathml.attlist-min &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.times = element ns1:times { mathml.attlist-times, empty }
  mathml.any |= mathml.times
  mathml.attlist-times &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.gcd = element ns1:gcd { mathml.attlist-gcd, empty }
  mathml.any |= mathml.gcd
  mathml.attlist-gcd &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.lcm = element ns1:lcm { mathml.attlist-lcm, empty }
  mathml.any |= mathml.lcm
  mathml.attlist-lcm &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.carithoproot = mathml.root
  mathml.root = element ns1:root { mathml.attlist-root, empty }
  mathml.any |= mathml.root
  mathml.attlist-root &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clogicopquant = mathml.exists | mathml.forall
  mathml.exists = element ns1:exists { mathml.attlist-exists, empty }
  mathml.any |= mathml.exists
  mathml.attlist-exists &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.forall = element ns1:forall { mathml.attlist-forall, empty }
  mathml.any |= mathml.forall
  mathml.attlist-forall &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clogicopnary = mathml.and | mathml.or | mathml.xor
  mathml.and = element ns1:and { mathml.attlist-and, empty }
  mathml.any |= mathml.and
  mathml.attlist-and &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.or = element ns1:or { mathml.attlist-or, empty }
  mathml.any |= mathml.or
  mathml.attlist-or &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.xor = element ns1:xor { mathml.attlist-xor, empty }
  mathml.any |= mathml.xor
  mathml.attlist-xor &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clogicop1ary = mathml.not
  mathml.not = element ns1:not { mathml.attlist-not, empty }
  mathml.any |= mathml.not
  mathml.attlist-not &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clogicop2ary = mathml.implies
  mathml.implies = element ns1:implies { mathml.attlist-implies, empty }
  mathml.any |= mathml.implies
  mathml.attlist-implies &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.ccalcop =
    mathml.log
    | mathml.int
    | mathml.diff
    | mathml.partialdiff
    | mathml.divergence
    | mathml.grad
    | mathml.curl
    | mathml.laplacian
  mathml.divergence =
    element ns1:divergence { mathml.attlist-divergence, empty }
  mathml.any |= mathml.divergence
  mathml.attlist-divergence &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.grad = element ns1:grad { mathml.attlist-grad, empty }
  mathml.any |= mathml.grad
  mathml.attlist-grad &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.curl = element ns1:curl { mathml.attlist-curl, empty }
  mathml.any |= mathml.curl
  mathml.attlist-curl &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.laplacian =
    element ns1:laplacian { mathml.attlist-laplacian, empty }
  mathml.any |= mathml.laplacian
  mathml.attlist-laplacian &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.log = element ns1:log { mathml.attlist-log, empty }
  mathml.any |= mathml.log
  mathml.attlist-log &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.int = element ns1:int { mathml.attlist-int, empty }
  mathml.any |= mathml.int
  mathml.attlist-int &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.diff = element ns1:diff { mathml.attlist-diff, empty }
  mathml.any |= mathml.diff
  mathml.attlist-diff &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.partialdiff =
    element ns1:partialdiff { mathml.attlist-partialdiff, empty }
  mathml.any |= mathml.partialdiff
  mathml.attlist-partialdiff &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.ccalcop1ary = mathml.ln
  mathml.ln = element ns1:ln { mathml.attlist-ln, empty }
  mathml.any |= mathml.ln
  mathml.attlist-ln &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csetop1ary = mathml.card
  mathml.card = element ns1:card { mathml.attlist-card, empty }
  mathml.any |= mathml.card
  mathml.attlist-card &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csetop2ary = mathml.setdiff
  mathml.setdiff = element ns1:setdiff { mathml.attlist-setdiff, empty }
  mathml.any |= mathml.setdiff
  mathml.attlist-setdiff &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csetopnary =
    mathml.union | mathml.intersect | mathml.cartesianproduct
  mathml.union = element ns1:union { mathml.attlist-union, empty }
  mathml.any |= mathml.union
  mathml.attlist-union &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.intersect =
    element ns1:intersect { mathml.attlist-intersect, empty }
  mathml.any |= mathml.intersect
  mathml.attlist-intersect &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cartesianproduct =
    element ns1:cartesianproduct {
      mathml.attlist-cartesianproduct, empty
    }
  mathml.any |= mathml.cartesianproduct
  mathml.attlist-cartesianproduct &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cseqop = mathml.sum | mathml.product | mathml.limit
  mathml.sum = element ns1:sum { mathml.attlist-sum, empty }
  mathml.any |= mathml.sum
  mathml.attlist-sum &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.product = element ns1:product { mathml.attlist-product, empty }
  mathml.any |= mathml.product
  mathml.attlist-product &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.limit = element ns1:limit { mathml.attlist-limit, empty }
  mathml.any |= mathml.limit
  mathml.attlist-limit &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.ctrigop =
    mathml.sin
    | mathml.cos
    | mathml.tan
    | mathml.sec
    | mathml.csc
    | mathml.cot
    | mathml.sinh
    | mathml.cosh
    | mathml.tanh
    | mathml.sech
    | mathml.csch
    | mathml.coth
    | mathml.arcsin
    | mathml.arccos
    | mathml.arctan
    | mathml.arccosh
    | mathml.arccot
    | mathml.arccoth
    | mathml.arccsc
    | mathml.arccsch
    | mathml.arcsec
    | mathml.arcsech
    | mathml.arcsinh
    | mathml.arctanh
  mathml.sin = element ns1:sin { mathml.attlist-sin, empty }
  mathml.any |= mathml.sin
  mathml.attlist-sin &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cos = element ns1:cos { mathml.attlist-cos, empty }
  mathml.any |= mathml.cos
  mathml.attlist-cos &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.tan = element ns1:tan { mathml.attlist-tan, empty }
  mathml.any |= mathml.tan
  mathml.attlist-tan &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.sec = element ns1:sec { mathml.attlist-sec, empty }
  mathml.any |= mathml.sec
  mathml.attlist-sec &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csc = element ns1:csc { mathml.attlist-csc, empty }
  mathml.any |= mathml.csc
  mathml.attlist-csc &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cot = element ns1:cot { mathml.attlist-cot, empty }
  mathml.any |= mathml.cot
  mathml.attlist-cot &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.sinh = element ns1:sinh { mathml.attlist-sinh, empty }
  mathml.any |= mathml.sinh
  mathml.attlist-sinh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cosh = element ns1:cosh { mathml.attlist-cosh, empty }
  mathml.any |= mathml.cosh
  mathml.attlist-cosh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.tanh = element ns1:tanh { mathml.attlist-tanh, empty }
  mathml.any |= mathml.tanh
  mathml.attlist-tanh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.sech = element ns1:sech { mathml.attlist-sech, empty }
  mathml.any |= mathml.sech
  mathml.attlist-sech &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csch = element ns1:csch { mathml.attlist-csch, empty }
  mathml.any |= mathml.csch
  mathml.attlist-csch &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.coth = element ns1:coth { mathml.attlist-coth, empty }
  mathml.any |= mathml.coth
  mathml.attlist-coth &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arcsin = element ns1:arcsin { mathml.attlist-arcsin, empty }
  mathml.any |= mathml.arcsin
  mathml.attlist-arcsin &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccos = element ns1:arccos { mathml.attlist-arccos, empty }
  mathml.any |= mathml.arccos
  mathml.attlist-arccos &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arctan = element ns1:arctan { mathml.attlist-arctan, empty }
  mathml.any |= mathml.arctan
  mathml.attlist-arctan &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccosh = element ns1:arccosh { mathml.attlist-arccosh, empty }
  mathml.any |= mathml.arccosh
  mathml.attlist-arccosh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccot = element ns1:arccot { mathml.attlist-arccot, empty }
  mathml.any |= mathml.arccot
  mathml.attlist-arccot &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccoth = element ns1:arccoth { mathml.attlist-arccoth, empty }
  mathml.any |= mathml.arccoth
  mathml.attlist-arccoth &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccsc = element ns1:arccsc { mathml.attlist-arccsc, empty }
  mathml.any |= mathml.arccsc
  mathml.attlist-arccsc &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arccsch = element ns1:arccsch { mathml.attlist-arccsch, empty }
  mathml.any |= mathml.arccsch
  mathml.attlist-arccsch &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arcsec = element ns1:arcsec { mathml.attlist-arcsec, empty }
  mathml.any |= mathml.arcsec
  mathml.attlist-arcsec &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arcsech = element ns1:arcsech { mathml.attlist-arcsech, empty }
  mathml.any |= mathml.arcsech
  mathml.attlist-arcsech &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arcsinh = element ns1:arcsinh { mathml.attlist-arcsinh, empty }
  mathml.any |= mathml.arcsinh
  mathml.attlist-arcsinh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.arctanh = element ns1:arctanh { mathml.attlist-arctanh, empty }
  mathml.any |= mathml.arctanh
  mathml.attlist-arctanh &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cstatopnary =
    mathml.mean
    | mathml.sdev
    | mathml.variance
    | mathml.median
    | mathml.mode
  mathml.mean = element ns1:mean { mathml.attlist-mean, empty }
  mathml.any |= mathml.mean
  mathml.attlist-mean &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.sdev = element ns1:sdev { mathml.attlist-sdev, empty }
  mathml.any |= mathml.sdev
  mathml.attlist-sdev &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.variance =
    element ns1:variance { mathml.attlist-variance, empty }
  mathml.any |= mathml.variance
  mathml.attlist-variance &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.median = element ns1:median { mathml.attlist-median, empty }
  mathml.any |= mathml.median
  mathml.attlist-median &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.mode = element ns1:mode { mathml.attlist-mode, empty }
  mathml.any |= mathml.mode
  mathml.attlist-mode &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cstatopmoment = mathml.moment
  mathml.moment = element ns1:moment { mathml.attlist-moment, empty }
  mathml.any |= mathml.moment
  mathml.attlist-moment &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clalgop1ary = mathml.determinant | mathml.transpose
  mathml.determinant =
    element ns1:determinant { mathml.attlist-determinant, empty }
  mathml.any |= mathml.determinant
  mathml.attlist-determinant &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.transpose =
    element ns1:transpose { mathml.attlist-transpose, empty }
  mathml.any |= mathml.transpose
  mathml.attlist-transpose &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clalgop2ary =
    mathml.vectorproduct | mathml.scalarproduct | mathml.outerproduct
  mathml.vectorproduct =
    element ns1:vectorproduct { mathml.attlist-vectorproduct, empty }
  mathml.any |= mathml.vectorproduct
  mathml.attlist-vectorproduct &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.scalarproduct =
    element ns1:scalarproduct { mathml.attlist-scalarproduct, empty }
  mathml.any |= mathml.scalarproduct
  mathml.attlist-scalarproduct &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.outerproduct =
    element ns1:outerproduct { mathml.attlist-outerproduct, empty }
  mathml.any |= mathml.outerproduct
  mathml.attlist-outerproduct &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.clalgopnary = mathml.selector
  mathml.selector =
    element ns1:selector { mathml.attlist-selector, empty }
  mathml.any |= mathml.selector
  mathml.attlist-selector &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  # Content elements: relations
  mathml.cgenrel2ary = mathml.neq | mathml.factorof
  mathml.neq = element ns1:neq { mathml.attlist-neq, empty }
  mathml.any |= mathml.neq
  mathml.attlist-neq &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.factorof =
    element ns1:factorof { mathml.attlist-factorof, empty }
  mathml.any |= mathml.factorof
  mathml.attlist-factorof &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cgenrelnary =
    mathml.eq
    | mathml.leq
    | mathml.lt
    | mathml.geq
    | mathml.gt
    | mathml.equivalent
    | mathml.approx
  mathml.eq = element ns1:eq { mathml.attlist-eq, empty }
  mathml.any |= mathml.eq
  mathml.attlist-eq &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.equivalent =
    element ns1:equivalent { mathml.attlist-equivalent, empty }
  mathml.any |= mathml.equivalent
  mathml.attlist-equivalent &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.approx = element ns1:approx { mathml.attlist-approx, empty }
  mathml.any |= mathml.approx
  mathml.attlist-approx &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.gt = element ns1:gt { mathml.attlist-gt, empty }
  mathml.any |= mathml.gt
  mathml.attlist-gt &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.lt = element ns1:lt { mathml.attlist-lt, empty }
  mathml.any |= mathml.lt
  mathml.attlist-lt &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.geq = element ns1:geq { mathml.attlist-geq, empty }
  mathml.any |= mathml.geq
  mathml.attlist-geq &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.leq = element ns1:leq { mathml.attlist-leq, empty }
  mathml.any |= mathml.leq
  mathml.attlist-leq &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csetrel2ary =
    mathml.in | mathml.notin | mathml.notsubset | mathml.notprsubset
  mathml.in = element ns1:in { mathml.attlist-in, empty }
  mathml.any |= mathml.in
  mathml.attlist-in &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.notin = element ns1:notin { mathml.attlist-notin, empty }
  mathml.any |= mathml.notin
  mathml.attlist-notin &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.notsubset =
    element ns1:notsubset { mathml.attlist-notsubset, empty }
  mathml.any |= mathml.notsubset
  mathml.attlist-notsubset &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.notprsubset =
    element ns1:notprsubset { mathml.attlist-notprsubset, empty }
  mathml.any |= mathml.notprsubset
  mathml.attlist-notprsubset &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.csetrelnary = mathml.subset | mathml.prsubset
  mathml.subset = element ns1:subset { mathml.attlist-subset, empty }
  mathml.any |= mathml.subset
  mathml.attlist-subset &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.prsubset =
    element ns1:prsubset { mathml.attlist-prsubset, empty }
  mathml.any |= mathml.prsubset
  mathml.attlist-prsubset &=
    MATHML.Common.attrib, mathml.att-definition, mathml.att-encoding
  mathml.cseqrel2ary = mathml.tendsto
  mathml.tendsto = element ns1:tendsto { mathml.attlist-tendsto, empty }
  mathml.any |= mathml.tendsto
  mathml.attlist-tendsto &=
    MATHML.Common.attrib,
    mathml.att-definition,
    mathml.att-encoding,
    mathml.att-type
  # Content elements: quantifiers
  mathml.cquantifier =
    mathml.lowlimit
    | mathml.uplimit
    | mathml.bvar
    | mathml.degree
    | mathml.logbase
    | mathml.momentabout
    | mathml.domainofapplication
  mathml.attlist-lowlimit &= MATHML.Common.attrib
  mathml.attlist-uplimit &= MATHML.Common.attrib
  mathml.attlist-bvar &= MATHML.Common.attrib
  mathml.attlist-degree &= MATHML.Common.attrib
  mathml.attlist-logbase &= MATHML.Common.attrib
  mathml.attlist-momentabout &= MATHML.Common.attrib
  mathml.attlist-domainofapplication &= MATHML.Common.attrib
  # Operator groups
  mathml.cop1ary =
    mathml.cfuncop1ary
    | mathml.carithop1ary
    | mathml.clogicop1ary
    | mathml.ccalcop1ary
    | mathml.ctrigop
    | mathml.clalgop1ary
    | mathml.csetop1ary
  mathml.cop2ary =
    mathml.carithop2ary
    | mathml.clogicop2ary
    | mathml.clalgop2ary
    | mathml.csetop2ary
  mathml.copnary =
    mathml.cfuncopnary
    | mathml.carithopnary
    | mathml.clogicopnary
    | mathml.csetopnary
    | mathml.cstatopnary
    | mathml.clalgopnary
  mathml.copmisc =
    mathml.carithoproot
    | mathml.carithop1or2ary
    | mathml.ccalcop
    | mathml.cseqop
    | mathml.cstatopmoment
    | mathml.clogicopquant
  # Relation groups
  mathml.crel2ary =
    mathml.cgenrel2ary | mathml.csetrel2ary | mathml.cseqrel2ary
  mathml.crelnary = mathml.cgenrelnary | mathml.csetrelnary
  # Content constructs: all
  mathml.Content =
    mathml.ctoken
    | mathml.cspecial
    | mathml.cother
    | mathml.csemantics
    | mathml.c0ary
    | mathml.cconstructor
    | mathml.cquantifier
    | mathml.cop1ary
    | mathml.cop2ary
    | mathml.copnary
    | mathml.copmisc
    | mathml.crel2ary
    | mathml.crelnary
  # Content constructs for substitution in presentation structures
  mathml.ContInPres =
    mathml.ci
    | mathml.csymbol
    | mathml.cn
    | mathml.c0ary
    | mathml.apply
    | mathml.fn
    | mathml.lambda
    | mathml.reln
    | mathml.cconstructor
    | mathml.semantics
    | mathml.declare
  # .............................................................
  
  # Recursive definition for content of expressions. Include
  # presentation constructs at lowest level so presentation
  # layout schemata hold presentation or content elements.
  # Include content constructs at lowest level so content
  # elements hold PCDATA or presentation elements at leaf
  # level (for permitted substitutable elements in context)
  mathml.ContentExpression = (mathml.Content | mathml.PresInCont)*
  mathml.PresExpression = (mathml.Presentation | mathml.ContInPres)*
  mathml.MathExpression = (mathml.PresInCont | mathml.ContInPres)*
  # PCDATA or MathML character elements
  mathml.MathMLCharacters = text | mathml.mglyph
  # Content elements: tokens
  
  # (may contain embedded presentation constructs)
  mathml.ci =
    element ns1:ci {
      mathml.attlist-ci, (mathml.MathMLCharacters | mathml.PresInCont)*
    }
  mathml.any |= mathml.ci
  mathml.csymbol =
    element ns1:csymbol {
      mathml.attlist-csymbol,
      (mathml.MathMLCharacters | mathml.PresInCont)*
    }
  mathml.any |= mathml.csymbol
  mathml.cn =
    element ns1:cn {
      mathml.attlist-cn,
      (mathml.MathMLCharacters | mathml.sep | mathml.PresInCont)*
    }
  mathml.any |= mathml.cn
  # Content elements: special
  mathml.apply =
    element ns1:apply { mathml.attlist-apply, mathml.ContentExpression }
  mathml.any |= mathml.apply
  mathml.reln =
    element ns1:reln { mathml.attlist-reln, mathml.ContentExpression }
  mathml.any |= mathml.reln
  mathml.lambda =
    element ns1:lambda {
      mathml.attlist-lambda, mathml.ContentExpression
    }
  mathml.any |= mathml.lambda
  # Content elements: other
  mathml.condition =
    element ns1:condition {
      mathml.attlist-condition, mathml.ContentExpression
    }
  mathml.any |= mathml.condition
  mathml.declare =
    element ns1:declare {
      mathml.attlist-declare, mathml.ContentExpression
    }
  mathml.any |= mathml.declare
  # Content elements: semantics
  mathml.semantics =
    element ns1:semantics {
      mathml.attlist-semantics, mathml.ContentExpression
    }
  mathml.any |= mathml.semantics
  mathml.Annotation.content = text
  mathml.annotation =
    element ns1:annotation {
      mathml.attlist-annotation, mathml.Annotation.content
    }
  mathml.any |= mathml.annotation
  mathml.annotation-xml =
    element ns1:annotation-xml {
      mathml.attlist-annotation-xml, mathml.any
    }
  mathml.any |= mathml.annotation-xml
  # Content elements: constructors
  mathml.interval =
    element ns1:interval {
      mathml.attlist-interval, mathml.ContentExpression
    }
  mathml.any |= mathml.interval
  mathml.set =
    element ns1:set { mathml.attlist-set, mathml.ContentExpression }
  mathml.any |= mathml.set
  mathml.list =
    element ns1:list { mathml.attlist-list, mathml.ContentExpression }
  mathml.any |= mathml.list
  mathml.vector =
    element ns1:vector {
      mathml.attlist-vector, mathml.ContentExpression
    }
  mathml.any |= mathml.vector
  mathml.matrix =
    element ns1:matrix {
      mathml.attlist-matrix, mathml.ContentExpression
    }
  mathml.any |= mathml.matrix
  mathml.matrixrow =
    element ns1:matrixrow {
      mathml.attlist-matrixrow, mathml.ContentExpression
    }
  mathml.any |= mathml.matrixrow
  mathml.piecewise =
    element ns1:piecewise {
      mathml.attlist-piecewise, mathml.piece*, mathml.otherwise?
    }
  mathml.any |= mathml.piecewise
  mathml.piece =
    element ns1:piece { mathml.attlist-piece, mathml.ContentExpression }
  mathml.any |= mathml.piece
  mathml.otherwise =
    element ns1:otherwise {
      mathml.attlist-otherwise, mathml.ContentExpression
    }
  mathml.any |= mathml.otherwise
  # Content elements: operator (user-defined)
  mathml.fn =
    element ns1:fn { mathml.attlist-fn, mathml.ContentExpression }
  mathml.any |= mathml.fn
  # Content elements: quantifiers
  mathml.lowlimit =
    element ns1:lowlimit {
      mathml.attlist-lowlimit, mathml.ContentExpression
    }
  mathml.any |= mathml.lowlimit
  mathml.uplimit =
    element ns1:uplimit {
      mathml.attlist-uplimit, mathml.ContentExpression
    }
  mathml.any |= mathml.uplimit
  mathml.bvar =
    element ns1:bvar { mathml.attlist-bvar, mathml.ContentExpression }
  mathml.any |= mathml.bvar
  mathml.degree =
    element ns1:degree {
      mathml.attlist-degree, mathml.ContentExpression
    }
  mathml.any |= mathml.degree
  mathml.logbase =
    element ns1:logbase {
      mathml.attlist-logbase, mathml.ContentExpression
    }
  mathml.any |= mathml.logbase
  mathml.momentabout =
    element ns1:momentabout {
      mathml.attlist-momentabout, mathml.ContentExpression
    }
  mathml.any |= mathml.momentabout
  mathml.domainofapplication =
    element ns1:domainofapplication {
      mathml.attlist-domainofapplication, mathml.ContentExpression
    }
  mathml.any |= mathml.domainofapplication
  # .............................................................
  
  # Presentation layout schemata contain tokens,
  # layout and content schemata.
  mathml.mstyle =
    element ns1:mstyle { mathml.attlist-mstyle, mathml.PresExpression }
  mathml.any |= mathml.mstyle
  mathml.merror =
    element ns1:merror { mathml.attlist-merror, mathml.PresExpression }
  mathml.any |= mathml.merror
  mathml.mphantom =
    element ns1:mphantom {
      mathml.attlist-mphantom, mathml.PresExpression
    }
  mathml.any |= mathml.mphantom
  mathml.mrow =
    element ns1:mrow { mathml.attlist-mrow, mathml.PresExpression }
  mathml.any |= mathml.mrow
  mathml.mfrac =
    element ns1:mfrac { mathml.attlist-mfrac, mathml.PresExpression }
  mathml.any |= mathml.mfrac
  mathml.msqrt =
    element ns1:msqrt { mathml.attlist-msqrt, mathml.PresExpression }
  mathml.any |= mathml.msqrt
  mathml.menclose =
    element ns1:menclose {
      mathml.attlist-menclose, mathml.PresExpression
    }
  mathml.any |= mathml.menclose
  mathml.mroot =
    element ns1:mroot { mathml.attlist-mroot, mathml.PresExpression }
  mathml.any |= mathml.mroot
  mathml.msub =
    element ns1:msub { mathml.attlist-msub, mathml.PresExpression }
  mathml.any |= mathml.msub
  mathml.msup =
    element ns1:msup { mathml.attlist-msup, mathml.PresExpression }
  mathml.any |= mathml.msup
  mathml.msubsup =
    element ns1:msubsup {
      mathml.attlist-msubsup, mathml.PresExpression
    }
  mathml.any |= mathml.msubsup
  mathml.mmultiscripts =
    element ns1:mmultiscripts {
      mathml.attlist-mmultiscripts, mathml.PresExpression
    }
  mathml.any |= mathml.mmultiscripts
  mathml.munder =
    element ns1:munder { mathml.attlist-munder, mathml.PresExpression }
  mathml.any |= mathml.munder
  mathml.mover =
    element ns1:mover { mathml.attlist-mover, mathml.PresExpression }
  mathml.any |= mathml.mover
  mathml.munderover =
    element ns1:munderover {
      mathml.attlist-munderover, mathml.PresExpression
    }
  mathml.any |= mathml.munderover
  mathml.mtable =
    element ns1:mtable { mathml.attlist-mtable, mathml.PresExpression }
  mathml.any |= mathml.mtable
  mathml.mtr =
    element ns1:mtr { mathml.attlist-mtr, mathml.PresExpression }
  mathml.any |= mathml.mtr
  mathml.mlabeledtr =
    element ns1:mlabeledtr {
      mathml.attlist-mlabeledtr, mathml.PresExpression
    }
  mathml.any |= mathml.mlabeledtr
  mathml.mtd =
    element ns1:mtd { mathml.attlist-mtd, mathml.PresExpression }
  mathml.any |= mathml.mtd
  mathml.maction =
    element ns1:maction {
      mathml.attlist-maction, mathml.PresExpression
    }
  mathml.any |= mathml.maction
  mathml.mfenced =
    element ns1:mfenced {
      mathml.attlist-mfenced, mathml.PresExpression
    }
  mathml.any |= mathml.mfenced
  mathml.mpadded =
    element ns1:mpadded {
      mathml.attlist-mpadded, mathml.PresExpression
    }
  mathml.any |= mathml.mpadded
  # Presentation elements contain PCDATA or malignmark constructs.
  mathml.mi =
    element ns1:mi {
      mathml.attlist-mi, (mathml.MathMLCharacters | mathml.malignmark)*
    }
  mathml.any |= mathml.mi
  mathml.mn =
    element ns1:mn {
      mathml.attlist-mn, (mathml.MathMLCharacters | mathml.malignmark)*
    }
  mathml.any |= mathml.mn
  mathml.mo =
    element ns1:mo {
      mathml.attlist-mo, (mathml.MathMLCharacters | mathml.malignmark)*
    }
  mathml.any |= mathml.mo
  mathml.mtext =
    element ns1:mtext {
      mathml.attlist-mtext,
      (mathml.MathMLCharacters | mathml.malignmark)*
    }
  mathml.any |= mathml.mtext
  mathml.ms =
    element ns1:ms {
      mathml.attlist-ms, (mathml.MathMLCharacters | mathml.malignmark)*
    }
  mathml.any |= mathml.ms
  # Browser interface definition  ...............................
  
  # Attributes for top-level element "math"
  mathml.att-macros = attribute macros { text }?
  mathml.att-mode = attribute mode { text }?
  mathml.att-display = attribute display { text }?
  mathml.att-topinfo =
    MATHML.Common.attrib,
    mathml.att-macros,
    mathml.att-mode,
    mathml.att-display
  # Attributes for browser interface element
  mathml.att-baseline = attribute baseline { text }?
  mathml.att-overflow =
    [ a:defaultValue = "scroll" ]
    attribute overflow { "scroll" | "elide" | "truncate" | "scale" }?
  mathml.att-altimg = attribute altimg { text }?
  mathml.att-alttext = attribute alttext { text }?
  mathml.att-browif =
    mathml.att-type,
    mathml.att-name,
    mathml.att-height,
    mathml.att-width,
    mathml.att-baseline,
    mathml.att-overflow,
    mathml.att-altimg,
    mathml.att-alttext
  # .............................................................
  
  # The top-level element "math" contains MathML encoded
  # mathematics. The "math" element has the browser info
  # attributes iff it is also the browser interface element.
  mathml.math =
    element ns1:math { mathml.attlist-math, mathml.MathExpression }
  mathml.any |= mathml.math
  mathml.attlist-math &= mathml.att-topinfo, mathml.att-browif
  # MathML Character Entities ..............................................
  
  # Entity sets from ISO Technical Report 9573-13 .....
  
  # Entity sets from informative annex to ISO 8879:1986 (SGML) .......
  
  # New characters defined by MathML ............................
  
  # MathML aliases for characters defined above .................
  
  # end of MathML Character Entity section
  
  # Revision History:
  # 
  # Initial draft (syntax = XML) 1997-05-09
  #    Stephen Buswell
  # Revised 1997-05-14
  #    Robert Miner
  # Revised 1997-06-29 and 1997-07-02
  #    Stephen Buswell
  # Revised 1997-12-15
  #    Stephen Buswell
  # Revised 1998-02-08
  #    Stephen Buswell
  # Revised 1998-04-04
  #    Stephen Buswell
  # Entities and small revisions 1999-02-21
  #    David Carlisle
  # Added attribute definitionURL to ci and cn 1999-10-11
  #    Nico Poppelier
  # Additions for MathML 2  1999-12-16
  #    David Carlisle
  # Namespace support 2000-01-14
  #    David Carlisle
  # XHTML Compatibility 2000-02-23
  #    Murray Altheim
  # New content elements 2000-03-26
  #    David Carlisle
  # Further revisions for MathML2 CR draft 2000-07-11
  #    David Carlisle
  # Further revisions for MathML2 CR draft 2000-10-31
  #    David Carlisle
  # Revisions for Unicode 3.2  2002-05-21
  #    David Carlisle
  # Add width and side attributes to mtable (to align with the specification)  2002-06-05
  #    David Carlisle
  # Use %XLINK.prefix rather than hardwired xlink:, add xlink:type 2002-06-12
  #    David Carlisle
  # Add missing numalign and denomalign attributes for mfrac 2002-07-05
  #    David Carlisle
  #
  
  # end of MathML 2.0 DTD  ................................................
  
  # .......................................................................
  mathml.any |= text
}
tei_data.certainty = "high" | "medium" | "low" | "unknown"
tei_data.probability =
  xsd:double { minInclusive = "0" maxInclusive = "1" }
tei_data.numeric = xsd:double | xsd:decimal
tei_data.count = xsd:nonNegativeInteger
tei_data.temporal =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
  | xsd:token {
      pattern =
        "(-?[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T)?([01][0-9]|2[0-3])(:[0-5][0-9])?(Z|[+\-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?"
    }
tei_data.duration = xsd:duration
tei_data.truthValue = xsd:boolean
tei_data.xTruthValue = xsd:boolean | "unknown" | "inapplicable"
tei_data.language = xsd:language
tei_data.sex = "0" | "1" | "2" | "9"
tei_data.namespace = xsd:anyURI
tei_data.outputMeasurement =
  xsd:token {
    pattern =
      "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
  }
tei_data.pattern = xsd:token
tei_data.pointer = xsd:anyURI
tei_data.code = xsd:anyURI
tei_data.enumerated = xsd:token
tei_data.key = xsd:string
tei_data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
tei_data.name = xsd:Name
tei_macro.component =
  tei_model.common
  | tei_mix.drama
  | tei_mix.spoken
  | tei_mix.dictionaries
tei_macro.componentSeq = (tei_macro.component | tei_model.global)*
tei_macro.paraContent =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global)*
tei_macro.phraseSeq =
  (text | tei_model.gLike | tei_model.phrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_macro.xtext = (text | tei_model.gLike)*
tei_macro.fileDescPart =
  tei_titleStmt,
  tei_editionStmt?,
  tei_extent?,
  tei_publicationStmt,
  tei_seriesStmt?,
  tei_notesStmt?
tei_macro.glossSeq = tei_altIdent?, tei_equiv*, tei_gloss*, tei_desc*
tei_mix.dictionaries = tei_model.entryLike
tei_mix.drama = tei_model.divPart.stage
tei_mix.spoken = tei_model.divPart.spoken
tei_AnyThing =
  (element TEI
           | ab
           | abbr
           | accMat
           | acquisition
           | activity
           | actor
           | add
           | addName
           | addSpan
           | additional
           | additions
           | addrLine
           | address
           | adminInfo
           | affiliation
           | age
           | alt
           | altGrp
           | altIdent
           | altIdentifier
           | analytic
           | anchor
           | app
           | arc
           | argument
           | att
           | attDef
           | attList
           | attRef
           | author
           | authority
           | availability
           | back
           | bibl
           | biblFull
           | biblItem
           | biblScope
           | biblStruct
           | bicond
           | binary
           | binaryObject
           | binding
           | bindingDesc
           | birth
           | bloc
           | body
           | broadcast
           | byline
           | c
           | cRefPattern
           | caesura
           | camera
           | caption
           | case
           | castGroup
           | castItem
           | castList
           | catDesc
           | catRef
           | catchwords
           | category
           | cb
           | cell
           | certainty
           | change
           | channel
           | char
           | charDesc
           | charName
           | charProp
           | choice
           | cit
           | cl
           | classCode
           | classDecl
           | classSpec
           | classes
           | closer
           | code
           | collation
           | collection
           | colloc
           | colophon
           | cond
           | condition
           | constitution
           | content
           | corr
           | correction
           | country
           | creation
           | custEvent
           | custodialHist
           | damage
           | datatype
           | date
           | dateline
           | death
           | decoDesc
           | decoNote
           | def
           | default
           | defaultVal
           | del
           | delSpan
           | depth
           | derivation
           | desc
           | dictScrap
           | dicteg
           | dimensions
           | distance
           | distinct
           | distributor
           | district
           | div
           | div1
           | div2
           | div3
           | div4
           | div5
           | div6
           | div7
           | divGen
           | docAuthor
           | docDate
           | docEdition
           | docImprint
           | docTitle
           | domain
           | eLeaf
           | eTree
           | edition
           | editionStmt
           | editor
           | editorialDecl
           | education
           | eg
           | egXML
           | elementSpec
           | email
           | emph
           | encodingDesc
           | entry
           | entryFree
           | epigraph
           | epilogue
           | equipment
           | equiv
           | etym
           | event
           | exemplum
           | expan
           | explicit
           | extent
           | f
           | fDecl
           | fDescr
           | fLib
           | factuality
           | faith
           | figDesc
           | figure
           | fileDesc
           | filiation
           | finalRubric
           | firstLang
           | floruit
           | foliation
           | foreign
           | forename
           | forest
           | forestGrp
           | form
           | formula
           | front
           | fs
           | fsConstraints
           | fsDecl
           | fsDescr
           | fsdDecl
           | funder
           | fvLib
           | fw
           | g
           | gap
           | gen
           | genName
           | geog
           | geogName
           | gi
           | gloss
           | glyph
           | glyphName
           | gram
           | gramGrp
           | graph
           | graphic
           | group
           | hand
           | handDesc
           | handList
           | handNote
           | handShift
           | head
           | headItem
           | headLabel
           | height
           | heraldry
           | hi
           | history
           | hom
           | hyph
           | hyphenation
           | iNode
           | iType
           | ident
           | idno
           | if
           | iff
           | imprimatur
           | imprint
           | incipit
           | index
           | institution
           | interaction
           | interp
           | interpGrp
           | interpretation
           | item
           | join
           | joinGrp
           | keywords
           | kinesic
           | l
           | label
           | lacunaEnd
           | lacunaStart
           | lang
           | langKnowledge
           | langKnown
           | langUsage
           | language
           | layout
           | layoutDesc
           | lb
           | lbl
           | leaf
           | lem
           | lg
           | link
           | linkGrp
           | list
           | listBibl
           | listPerson
           | listRef
           | localName
           | locale
           | locus
           | m
           | macroSpec
           | mapping
           | material
           | measure
           | meeting
           | memberOf
           | mentioned
           | metDecl
           | metSym
           | milestone
           | moduleRef
           | moduleSpec
           | monogr
           | mood
           | move
           | msContents
           | msDescription
           | msIdentifier
           | msItem
           | msItemStruct
           | msName
           | msPart
           | musicNotation
           | name
           | nameLink
           | namespace
           | nationality
           | node
           | normalization
           | note
           | notesStmt
           | num
           | number
           | numeric
           | oRef
           | oVar
           | objectDesc
           | occupation
           | offset
           | opener
           | orgDivn
           | orgName
           | orgTitle
           | orgType
           | orig
           | origDate
           | origPlace
           | origin
           | orth
           | p
           | pRef
           | pVar
           | particDesc
           | particLinks
           | pause
           | pb
           | per
           | performance
           | persEvent
           | persName
           | persState
           | persTrait
           | person
           | personGrp
           | phr
           | physDesc
           | placeName
           | pos
           | postBox
           | postCode
           | preparedness
           | principal
           | profileDesc
           | projectDesc
           | prologue
           | pron
           | provenance
           | ptr
           | pubPlace
           | publicationStmt
           | publisher
           | purpose
           | q
           | quotation
           | quote
           | rdg
           | rdgGrp
           | re
           | recordHist
           | recording
           | recordingStmt
           | ref
           | refsDecl
           | reg
           | region
           | relation
           | remarks
           | rendition
           | repository
           | residence
           | resp
           | respStmt
           | respons
           | restore
           | revisionDesc
           | rhyme
           | role
           | roleDesc
           | roleName
           | root
           | row
           | rs
           | rubric
           | s
           | salute
           | samplingDecl
           | schemaSpec
           | scriptStmt
           | seal
           | sealDesc
           | secFol
           | seg
           | segmentation
           | sense
           | series
           | seriesStmt
           | set
           | setting
           | settingDesc
           | settlement
           | sex
           | shift
           | sic
           | signatures
           | signed
           | soCalled
           | socecStatus
           | sound
           | source
           | sourceDesc
           | sp
           | space
           | span
           | spanGrp
           | speaker
           | specDesc
           | specGrp
           | specGrpRef
           | specList
           | sponsor
           | stage
           | stamp
           | state
           | stdVals
           | street
           | stress
           | string
           | stringVal
           | subc
           | summary
           | superEntry
           | supplied
           | support
           | supportDesc
           | surname
           | surrogates
           | syll
           | symbol
           | table
           | tag
           | tagUsage
           | tagsDecl
           | taxonomy
           | tech
           | teiCorpus
           | teiHeader
           | teifsd
           | term
           | text
           | textClass
           | textDesc
           | textLang
           | then
           | time
           | timeline
           | title
           | titlePage
           | titlePart
           | titleStmt
           | tns
           | tr
           | trailer
           | trans
           | tree
           | triangle
           | u
           | unclear
           | unicodeName
           | usg
           | vAlt
           | vColl
           | vDefault
           | vLabel
           | vMerge
           | vNot
           | vRange
           | val
           | valDesc
           | valItem
           | valList
           | value
           | variantEncoding
           | view
           | vocal
           | w
           | watermark
           | when
           | width
           | wit
           | witDetail
           | witEnd
           | witList
           | witStart
           | witness
           | writing
           | xr {
     attribute * - (xml:id | xml:lang) { text }*,
     tei_AnyThing
   }
   | text)*
tei_att.ascribed.attributes = att.ascribed.attribute.who, empty
att.ascribed.attribute.who =
  
  ## indicates the person, or group of
  ##	people, to whom the element content is ascribed.
  attribute who {
    list { tei_data.pointer+ }
  }?
tei_att.authorialIntervention.attributes =
  att.authorialIntervention.attribute.hand,
  att.authorialIntervention.attribute.status,
  att.authorialIntervention.attribute.type,
  empty
att.authorialIntervention.attribute.hand =
  
  ## signifies the hand of the agent which made the addition or
  ##       performed the deletion.
  attribute hand { tei_data.pointer }?
att.authorialIntervention.attribute.status =
  
  ## may be used to indicate faulty deletions, e.g. strikeouts
  ##       which include too much or too little text, or erroneous
  ##       additions, e.g., an insertion which duplicates some of the text
  ##       already present.
  ## Sample values include: 1] duplicate (all of the text indicated as an addition duplicates
  ##	  some text that is in the original, whether the duplication
  ##	  is word-for-word or less exact.); 2] duplicate-partial (part of the text indicated as an addition duplicates
  ##	  some text that is in the original); 3] excessStart (some text at the beginning of the deletion is marked
  ##           as deleted even though it clearly should not be
  ##           deleted.); 4] excessEnd (some text at the end of the deletion is marked as
  ##           deleted even though it clearly should not be
  ##           deleted.); 5] shortStart (some text at the beginning of the deletion is not
  ##           marked as deleted even though it clearly should be.); 6] shortEnd (some text at the end of the deletion is not marked as
  ##           deleted even though it clearly should be.); 7] unremarkable (the deletion is not faulty.)
  [ a1:defaultValue = "unremarkable" ]
  attribute status { tei_data.enumerated }?
att.authorialIntervention.attribute.type =
  
  ## classifies the type of addition or deletion using any convenient typology.
  attribute type { tei_data.enumerated }?
tei_att.datable.attributes =
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
att.datable.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in
  ##	standard form, e.g. yyyy-mm-dd.
  attribute notBefore { tei_data.temporal }?
att.datable.attribute.notAfter =
  
  ## specifies the latest possible date for the event in
  ##	standard form, e.g. yyyy-mm-dd.
  attribute notAfter { tei_data.temporal }?
att.datable.attribute.from =
  
  ## indicates the starting point of the period in standard form.
  attribute from { tei_data.temporal }?
att.datable.attribute.to =
  
  ## indicates the ending point of the period in standard form.
  attribute to { tei_data.temporal }?
tei_att.datePart.attributes =
  att.datePart.attribute.value, att.datePart.attribute.dur, empty
att.datePart.attribute.value =
  
  ## supplies the value of a date or time in a standard form.
  attribute value { tei_data.temporal }?
att.datePart.attribute.dur =
  
  ## (duration) indicates the length of this element in time.
  attribute dur { xsd:duration }?
tei_att.declarable.attributes = att.declarable.attribute.default, empty
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when
  ## its parent is selected.
  [ a1:defaultValue = "false" ]
  attribute default {
    
    ## (This element is selected if its parent is selected) 
    "true"
    | 
      ## (This element can only be selected explicitly, unless it is the
      ## only one of its kind, in which case it is selected if its parent is selected.) 
      "false"
  }?
tei_att.declaring.attributes = att.declaring.attribute.decls, empty
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the
  ## header, which are understood to apply to the element bearing this
  ## attribute and its content.
  attribute decls {
    list { tei_data.pointer+ }
  }?
tei_att.divLike.attributes =
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  empty
att.divLike.attribute.type =
  
  ## specifies a name conventionally used for this level of
  ##		subdivision, e.g. act, volume, book,
  ##		section, canto, etc.
  attribute type { tei_data.enumerated }?
att.divLike.attribute.org =
  
  ## specifies how the content of the division is organized.
  [ a1:defaultValue = "uniform" ]
  attribute org {
    
    ## (composite content: i.e. no claim is made about the
    ##		  sequence in which the immediate contents of this division
    ##		  are to be processed, or their inter-relationships.) 
    "composite"
    | 
      ## (uniform content: i.e. the immediate contents of this
      ##		  element are regarded as forming a logical unit, to be
      ##		  processed in sequence.) 
      "uniform"
  }?
att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the
  ##		original source and if so, from which part.
  [ a1:defaultValue = "complete" ]
  attribute sample {
    
    ## (division lacks material present at end in source.) 
    "initial"
    | 
      ## (division lacks material at start and end.) 
      "medial"
    | 
      ## (division lacks material at start.) 
      "final"
    | 
      ## (position of sampled material within original unknown.) 
      "unknown"
    | 
      ## (division is not a sample.) 
      "complete"
  }?
att.divLike.attribute.part =
  
  ## specifies whether or not the division is fragmented by
  ##		some other structural element, for example a speech which is
  ##		divided between two or more verse stanzas.
  [ a1:defaultValue = "N" ]
  attribute part {
    
    ## (the division is incomplete in some respect) 
    "Y"
    | 
      ## (either the division is complete, or no claim is made as to its completeness.) 
      "N"
    | 
      ## (the initial part of an incomplete division) 
      "I"
    | 
      ## (a medial part of an incomplete division) 
      "M"
    | 
      ## (the final part of an incomplete division) 
      "F"
  }?
tei_att.interpLike.attributes =
  att.interpLike.attribute.resp,
  att.interpLike.attribute.type,
  att.interpLike.attribute.inst,
  empty
att.interpLike.attribute.resp =
  
  ## indicates who is responsible for the interpretation.
  attribute resp { tei_data.pointer }?
att.interpLike.attribute.type =
  
  ## indicates what kind of phenomenon is being noted in the passage.
  ## Sample values include: 1] image (identifies an image in the passage.
  ##    ); 2] character (identifies a character associated with the passage.
  ##    ); 3] theme (identifies a theme in the passage.
  ##    ); 4] allusion (identifies an allusion to another text.
  ##    )
  attribute type { tei_data.enumerated }?
att.interpLike.attribute.inst =
  
  ## points to instances of the analysis or interpretation represented
  ## by the current element.
  attribute inst {
    list { tei_data.pointer+ }
  }?
tei_att.editLike.attributes =
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
att.editLike.attribute.cert =
  
  ## signifies the degree of certainty associated with the
  ##	intervention or interpretation.
  attribute cert { tei_data.enumerated }?
att.editLike.attribute.resp =
  
  ## indicates the agency responsible for the
  ##	intervention or interpretation, for example an editor or transcriber.
  attribute resp { tei_data.pointer }?
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or
  ##   accuracy of the intervention or interpretation.
  ## Sample values include: 1] internal (there is internal evidence to support the intervention.); 2] external (there is external evidence to support the intervention.); 3] conjecture (the intervention or interpretation has been made by
  ##	  the editor, cataloguer, or scholar on the basis of their expertise.)
  attribute evidence { tei_data.enumerated }?
tei_att.global.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  empty
att.global.attribute.xmlspace =
  
  ## signals an intention that white space should be 
  ##       preserved by applications
  attribute xml:space {
    
    ##
    "default"
    | 
      ##
      "preserve"
  }?
att.global.attribute.xmlid =
  
  ## provides a unique identifier for the element bearing the
  ##       attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## gives a number (or other label) for an element, which is
  ##       not necessarily unique within the document.
  attribute n {
    list { tei_data.word+ }
  }?
att.global.attribute.xmllang =
  
  ## indicates the language of the element content using the
  ##       codes from RFC
  ##       3066
  attribute xml:lang { tei_data.language }?
att.global.attribute.rend =
  
  ## indicates how the element in question was rendered or
  ##	presented in the source text.
  attribute rend {
    list { tei_data.word+ }
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can
  ##       resolve relative URI references into absolute URI
  ##       references.
  attribute xml:base { tei_data.pointer }?
tei_att.measured.attributes =
  att.measured.attribute.unit, att.measured.attribute.scope, empty
att.measured.attribute.unit =
  
  ## names the units used for the measurement.
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches)
  attribute unit { tei_data.enumerated }?
att.measured.attribute.scope =
  
  ## specifies the applicability of this measurement, where
  ##    more than one object is being measured.
  ## Sample values include: 1] all (measurement applies to all instances.); 2] most (measurement applies to most of the instances inspected.); 3] range (measurement applies to only the specified range of instances.)
  attribute scope { tei_data.enumerated }?
tei_att.measurement.attributes =
  att.measurement.attribute.unit,
  att.measurement.attribute.quantity,
  att.measurement.attribute.commodity,
  empty
att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually
  ##       using the standard symbol for the desired units.
  ## Suggested values include: 1] m (metre); 2] kg (kilogram); 3] s (second); 4] Hz (hertz); 5] Pa (pascal); 6] Ω (ohm); 7] L (litre); 8] t (tonne); 9] ha (hectare); 10] Å (ångström); 11] mL (millilitre); 12] cm (centimetre); 13] dB (decibel); 14] kbit (kilobit); 15] Kibit (kibibit); 16] kB (kilobyte); 17] KiB (kibibyte); 18] MB (megabyte); 19] MiB (mebibyte)
  attribute unit { tei_data.enumerated }?
att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that
  ##       comprise the measurement
  attribute quantity { tei_data.numeric }?
att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list { tei_data.word+ }
  }?
tei_att.naming.attributes = att.naming.attribute.key, empty
att.naming.attribute.key =
  
  ## provides a means of locating a full definition for the
  ##       entity being named such as a database record key or a
  ##       URI.
  attribute key { tei_data.key }?
tei_att.placement.attributes = att.placement.attribute.place, empty
att.placement.attribute.place =
  
  ## 
  ## Suggested values include: 1] infralinear (below the line); 2] margin-bot (in bottom margin); 3] margin-left (in left margin); 4] margin-right (in right margin); 5] margin-top (in top margin); 6] opposite (on opposite page); 7] overleaf (on the other side of the leaf); 8] supralinear (above the line); 9] verso (on verso of sheet); 10] app (note appears in the apparatus at the foot of the page.); 11] end (note appears at end of chapter or volume.); 12] foot (note appears at foot of page.); 13] inline (note appears as a marked paragraph in the body of the text.); 14] interlinear (note appears between lines of the text; a less precise form of either infralinear or supralinear.); 15] inline (addition is made in a space left in the witness by an earlier scribe.); 16] mixed (one or more of the other values)
  attribute place { tei_data.enumerated }?
tei_att.segLike.attributes =
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  empty
att.segLike.attribute.type =
  
  ## characterizes the type of segment.
  attribute type { tei_data.enumerated }?
att.segLike.attribute.function =
  
  ## characterizes the function of the segment.
  attribute function { tei_data.enumerated }?
att.segLike.attribute.part =
  
  ## specifies whether or not the segment is fragmented by some other
  ## structural element, for example a clause which is divided between two
  ## or more sentences.
  [ a1:defaultValue = "N" ]
  attribute part {
    
    ## (the segment is incomplete in some respect) 
    "Y"
    | 
      ## (either the segment is complete, or no claim is made as to
      ## its completeness) 
      "N"
    | 
      ## (the initial part of an incomplete segment) 
      "I"
    | 
      ## (a medial part of an incomplete segment) 
      "M"
    | 
      ## (the final part of an incomplete segment) 
      "F"
  }?
tei_att.spanning.attributes = att.spanning.attribute.spanTo, empty
att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element
  ##	bearing this attribute.
  attribute spanTo { tei_data.pointer }?
tei_att.tableDecoration.attributes =
  att.tableDecoration.attribute.role,
  att.tableDecoration.attribute.rows,
  att.tableDecoration.attribute.cols,
  empty
att.tableDecoration.attribute.role =
  
  ## indicates the kind of information held in this cell or
  ## in each cell of this row.
  ## Suggested values include: 1] label (labelling or descriptive information only.); 2] data (data values.)
  [ a1:defaultValue = "data" ] attribute role { tei_data.enumerated }?
att.tableDecoration.attribute.rows =
  
  ## indicates the number of rows occupied by this cell or row.
  [ a1:defaultValue = "1" ] attribute rows { tei_data.count }?
att.tableDecoration.attribute.cols =
  
  ## indicates the number of columns occupied by this cell or
  ##	row.
  [ a1:defaultValue = "1" ] attribute cols { tei_data.count }?
tei_att.timed.attributes =
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  empty
att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment
  ##       at which this element begins.
  attribute start { tei_data.pointer }?
att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which
  ##    this element ends.
  attribute end { tei_data.pointer }?
att.timed.attribute.dur =
  
  ## (duration) indicates the length of this element in time
  attribute dur { xsd:duration }?
tei_att.translatable.attributes =
  att.translatable.attribute.version, empty
att.translatable.attribute.version =
  
  ## specifies the version name or number of the source from
  ##	which the translated version was derived
  attribute version { tei_data.word }?
tei_att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype, empty
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient
  ##  classification scheme or typology.
  attribute type { tei_data.word }?
att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype { tei_data.word }?
tei_model.nameLike.agent = tei_name | tei_persName | tei_orgName
tei_model.nameLike.agent_sequence = tei_name, tei_persName, tei_orgName
tei_model.nameLike.agent_sequenceOptional =
  tei_name?, tei_persName?, tei_orgName?
tei_model.nameLike.agent_sequenceOptionalRepeatable =
  tei_name*, tei_persName*, tei_orgName*
tei_model.nameLike.agent_sequenceRepeatable =
  tei_name+, tei_persName+, tei_orgName+
tei_model.segLike =
  tei_s | tei_cl | tei_phr | tei_w | tei_m | tei_c | tei_seg
tei_model.segLike_sequence =
  tei_s, tei_cl, tei_phr, tei_w, tei_m, tei_c, tei_seg
tei_model.segLike_sequenceOptional =
  tei_s?, tei_cl?, tei_phr?, tei_w?, tei_m?, tei_c?, tei_seg?
tei_model.segLike_sequenceOptionalRepeatable =
  tei_s*, tei_cl*, tei_phr*, tei_w*, tei_m*, tei_c*, tei_seg*
tei_model.segLike_sequenceRepeatable =
  tei_s+, tei_cl+, tei_phr+, tei_w+, tei_m+, tei_c+, tei_seg+
tei_model.hiLike =
  tei_foreign
  | tei_emph
  | tei_hi
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.hiLike_sequence =
  tei_foreign,
  tei_emph,
  tei_hi,
  tei_distinct,
  tei_mentioned,
  tei_soCalled,
  tei_gloss,
  tei_term,
  tei_title
tei_model.hiLike_sequenceOptional =
  tei_foreign?,
  tei_emph?,
  tei_hi?,
  tei_distinct?,
  tei_mentioned?,
  tei_soCalled?,
  tei_gloss?,
  tei_term?,
  tei_title?
tei_model.hiLike_sequenceOptionalRepeatable =
  tei_foreign*,
  tei_emph*,
  tei_hi*,
  tei_distinct*,
  tei_mentioned*,
  tei_soCalled*,
  tei_gloss*,
  tei_term*,
  tei_title*
tei_model.hiLike_sequenceRepeatable =
  tei_foreign+,
  tei_emph+,
  tei_hi+,
  tei_distinct+,
  tei_mentioned+,
  tei_soCalled+,
  tei_gloss+,
  tei_term+,
  tei_title+
tei_model.dateLike = tei_date | tei_time
tei_model.dateLike_sequence = tei_date, tei_time
tei_model.dateLike_sequenceOptional = tei_date?, tei_time?
tei_model.dateLike_sequenceOptionalRepeatable = tei_date*, tei_time*
tei_model.dateLike_sequenceRepeatable = tei_date+, tei_time+
tei_model.measureLike = tei_num | tei_measure
tei_model.measureLike_sequence = tei_num, tei_measure
tei_model.measureLike_sequenceOptional = tei_num?, tei_measure?
tei_model.measureLike_sequenceOptionalRepeatable =
  tei_num*, tei_measure*
tei_model.measureLike_sequenceRepeatable = tei_num+, tei_measure+
tei_model.graphicLike = tei_graphic | tei_binaryObject | tei_formula
tei_model.graphicLike_sequence =
  tei_graphic, tei_binaryObject, tei_formula
tei_model.graphicLike_sequenceOptional =
  tei_graphic?, tei_binaryObject?, tei_formula?
tei_model.graphicLike_sequenceOptionalRepeatable =
  tei_graphic*, tei_binaryObject*, tei_formula*
tei_model.graphicLike_sequenceRepeatable =
  tei_graphic+, tei_binaryObject+, tei_formula+
tei_model.pPart.msdesc =
  tei_catchwords
  | tei_dimensions
  | tei_heraldry
  | tei_locus
  | tei_material
  | tei_origDate
  | tei_origPlace
  | tei_secFol
  | tei_signatures
  | tei_stamp
  | tei_watermark
  | tei_handShift
tei_model.pPart.msdesc_sequence =
  tei_catchwords,
  tei_dimensions,
  tei_heraldry,
  tei_locus,
  tei_material,
  tei_origDate,
  tei_origPlace,
  tei_secFol,
  tei_signatures,
  tei_stamp,
  tei_watermark,
  tei_handShift
tei_model.pPart.msdesc_sequenceOptional =
  tei_catchwords?,
  tei_dimensions?,
  tei_heraldry?,
  tei_locus?,
  tei_material?,
  tei_origDate?,
  tei_origPlace?,
  tei_secFol?,
  tei_signatures?,
  tei_stamp?,
  tei_watermark?,
  tei_handShift?
tei_model.pPart.msdesc_sequenceOptionalRepeatable =
  tei_catchwords*,
  tei_dimensions*,
  tei_heraldry*,
  tei_locus*,
  tei_material*,
  tei_origDate*,
  tei_origPlace*,
  tei_secFol*,
  tei_signatures*,
  tei_stamp*,
  tei_watermark*,
  tei_handShift*
tei_model.pPart.msdesc_sequenceRepeatable =
  tei_catchwords+,
  tei_dimensions+,
  tei_heraldry+,
  tei_locus+,
  tei_material+,
  tei_origDate+,
  tei_origPlace+,
  tei_secFol+,
  tei_signatures+,
  tei_stamp+,
  tei_watermark+,
  tei_handShift+
tei_model.pPart.edit =
  tei_sic
  | tei_corr
  | tei_choice
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_app
  | tei_restore
  | tei_supplied
  | tei_damage
  | tei_space
tei_model.pPart.edit_sequence =
  tei_sic,
  tei_corr,
  tei_choice,
  tei_reg,
  tei_orig,
  tei_add,
  tei_del,
  tei_unclear,
  tei_abbr,
  tei_expan,
  tei_app,
  tei_restore,
  tei_supplied,
  tei_damage,
  tei_space
tei_model.pPart.edit_sequenceOptional =
  tei_sic?,
  tei_corr?,
  tei_choice?,
  tei_reg?,
  tei_orig?,
  tei_add?,
  tei_del?,
  tei_unclear?,
  tei_abbr?,
  tei_expan?,
  tei_app?,
  tei_restore?,
  tei_supplied?,
  tei_damage?,
  tei_space?
tei_model.pPart.edit_sequenceOptionalRepeatable =
  tei_sic*,
  tei_corr*,
  tei_choice*,
  tei_reg*,
  tei_orig*,
  tei_add*,
  tei_del*,
  tei_unclear*,
  tei_abbr*,
  tei_expan*,
  tei_app*,
  tei_restore*,
  tei_supplied*,
  tei_damage*,
  tei_space*
tei_model.pPart.edit_sequenceRepeatable =
  tei_sic+,
  tei_corr+,
  tei_choice+,
  tei_reg+,
  tei_orig+,
  tei_add+,
  tei_del+,
  tei_unclear+,
  tei_abbr+,
  tei_expan+,
  tei_app+,
  tei_restore+,
  tei_supplied+,
  tei_damage+,
  tei_space+
tei_model.ptrLike = tei_ptr | tei_ref
tei_model.ptrLike_sequence = tei_ptr, tei_ref
tei_model.ptrLike_sequenceOptional = tei_ptr?, tei_ref?
tei_model.ptrLike_sequenceOptionalRepeatable = tei_ptr*, tei_ref*
tei_model.ptrLike_sequenceRepeatable = tei_ptr+, tei_ref+
tei_model.lPart = tei_caesura | tei_rhyme
tei_model.lPart_sequence = tei_caesura, tei_rhyme
tei_model.lPart_sequenceOptional = tei_caesura?, tei_rhyme?
tei_model.lPart_sequenceOptionalRepeatable = tei_caesura*, tei_rhyme*
tei_model.lPart_sequenceRepeatable = tei_caesura+, tei_rhyme+
tei_model.global.meta =
  tei_index
  | tei_span
  | tei_spanGrp
  | tei_interp
  | tei_interpGrp
  | tei_certainty
  | tei_respons
  | tei_fs
  | tei_fLib
  | tei_fvLib
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
tei_model.global.meta_sequence =
  tei_index,
  tei_span,
  tei_spanGrp,
  tei_interp,
  tei_interpGrp,
  tei_certainty,
  tei_respons,
  tei_fs,
  tei_fLib,
  tei_fvLib,
  tei_link,
  tei_linkGrp,
  tei_timeline,
  tei_join,
  tei_joinGrp,
  tei_alt,
  tei_altGrp
tei_model.global.meta_sequenceOptional =
  tei_index?,
  tei_span?,
  tei_spanGrp?,
  tei_interp?,
  tei_interpGrp?,
  tei_certainty?,
  tei_respons?,
  tei_fs?,
  tei_fLib?,
  tei_fvLib?,
  tei_link?,
  tei_linkGrp?,
  tei_timeline?,
  tei_join?,
  tei_joinGrp?,
  tei_alt?,
  tei_altGrp?
tei_model.global.meta_sequenceOptionalRepeatable =
  tei_index*,
  tei_span*,
  tei_spanGrp*,
  tei_interp*,
  tei_interpGrp*,
  tei_certainty*,
  tei_respons*,
  tei_fs*,
  tei_fLib*,
  tei_fvLib*,
  tei_link*,
  tei_linkGrp*,
  tei_timeline*,
  tei_join*,
  tei_joinGrp*,
  tei_alt*,
  tei_altGrp*
tei_model.global.meta_sequenceRepeatable =
  tei_index+,
  tei_span+,
  tei_spanGrp+,
  tei_interp+,
  tei_interpGrp+,
  tei_certainty+,
  tei_respons+,
  tei_fs+,
  tei_fLib+,
  tei_fvLib+,
  tei_link+,
  tei_linkGrp+,
  tei_timeline+,
  tei_join+,
  tei_joinGrp+,
  tei_alt+,
  tei_altGrp+
tei_model.milestoneLike =
  tei_milestone | tei_pb | tei_lb | tei_cb | tei_fw
tei_model.milestoneLike_sequence =
  tei_milestone, tei_pb, tei_lb, tei_cb, tei_fw
tei_model.milestoneLike_sequenceOptional =
  tei_milestone?, tei_pb?, tei_lb?, tei_cb?, tei_fw?
tei_model.milestoneLike_sequenceOptionalRepeatable =
  tei_milestone*, tei_pb*, tei_lb*, tei_cb*, tei_fw*
tei_model.milestoneLike_sequenceRepeatable =
  tei_milestone+, tei_pb+, tei_lb+, tei_cb+, tei_fw+
tei_model.gLike = tei_g
tei_model.gLike_sequence = tei_g
tei_model.gLike_sequenceOptional = tei_g?
tei_model.gLike_sequenceOptionalRepeatable = tei_g*
tei_model.gLike_sequenceRepeatable = tei_g+
tei_model.oddDecl = notAllowed
tei_model.oddDecl_sequence = empty
tei_model.oddDecl_sequenceOptional = empty
tei_model.oddDecl_sequenceOptionalRepeatable = empty
tei_model.oddDecl_sequenceRepeatable = notAllowed
tei_model.oddRef = notAllowed
tei_model.oddRef_sequence = empty
tei_model.oddRef_sequenceOptional = empty
tei_model.oddRef_sequenceOptionalRepeatable = empty
tei_model.oddRef_sequenceRepeatable = notAllowed
tei_model.oddPhr = notAllowed
tei_model.oddPhr_sequence = empty
tei_model.oddPhr_sequenceOptional = empty
tei_model.oddPhr_sequenceOptionalRepeatable = empty
tei_model.oddPhr_sequenceRepeatable = notAllowed
tei_model.qLike = tei_q | tei_quote | tei_cit
tei_model.qLike_sequence = tei_q, tei_quote, tei_cit
tei_model.qLike_sequenceOptional = tei_q?, tei_quote?, tei_cit?
tei_model.qLike_sequenceOptionalRepeatable =
  tei_q*, tei_quote*, tei_cit*
tei_model.qLike_sequenceRepeatable = tei_q+, tei_quote+, tei_cit+
tei_model.biblLike =
  tei_bibl
  | tei_biblItem
  | tei_biblStruct
  | tei_biblFull
  | tei_msDescription
  | tei_listPerson
tei_model.biblLike_sequence =
  tei_bibl,
  tei_biblItem,
  tei_biblStruct,
  tei_biblFull,
  tei_msDescription,
  tei_listPerson
tei_model.biblLike_sequenceOptional =
  tei_bibl?,
  tei_biblItem?,
  tei_biblStruct?,
  tei_biblFull?,
  tei_msDescription?,
  tei_listPerson?
tei_model.biblLike_sequenceOptionalRepeatable =
  tei_bibl*,
  tei_biblItem*,
  tei_biblStruct*,
  tei_biblFull*,
  tei_msDescription*,
  tei_listPerson*
tei_model.biblLike_sequenceRepeatable =
  tei_bibl+,
  tei_biblItem+,
  tei_biblStruct+,
  tei_biblFull+,
  tei_msDescription+,
  tei_listPerson+
tei_model.listLike = tei_list | tei_listBibl
tei_model.listLike_sequence = tei_list, tei_listBibl
tei_model.listLike_sequenceOptional = tei_list?, tei_listBibl?
tei_model.listLike_sequenceOptionalRepeatable = tei_list*, tei_listBibl*
tei_model.listLike_sequenceRepeatable = tei_list+, tei_listBibl+
tei_model.noteLike = tei_note | tei_witDetail
tei_model.noteLike_sequence = tei_note, tei_witDetail
tei_model.noteLike_sequenceOptional = tei_note?, tei_witDetail?
tei_model.noteLike_sequenceOptionalRepeatable =
  tei_note*, tei_witDetail*
tei_model.noteLike_sequenceRepeatable = tei_note+, tei_witDetail+
tei_model.stageLike =
  tei_stage
  | tei_move
  | tei_view
  | tei_camera
  | tei_sound
  | tei_caption
  | tei_tech
tei_model.stageLike_sequence =
  tei_stage,
  tei_move,
  tei_view,
  tei_camera,
  tei_sound,
  tei_caption,
  tei_tech
tei_model.stageLike_sequenceOptional =
  tei_stage?,
  tei_move?,
  tei_view?,
  tei_camera?,
  tei_sound?,
  tei_caption?,
  tei_tech?
tei_model.stageLike_sequenceOptionalRepeatable =
  tei_stage*,
  tei_move*,
  tei_view*,
  tei_camera*,
  tei_sound*,
  tei_caption*,
  tei_tech*
tei_model.stageLike_sequenceRepeatable =
  tei_stage+,
  tei_move+,
  tei_view+,
  tei_camera+,
  tei_sound+,
  tei_caption+,
  tei_tech+
tei_model.complexVal = tei_fs | tei_vColl | tei_vNot | tei_vMerge
tei_model.complexVal_sequence = tei_fs, tei_vColl, tei_vNot, tei_vMerge
tei_model.complexVal_sequenceOptional =
  tei_fs?, tei_vColl?, tei_vNot?, tei_vMerge?
tei_model.complexVal_sequenceOptionalRepeatable =
  tei_fs*, tei_vColl*, tei_vNot*, tei_vMerge*
tei_model.complexVal_sequenceRepeatable =
  tei_fs+, tei_vColl+, tei_vNot+, tei_vMerge+
tei_model.singleVal =
  tei_binary
  | tei_symbol
  | tei_numeric
  | tei_string
  | tei_vLabel
  | tei_default
  | tei_vAlt
tei_model.singleVal_sequence =
  tei_binary,
  tei_symbol,
  tei_numeric,
  tei_string,
  tei_vLabel,
  tei_default,
  tei_vAlt
tei_model.singleVal_sequenceOptional =
  tei_binary?,
  tei_symbol?,
  tei_numeric?,
  tei_string?,
  tei_vLabel?,
  tei_default?,
  tei_vAlt?
tei_model.singleVal_sequenceOptionalRepeatable =
  tei_binary*,
  tei_symbol*,
  tei_numeric*,
  tei_string*,
  tei_vLabel*,
  tei_default*,
  tei_vAlt*
tei_model.singleVal_sequenceRepeatable =
  tei_binary+,
  tei_symbol+,
  tei_numeric+,
  tei_string+,
  tei_vLabel+,
  tei_default+,
  tei_vAlt+
tei_model.entryParts.top =
  tei_dictScrap
  | tei_form
  | tei_gramGrp
  | tei_def
  | tei_trans
  | tei_etym
  | tei_dicteg
  | tei_usg
  | tei_xr
  | tei_re
tei_model.entryParts.top_sequence =
  tei_dictScrap,
  tei_form,
  tei_gramGrp,
  tei_def,
  tei_trans,
  tei_etym,
  tei_dicteg,
  tei_usg,
  tei_xr,
  tei_re
tei_model.entryParts.top_sequenceOptional =
  tei_dictScrap?,
  tei_form?,
  tei_gramGrp?,
  tei_def?,
  tei_trans?,
  tei_etym?,
  tei_dicteg?,
  tei_usg?,
  tei_xr?,
  tei_re?
tei_model.entryParts.top_sequenceOptionalRepeatable =
  tei_dictScrap*,
  tei_form*,
  tei_gramGrp*,
  tei_def*,
  tei_trans*,
  tei_etym*,
  tei_dicteg*,
  tei_usg*,
  tei_xr*,
  tei_re*
tei_model.entryParts.top_sequenceRepeatable =
  tei_dictScrap+,
  tei_form+,
  tei_gramGrp+,
  tei_def+,
  tei_trans+,
  tei_etym+,
  tei_dicteg+,
  tei_usg+,
  tei_xr+,
  tei_re+
tei_model.global.edit = tei_gap | tei_addSpan | tei_delSpan
tei_model.global.edit_sequence = tei_gap, tei_addSpan, tei_delSpan
tei_model.global.edit_sequenceOptional =
  tei_gap?, tei_addSpan?, tei_delSpan?
tei_model.global.edit_sequenceOptionalRepeatable =
  tei_gap*, tei_addSpan*, tei_delSpan*
tei_model.global.edit_sequenceRepeatable =
  tei_gap+, tei_addSpan+, tei_delSpan+
tei_model.divPart =
  tei_p
  | tei_l
  | tei_lg
  | tei_sp
  | tei_ab
  | tei_graph
  | tei_tree
  | tei_eTree
  | tei_witList
tei_model.divPart_sequence =
  tei_p,
  tei_l,
  tei_lg,
  tei_sp,
  tei_ab,
  tei_graph,
  tei_tree,
  tei_eTree,
  tei_witList
tei_model.divPart_sequenceOptional =
  tei_p?,
  tei_l?,
  tei_lg?,
  tei_sp?,
  tei_ab?,
  tei_graph?,
  tei_tree?,
  tei_eTree?,
  tei_witList?
tei_model.divPart_sequenceOptionalRepeatable =
  tei_p*,
  tei_l*,
  tei_lg*,
  tei_sp*,
  tei_ab*,
  tei_graph*,
  tei_tree*,
  tei_eTree*,
  tei_witList*
tei_model.divPart_sequenceRepeatable =
  tei_p+,
  tei_l+,
  tei_lg+,
  tei_sp+,
  tei_ab+,
  tei_graph+,
  tei_tree+,
  tei_eTree+,
  tei_witList+
tei_model.blockLike = tei_seg
tei_model.blockLike_sequence = tei_seg
tei_model.blockLike_sequenceOptional = tei_seg?
tei_model.blockLike_sequenceOptionalRepeatable = tei_seg*
tei_model.blockLike_sequenceRepeatable = tei_seg+
tei_model.pLike = tei_p | tei_ab
tei_model.pLike_sequence = tei_p, tei_ab
tei_model.pLike_sequenceOptional = tei_p?, tei_ab?
tei_model.pLike_sequenceOptionalRepeatable = tei_p*, tei_ab*
tei_model.pLike_sequenceRepeatable = tei_p+, tei_ab+
tei_model.persTraitLike =
  tei_age
  | tei_faith
  | tei_langKnowledge
  | tei_nationality
  | tei_persTrait
  | tei_sex
  | tei_socecStatus
tei_model.persTraitLike_sequence =
  tei_age,
  tei_faith,
  tei_langKnowledge,
  tei_nationality,
  tei_persTrait,
  tei_sex,
  tei_socecStatus
tei_model.persTraitLike_sequenceOptional =
  tei_age?,
  tei_faith?,
  tei_langKnowledge?,
  tei_nationality?,
  tei_persTrait?,
  tei_sex?,
  tei_socecStatus?
tei_model.persTraitLike_sequenceOptionalRepeatable =
  tei_age*,
  tei_faith*,
  tei_langKnowledge*,
  tei_nationality*,
  tei_persTrait*,
  tei_sex*,
  tei_socecStatus*
tei_model.persTraitLike_sequenceRepeatable =
  tei_age+,
  tei_faith+,
  tei_langKnowledge+,
  tei_nationality+,
  tei_persTrait+,
  tei_sex+,
  tei_socecStatus+
tei_model.persStateLike =
  tei_persName
  | tei_affiliation
  | tei_education
  | tei_floruit
  | tei_occupation
  | tei_persState
  | tei_residence
tei_model.persStateLike_sequence =
  tei_persName,
  tei_affiliation,
  tei_education,
  tei_floruit,
  tei_occupation,
  tei_persState,
  tei_residence
tei_model.persStateLike_sequenceOptional =
  tei_persName?,
  tei_affiliation?,
  tei_education?,
  tei_floruit?,
  tei_occupation?,
  tei_persState?,
  tei_residence?
tei_model.persStateLike_sequenceOptionalRepeatable =
  tei_persName*,
  tei_affiliation*,
  tei_education*,
  tei_floruit*,
  tei_occupation*,
  tei_persState*,
  tei_residence*
tei_model.persStateLike_sequenceRepeatable =
  tei_persName+,
  tei_affiliation+,
  tei_education+,
  tei_floruit+,
  tei_occupation+,
  tei_persState+,
  tei_residence+
tei_model.persEventLike = tei_birth | tei_death | tei_persEvent
tei_model.persEventLike_sequence = tei_birth, tei_death, tei_persEvent
tei_model.persEventLike_sequenceOptional =
  tei_birth?, tei_death?, tei_persEvent?
tei_model.persEventLike_sequenceOptionalRepeatable =
  tei_birth*, tei_death*, tei_persEvent*
tei_model.persEventLike_sequenceRepeatable =
  tei_birth+, tei_death+, tei_persEvent+
tei_model.assertLike =
  tei_model.persTraitLike
  | tei_model.persStateLike
  | tei_model.persEventLike
tei_model.assertLike_sequence =
  tei_model.persTraitLike,
  tei_model.persStateLike,
  tei_model.persEventLike
tei_model.assertLike_sequenceOptional =
  tei_model.persTraitLike?,
  tei_model.persStateLike?,
  tei_model.persEventLike?
tei_model.assertLike_sequenceOptionalRepeatable =
  tei_model.persTraitLike*,
  tei_model.persStateLike*,
  tei_model.persEventLike*
tei_model.assertLike_sequenceRepeatable =
  tei_model.persTraitLike+,
  tei_model.persStateLike+,
  tei_model.persEventLike+
tei_model.personLike =
  tei_listPerson | tei_person | tei_personGrp | tei_relation
tei_model.personLike_sequence =
  tei_listPerson, tei_person, tei_personGrp, tei_relation
tei_model.personLike_sequenceOptional =
  tei_listPerson?, tei_person?, tei_personGrp?, tei_relation?
tei_model.personLike_sequenceOptionalRepeatable =
  tei_listPerson*, tei_person*, tei_personGrp*, tei_relation*
tei_model.personLike_sequenceRepeatable =
  tei_listPerson+, tei_person+, tei_personGrp+, tei_relation+
tei_model.personPart = tei_model.assertLike | tei_bibl
tei_model.personPart_sequence = tei_model.assertLike, tei_bibl
tei_model.personPart_sequenceOptional = tei_model.assertLike?, tei_bibl?
tei_model.personPart_sequenceOptionalRepeatable =
  tei_model.assertLike*, tei_bibl*
tei_model.personPart_sequenceRepeatable =
  tei_model.assertLike+, tei_bibl+
tei_model.publicationStmtPart =
  tei_address
  | tei_date
  | tei_publisher
  | tei_pubPlace
  | tei_distributor
  | tei_authority
  | tei_idno
  | tei_availability
tei_model.publicationStmtPart_sequence =
  tei_address,
  tei_date,
  tei_publisher,
  tei_pubPlace,
  tei_distributor,
  tei_authority,
  tei_idno,
  tei_availability
tei_model.publicationStmtPart_sequenceOptional =
  tei_address?,
  tei_date?,
  tei_publisher?,
  tei_pubPlace?,
  tei_distributor?,
  tei_authority?,
  tei_idno?,
  tei_availability?
tei_model.publicationStmtPart_sequenceOptionalRepeatable =
  tei_address*,
  tei_date*,
  tei_publisher*,
  tei_pubPlace*,
  tei_distributor*,
  tei_authority*,
  tei_idno*,
  tei_availability*
tei_model.publicationStmtPart_sequenceRepeatable =
  tei_address+,
  tei_date+,
  tei_publisher+,
  tei_pubPlace+,
  tei_distributor+,
  tei_authority+,
  tei_idno+,
  tei_availability+
tei_model.glossLike = tei_altIdent | tei_desc | tei_equiv | tei_gloss
tei_model.glossLike_sequence =
  tei_altIdent, tei_desc, tei_equiv, tei_gloss
tei_model.glossLike_sequenceOptional =
  tei_altIdent?, tei_desc?, tei_equiv?, tei_gloss?
tei_model.glossLike_sequenceOptionalRepeatable =
  tei_altIdent*, tei_desc*, tei_equiv*, tei_gloss*
tei_model.glossLike_sequenceRepeatable =
  tei_altIdent+, tei_desc+, tei_equiv+, tei_gloss+
tei_model.quoteLike = tei_quote
tei_model.quoteLike_sequence = tei_quote
tei_model.quoteLike_sequenceOptional = tei_quote?
tei_model.quoteLike_sequenceOptionalRepeatable = tei_quote*
tei_model.quoteLike_sequenceRepeatable = tei_quote+
tei_model.respLike = tei_author | tei_editor | tei_respStmt
tei_model.respLike_sequence = tei_author, tei_editor, tei_respStmt
tei_model.respLike_sequenceOptional =
  tei_author?, tei_editor?, tei_respStmt?
tei_model.respLike_sequenceOptionalRepeatable =
  tei_author*, tei_editor*, tei_respStmt*
tei_model.respLike_sequenceRepeatable =
  tei_author+, tei_editor+, tei_respStmt+
tei_model.divWrapper.bottom = tei_trailer | tei_closer | tei_signed
tei_model.divWrapper.bottom_sequence =
  tei_trailer, tei_closer, tei_signed
tei_model.divWrapper.bottom_sequenceOptional =
  tei_trailer?, tei_closer?, tei_signed?
tei_model.divWrapper.bottom_sequenceOptionalRepeatable =
  tei_trailer*, tei_closer*, tei_signed*
tei_model.divWrapper.bottom_sequenceRepeatable =
  tei_trailer+, tei_closer+, tei_signed+
tei_model.divWrapper =
  tei_head
  | tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_opener
  | tei_salute
  | tei_docAuthor
  | tei_docDate
tei_model.divWrapper_sequence =
  tei_head,
  tei_byline,
  tei_dateline,
  tei_argument,
  tei_epigraph,
  tei_opener,
  tei_salute,
  tei_docAuthor,
  tei_docDate
tei_model.divWrapper_sequenceOptional =
  tei_head?,
  tei_byline?,
  tei_dateline?,
  tei_argument?,
  tei_epigraph?,
  tei_opener?,
  tei_salute?,
  tei_docAuthor?,
  tei_docDate?
tei_model.divWrapper_sequenceOptionalRepeatable =
  tei_head*,
  tei_byline*,
  tei_dateline*,
  tei_argument*,
  tei_epigraph*,
  tei_opener*,
  tei_salute*,
  tei_docAuthor*,
  tei_docDate*
tei_model.divWrapper_sequenceRepeatable =
  tei_head+,
  tei_byline+,
  tei_dateline+,
  tei_argument+,
  tei_epigraph+,
  tei_opener+,
  tei_salute+,
  tei_docAuthor+,
  tei_docDate+
tei_model.frontPart.drama =
  tei_set | tei_prologue | tei_epilogue | tei_performance | tei_castList
tei_model.frontPart.drama_sequence =
  tei_set, tei_prologue, tei_epilogue, tei_performance, tei_castList
tei_model.frontPart.drama_sequenceOptional =
  tei_set?,
  tei_prologue?,
  tei_epilogue?,
  tei_performance?,
  tei_castList?
tei_model.frontPart.drama_sequenceOptionalRepeatable =
  tei_set*,
  tei_prologue*,
  tei_epilogue*,
  tei_performance*,
  tei_castList*
tei_model.frontPart.drama_sequenceRepeatable =
  tei_set+,
  tei_prologue+,
  tei_epilogue+,
  tei_performance+,
  tei_castList+
tei_model.pLike.front =
  tei_head
  | tei_byline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.pLike.front_sequence =
  tei_head,
  tei_byline,
  tei_argument,
  tei_epigraph,
  tei_docTitle,
  tei_titlePart,
  tei_docAuthor,
  tei_docEdition,
  tei_docImprint,
  tei_docDate
tei_model.pLike.front_sequenceOptional =
  tei_head?,
  tei_byline?,
  tei_argument?,
  tei_epigraph?,
  tei_docTitle?,
  tei_titlePart?,
  tei_docAuthor?,
  tei_docEdition?,
  tei_docImprint?,
  tei_docDate?
tei_model.pLike.front_sequenceOptionalRepeatable =
  tei_head*,
  tei_byline*,
  tei_argument*,
  tei_epigraph*,
  tei_docTitle*,
  tei_titlePart*,
  tei_docAuthor*,
  tei_docEdition*,
  tei_docImprint*,
  tei_docDate*
tei_model.pLike.front_sequenceRepeatable =
  tei_head+,
  tei_byline+,
  tei_argument+,
  tei_epigraph+,
  tei_docTitle+,
  tei_titlePart+,
  tei_docAuthor+,
  tei_docEdition+,
  tei_docImprint+,
  tei_docDate+
tei_model.titlepagePart =
  tei_graphic
  | tei_binaryObject
  | tei_figure
  | tei_byline
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_imprimatur
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.titlepagePart_sequence =
  tei_graphic,
  tei_binaryObject,
  tei_figure,
  tei_byline,
  tei_epigraph,
  tei_docTitle,
  tei_titlePart,
  tei_docAuthor,
  tei_imprimatur,
  tei_docEdition,
  tei_docImprint,
  tei_docDate
tei_model.titlepagePart_sequenceOptional =
  tei_graphic?,
  tei_binaryObject?,
  tei_figure?,
  tei_byline?,
  tei_epigraph?,
  tei_docTitle?,
  tei_titlePart?,
  tei_docAuthor?,
  tei_imprimatur?,
  tei_docEdition?,
  tei_docImprint?,
  tei_docDate?
tei_model.titlepagePart_sequenceOptionalRepeatable =
  tei_graphic*,
  tei_binaryObject*,
  tei_figure*,
  tei_byline*,
  tei_epigraph*,
  tei_docTitle*,
  tei_titlePart*,
  tei_docAuthor*,
  tei_imprimatur*,
  tei_docEdition*,
  tei_docImprint*,
  tei_docDate*
tei_model.titlepagePart_sequenceRepeatable =
  tei_graphic+,
  tei_binaryObject+,
  tei_figure+,
  tei_byline+,
  tei_epigraph+,
  tei_docTitle+,
  tei_titlePart+,
  tei_docAuthor+,
  tei_imprimatur+,
  tei_docEdition+,
  tei_docImprint+,
  tei_docDate+
tei_model.msItemPart =
  tei_model.quoteLike
  | tei_model.respLike
  | tei_bibl
  | tei_listBibl
  | tei_title
  | tei_colophon
  | tei_explicit
  | tei_filiation
  | tei_finalRubric
  | tei_incipit
  | tei_msItem
  | tei_msItemStruct
  | tei_rubric
  | tei_textLang
  | tei_decoNote
tei_model.msItemPart_sequence =
  tei_model.quoteLike,
  tei_model.respLike,
  tei_bibl,
  tei_listBibl,
  tei_title,
  tei_colophon,
  tei_explicit,
  tei_filiation,
  tei_finalRubric,
  tei_incipit,
  tei_msItem,
  tei_msItemStruct,
  tei_rubric,
  tei_textLang,
  tei_decoNote
tei_model.msItemPart_sequenceOptional =
  tei_model.quoteLike?,
  tei_model.respLike?,
  tei_bibl?,
  tei_listBibl?,
  tei_title?,
  tei_colophon?,
  tei_explicit?,
  tei_filiation?,
  tei_finalRubric?,
  tei_incipit?,
  tei_msItem?,
  tei_msItemStruct?,
  tei_rubric?,
  tei_textLang?,
  tei_decoNote?
tei_model.msItemPart_sequenceOptionalRepeatable =
  tei_model.quoteLike*,
  tei_model.respLike*,
  tei_bibl*,
  tei_listBibl*,
  tei_title*,
  tei_colophon*,
  tei_explicit*,
  tei_filiation*,
  tei_finalRubric*,
  tei_incipit*,
  tei_msItem*,
  tei_msItemStruct*,
  tei_rubric*,
  tei_textLang*,
  tei_decoNote*
tei_model.msItemPart_sequenceRepeatable =
  tei_model.quoteLike+,
  tei_model.respLike+,
  tei_bibl+,
  tei_listBibl+,
  tei_title+,
  tei_colophon+,
  tei_explicit+,
  tei_filiation+,
  tei_finalRubric+,
  tei_incipit+,
  tei_msItem+,
  tei_msItemStruct+,
  tei_rubric+,
  tei_textLang+,
  tei_decoNote+
tei_model.choicePart =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_seg
tei_model.choicePart_sequence =
  tei_sic,
  tei_corr,
  tei_reg,
  tei_orig,
  tei_unclear,
  tei_abbr,
  tei_expan,
  tei_seg
tei_model.choicePart_sequenceOptional =
  tei_sic?,
  tei_corr?,
  tei_reg?,
  tei_orig?,
  tei_unclear?,
  tei_abbr?,
  tei_expan?,
  tei_seg?
tei_model.choicePart_sequenceOptionalRepeatable =
  tei_sic*,
  tei_corr*,
  tei_reg*,
  tei_orig*,
  tei_unclear*,
  tei_abbr*,
  tei_expan*,
  tei_seg*
tei_model.choicePart_sequenceRepeatable =
  tei_sic+,
  tei_corr+,
  tei_reg+,
  tei_orig+,
  tei_unclear+,
  tei_abbr+,
  tei_expan+,
  tei_seg+
tei_model.lLike = tei_l
tei_model.lLike_sequence = tei_l
tei_model.lLike_sequenceOptional = tei_l?
tei_model.lLike_sequenceOptionalRepeatable = tei_l*
tei_model.lLike_sequenceRepeatable = tei_l+
tei_model.recordingPart =
  tei_model.dateLike | tei_respStmt | tei_equipment | tei_broadcast
tei_model.recordingPart_sequence =
  tei_model.dateLike, tei_respStmt, tei_equipment, tei_broadcast
tei_model.recordingPart_sequenceOptional =
  tei_model.dateLike?, tei_respStmt?, tei_equipment?, tei_broadcast?
tei_model.recordingPart_sequenceOptionalRepeatable =
  tei_model.dateLike*, tei_respStmt*, tei_equipment*, tei_broadcast*
tei_model.recordingPart_sequenceRepeatable =
  tei_model.dateLike+, tei_respStmt+, tei_equipment+, tei_broadcast+
tei_model.imprintPart = tei_publisher | tei_biblScope | tei_pubPlace
tei_model.imprintPart_sequence =
  tei_publisher, tei_biblScope, tei_pubPlace
tei_model.imprintPart_sequenceOptional =
  tei_publisher?, tei_biblScope?, tei_pubPlace?
tei_model.imprintPart_sequenceOptionalRepeatable =
  tei_publisher*, tei_biblScope*, tei_pubPlace*
tei_model.imprintPart_sequenceRepeatable =
  tei_publisher+, tei_biblScope+, tei_pubPlace+
tei_model.catDescPart = tei_textDesc
tei_model.catDescPart_sequence = tei_textDesc
tei_model.catDescPart_sequenceOptional = tei_textDesc?
tei_model.catDescPart_sequenceOptionalRepeatable = tei_textDesc*
tei_model.catDescPart_sequenceRepeatable = tei_textDesc+
tei_model.settingPart = tei_locale | tei_activity
tei_model.settingPart_sequence = tei_locale, tei_activity
tei_model.settingPart_sequenceOptional = tei_locale?, tei_activity?
tei_model.settingPart_sequenceOptionalRepeatable =
  tei_locale*, tei_activity*
tei_model.settingPart_sequenceRepeatable = tei_locale+, tei_activity+
tei_model.textDescPart_sequence =
  tei_channel,
  tei_constitution,
  tei_derivation,
  tei_domain,
  tei_factuality,
  tei_interaction,
  tei_preparedness
tei_model.castItemPart = tei_role | tei_roleDesc | tei_actor
tei_model.castItemPart_sequence = tei_role, tei_roleDesc, tei_actor
tei_model.castItemPart_sequenceOptional =
  tei_role?, tei_roleDesc?, tei_actor?
tei_model.castItemPart_sequenceOptionalRepeatable =
  tei_role*, tei_roleDesc*, tei_actor*
tei_model.castItemPart_sequenceRepeatable =
  tei_role+, tei_roleDesc+, tei_actor+
tei_model.physDescPart_sequenceOptional =
  tei_objectDesc?,
  tei_handDesc?,
  tei_musicNotation?,
  tei_decoDesc?,
  tei_additions?,
  tei_bindingDesc?,
  tei_sealDesc?,
  tei_accMat?
tei_model.addressLike = tei_email | tei_address
tei_model.addressLike_sequence = tei_email, tei_address
tei_model.addressLike_sequenceOptional = tei_email?, tei_address?
tei_model.addressLike_sequenceOptionalRepeatable =
  tei_email*, tei_address*
tei_model.addressLike_sequenceRepeatable = tei_email+, tei_address+
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_rs
  | tei_lang
  | tei_placeName
  | tei_geogName
tei_model.nameLike_sequence =
  tei_model.nameLike.agent,
  tei_rs,
  tei_lang,
  tei_placeName,
  tei_geogName
tei_model.nameLike_sequenceOptional =
  tei_model.nameLike.agent?,
  tei_rs?,
  tei_lang?,
  tei_placeName?,
  tei_geogName?
tei_model.nameLike_sequenceOptionalRepeatable =
  tei_model.nameLike.agent*,
  tei_rs*,
  tei_lang*,
  tei_placeName*,
  tei_geogName*
tei_model.nameLike_sequenceRepeatable =
  tei_model.nameLike.agent+,
  tei_rs+,
  tei_lang+,
  tei_placeName+,
  tei_geogName+
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
  | tei_anchor
tei_model.global_sequence =
  tei_model.global.meta,
  tei_model.milestoneLike,
  tei_model.noteLike,
  tei_model.global.edit,
  tei_anchor
tei_model.global_sequenceOptional =
  tei_model.global.meta?,
  tei_model.milestoneLike?,
  tei_model.noteLike?,
  tei_model.global.edit?,
  tei_anchor?
tei_model.global_sequenceOptionalRepeatable =
  tei_model.global.meta*,
  tei_model.milestoneLike*,
  tei_model.noteLike*,
  tei_model.global.edit*,
  tei_anchor*
tei_model.global_sequenceRepeatable =
  tei_model.global.meta+,
  tei_model.milestoneLike+,
  tei_model.noteLike+,
  tei_model.global.edit+,
  tei_anchor+
tei_model.featureVal = tei_model.complexVal | tei_model.singleVal
tei_model.featureVal_sequence =
  tei_model.complexVal, tei_model.singleVal
tei_model.featureVal_sequenceOptional =
  tei_model.complexVal?, tei_model.singleVal?
tei_model.featureVal_sequenceOptionalRepeatable =
  tei_model.complexVal*, tei_model.singleVal*
tei_model.featureVal_sequenceRepeatable =
  tei_model.complexVal+, tei_model.singleVal+
tei_model.common =
  tei_model.oddDecl
  | tei_model.oddRef
  | tei_model.qLike
  | tei_model.biblLike
  | tei_model.listLike
  | tei_model.divPart
  | tei_label
  | tei_table
  | tei_figure
  | tei_include
tei_model.common_sequence =
  tei_model.oddDecl,
  tei_model.oddRef,
  tei_model.qLike,
  tei_model.biblLike,
  tei_model.listLike,
  tei_model.divPart,
  tei_label,
  tei_table,
  tei_figure,
  tei_include
tei_model.common_sequenceOptional =
  tei_model.oddDecl?,
  tei_model.oddRef?,
  tei_model.qLike?,
  tei_model.biblLike?,
  tei_model.listLike?,
  tei_model.divPart?,
  tei_label?,
  tei_table?,
  tei_figure?,
  tei_include?
tei_model.common_sequenceOptionalRepeatable =
  tei_model.oddDecl*,
  tei_model.oddRef*,
  tei_model.qLike*,
  tei_model.biblLike*,
  tei_model.listLike*,
  tei_model.divPart*,
  tei_label*,
  tei_table*,
  tei_figure*,
  tei_include*
tei_model.common_sequenceRepeatable =
  tei_model.oddDecl+,
  tei_model.oddRef+,
  tei_model.qLike+,
  tei_model.biblLike+,
  tei_model.listLike+,
  tei_model.divPart+,
  tei_label+,
  tei_table+,
  tei_figure+,
  tei_include+
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_series
  | tei_edition
  | tei_extent
  | tei_distributor
  | tei_idno
  | tei_msIdentifier
tei_model.biblPart_sequence =
  tei_model.respLike,
  tei_model.imprintPart,
  tei_series,
  tei_edition,
  tei_extent,
  tei_distributor,
  tei_idno,
  tei_msIdentifier
tei_model.biblPart_sequenceOptional =
  tei_model.respLike?,
  tei_model.imprintPart?,
  tei_series?,
  tei_edition?,
  tei_extent?,
  tei_distributor?,
  tei_idno?,
  tei_msIdentifier?
tei_model.biblPart_sequenceOptionalRepeatable =
  tei_model.respLike*,
  tei_model.imprintPart*,
  tei_series*,
  tei_edition*,
  tei_extent*,
  tei_distributor*,
  tei_idno*,
  tei_msIdentifier*
tei_model.biblPart_sequenceRepeatable =
  tei_model.respLike+,
  tei_model.imprintPart+,
  tei_series+,
  tei_edition+,
  tei_extent+,
  tei_distributor+,
  tei_idno+,
  tei_msIdentifier+
tei_model.datePart = tei_offset | tei_distance
tei_model.datePart_sequence = tei_offset, tei_distance
tei_model.datePart_sequenceOptional = tei_offset?, tei_distance?
tei_model.datePart_sequenceOptionalRepeatable =
  tei_offset*, tei_distance*
tei_model.datePart_sequenceRepeatable = tei_offset+, tei_distance+
tei_model.frontPart =
  tei_model.frontPart.drama | tei_divGen | tei_titlePage
tei_model.frontPart_sequence =
  tei_model.frontPart.drama, tei_divGen, tei_titlePage
tei_model.frontPart_sequenceOptional =
  tei_model.frontPart.drama?, tei_divGen?, tei_titlePage?
tei_model.frontPart_sequenceOptionalRepeatable =
  tei_model.frontPart.drama*, tei_divGen*, tei_titlePage*
tei_model.frontPart_sequenceRepeatable =
  tei_model.frontPart.drama+, tei_divGen+, tei_titlePage+
tei_model.addrPart =
  tei_model.nameLike
  | tei_addrLine
  | tei_street
  | tei_postCode
  | tei_postBox
tei_model.addrPart_sequence =
  tei_model.nameLike,
  tei_addrLine,
  tei_street,
  tei_postCode,
  tei_postBox
tei_model.addrPart_sequenceOptional =
  tei_model.nameLike?,
  tei_addrLine?,
  tei_street?,
  tei_postCode?,
  tei_postBox?
tei_model.addrPart_sequenceOptionalRepeatable =
  tei_model.nameLike*,
  tei_addrLine*,
  tei_street*,
  tei_postCode*,
  tei_postBox*
tei_model.addrPart_sequenceRepeatable =
  tei_model.nameLike+,
  tei_addrLine+,
  tei_street+,
  tei_postCode+,
  tei_postBox+
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.pPart.data_sequence =
  tei_model.dateLike,
  tei_model.measureLike,
  tei_model.addressLike,
  tei_model.nameLike
tei_model.pPart.data_sequenceOptional =
  tei_model.dateLike?,
  tei_model.measureLike?,
  tei_model.addressLike?,
  tei_model.nameLike?
tei_model.pPart.data_sequenceOptionalRepeatable =
  tei_model.dateLike*,
  tei_model.measureLike*,
  tei_model.addressLike*,
  tei_model.nameLike*
tei_model.pPart.data_sequenceRepeatable =
  tei_model.dateLike+,
  tei_model.measureLike+,
  tei_model.addressLike+,
  tei_model.nameLike+
tei_model.inter =
  tei_model.oddDecl
  | tei_model.oddRef
  | tei_model.qLike
  | tei_model.biblLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_label
  | tei_castList
  | tei_table
  | tei_figure
  | tei_model.divPart.spoken
  | tei_text
tei_model.inter_sequence =
  tei_model.oddDecl,
  tei_model.oddRef,
  tei_model.qLike,
  tei_model.biblLike,
  tei_model.listLike,
  tei_model.stageLike,
  tei_label,
  tei_castList,
  tei_table,
  tei_figure,
  tei_model.divPart.spoken,
  tei_text
tei_model.inter_sequenceOptional =
  tei_model.oddDecl?,
  tei_model.oddRef?,
  tei_model.qLike?,
  tei_model.biblLike?,
  tei_model.listLike?,
  tei_model.stageLike?,
  tei_label?,
  tei_castList?,
  tei_table?,
  tei_figure?,
  tei_model.divPart.spoken?,
  tei_text?
tei_model.inter_sequenceOptionalRepeatable =
  tei_model.oddDecl*,
  tei_model.oddRef*,
  tei_model.qLike*,
  tei_model.biblLike*,
  tei_model.listLike*,
  tei_model.stageLike*,
  tei_label*,
  tei_castList*,
  tei_table*,
  tei_figure*,
  tei_model.divPart.spoken*,
  tei_text*
tei_model.inter_sequenceRepeatable =
  tei_model.oddDecl+,
  tei_model.oddRef+,
  tei_model.qLike+,
  tei_model.biblLike+,
  tei_model.listLike+,
  tei_model.stageLike+,
  tei_label+,
  tei_castList+,
  tei_table+,
  tei_figure+,
  tei_model.divPart.spoken+,
  tei_text+
tei_model.phrase =
  tei_model.segLike
  | tei_model.hiLike
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.lPart
  | tei_model.oddPhr
  | tei_model.pPart.data
  | tei_model.ptrLike.form
tei_model.phrase_sequence =
  tei_model.segLike,
  tei_model.hiLike,
  tei_model.graphicLike,
  tei_model.pPart.msdesc,
  tei_model.pPart.edit,
  tei_model.ptrLike,
  tei_model.lPart,
  tei_model.oddPhr,
  tei_model.pPart.data,
  tei_model.ptrLike.form
tei_model.phrase_sequenceOptional =
  tei_model.segLike?,
  tei_model.hiLike?,
  tei_model.graphicLike?,
  tei_model.pPart.msdesc?,
  tei_model.pPart.edit?,
  tei_model.ptrLike?,
  tei_model.lPart?,
  tei_model.oddPhr?,
  tei_model.pPart.data?,
  tei_model.ptrLike.form?
tei_model.phrase_sequenceOptionalRepeatable =
  tei_model.segLike*,
  tei_model.hiLike*,
  tei_model.graphicLike*,
  tei_model.pPart.msdesc*,
  tei_model.pPart.edit*,
  tei_model.ptrLike*,
  tei_model.lPart*,
  tei_model.oddPhr*,
  tei_model.pPart.data*,
  tei_model.ptrLike.form*
tei_model.phrase_sequenceRepeatable =
  tei_model.segLike+,
  tei_model.hiLike+,
  tei_model.graphicLike+,
  tei_model.pPart.msdesc+,
  tei_model.pPart.edit+,
  tei_model.ptrLike+,
  tei_model.lPart+,
  tei_model.oddPhr+,
  tei_model.pPart.data+,
  tei_model.ptrLike.form+
tei_model.divLike = tei_div
tei_model.divLike_sequence = tei_div
tei_model.divLike_sequenceOptional = tei_div?
tei_model.divLike_sequenceOptionalRepeatable = tei_div*
tei_model.divLike_sequenceRepeatable = tei_div+
tei_model.divGenLike = tei_divGen
tei_model.divGenLike_sequence = tei_divGen
tei_model.divGenLike_sequenceOptional = tei_divGen?
tei_model.divGenLike_sequenceOptionalRepeatable = tei_divGen*
tei_model.divGenLike_sequenceRepeatable = tei_divGen+
tei_model.div1Like = tei_div1
tei_model.div1Like_sequence = tei_div1
tei_model.div1Like_sequenceOptional = tei_div1?
tei_model.div1Like_sequenceOptionalRepeatable = tei_div1*
tei_model.div1Like_sequenceRepeatable = tei_div1+
tei_model.div2Like = tei_div2
tei_model.div2Like_sequence = tei_div2
tei_model.div2Like_sequenceOptional = tei_div2?
tei_model.div2Like_sequenceOptionalRepeatable = tei_div2*
tei_model.div2Like_sequenceRepeatable = tei_div2+
tei_model.div3Like = tei_div3
tei_model.div3Like_sequence = tei_div3
tei_model.div3Like_sequenceOptional = tei_div3?
tei_model.div3Like_sequenceOptionalRepeatable = tei_div3*
tei_model.div3Like_sequenceRepeatable = tei_div3+
tei_model.div4Like = tei_div4
tei_model.div4Like_sequence = tei_div4
tei_model.div4Like_sequenceOptional = tei_div4?
tei_model.div4Like_sequenceOptionalRepeatable = tei_div4*
tei_model.div4Like_sequenceRepeatable = tei_div4+
tei_model.div5Like = tei_div5
tei_model.div5Like_sequence = tei_div5
tei_model.div5Like_sequenceOptional = tei_div5?
tei_model.div5Like_sequenceOptionalRepeatable = tei_div5*
tei_model.div5Like_sequenceRepeatable = tei_div5+
tei_model.div6Like = tei_div6
tei_model.div6Like_sequence = tei_div6
tei_model.div6Like_sequenceOptional = tei_div6?
tei_model.div6Like_sequenceOptionalRepeatable = tei_div6*
tei_model.div6Like_sequenceRepeatable = tei_div6+
tei_model.div7Like = tei_div7
tei_model.div7Like_sequence = tei_div7
tei_model.div7Like_sequenceOptional = tei_div7?
tei_model.div7Like_sequenceOptionalRepeatable = tei_div7*
tei_model.div7Like_sequenceRepeatable = tei_div7+
tei_model.placeNamePart =
  tei_bloc
  | tei_country
  | tei_region
  | tei_district
  | tei_settlement
  | tei_offset
  | tei_distance
  | tei_geog
tei_model.placeNamePart_sequence =
  tei_bloc,
  tei_country,
  tei_region,
  tei_district,
  tei_settlement,
  tei_offset,
  tei_distance,
  tei_geog
tei_model.placeNamePart_sequenceOptional =
  tei_bloc?,
  tei_country?,
  tei_region?,
  tei_district?,
  tei_settlement?,
  tei_offset?,
  tei_distance?,
  tei_geog?
tei_model.placeNamePart_sequenceOptionalRepeatable =
  tei_bloc*,
  tei_country*,
  tei_region*,
  tei_district*,
  tei_settlement*,
  tei_offset*,
  tei_distance*,
  tei_geog*
tei_model.placeNamePart_sequenceRepeatable =
  tei_bloc+,
  tei_country+,
  tei_region+,
  tei_district+,
  tei_settlement+,
  tei_offset+,
  tei_distance+,
  tei_geog+
tei_p =
  
  ## (paragraph) marks paragraphs in prose.
  element p { tei_p.content, tei_p.attributes }
tei_p.content = tei_macro.paraContent
tei_p.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other
  ## than that of the surrounding text. 
  element foreign { tei_foreign.content, tei_foreign.attributes }
tei_foreign.content = tei_macro.phraseSeq
tei_foreign.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for
  ## linguistic or rhetorical effect.
  element emph { tei_emph.content, tei_emph.attributes }
tei_emph.content = tei_macro.paraContent
tei_emph.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the
  ## surrounding text, for reasons concerning which no claim is
  ## made. 
  element hi { tei_hi.content, tei_hi.attributes }
tei_hi.content = tei_macro.paraContent
tei_hi.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_distinct =
  
  ## (distinct) identifies any word or phrase which is regarded as linguistically
  ## distinct, for example as archaic, technical, dialectal, non-preferred,
  ## etc., or as forming part of a sublanguage. 
  element distinct { tei_distinct.content, tei_distinct.attributes }
tei_distinct.content = tei_macro.phraseSeq
tei_distinct.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the sublanguage or register to which the word or phrase
  ## is being assigned
  attribute type { tei_data.enumerated }?,
  
  ## specifies how the phrase is distinct diachronically
  attribute time { tei_data.code }?,
  
  ## specifies how the phrase is distinct diatopically
  attribute space { tei_data.code }?,
  
  ## specifies how the phrase is distinct diastatically
  attribute social { tei_data.code }?,
  empty
tei_q =
  
  ## (quoted speech, thought, or writing) contains material which is
  ## marked as (ostensibly) quoted from elsewhere; in narrative, this element is used to mark direct or
  ## indirect speech; in dictionaries, it ay be used to mark
  ## real or contrived examples of usage; in manuscript descriptions or
  ## other metadata, to mark extracts quoted from the source being documented.
  element q { tei_q.content, tei_q.attributes }
tei_q.content = tei_macro.specialPara
tei_q.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  
  ## may be used to indicate whether the quoted matter is spoken
  ## or thought, or to characterize it more finely.
  ## Sample values include: 1] spoken (representation of direct speech, usually
  ## marked by quotation marks.); 2] thought (representation of thought, e.g. internal monologue.); 3] written (quotation from a written source.)
  attribute type { tei_data.enumerated }?,
  
  ## may be used to indicate whether the quoted matter is regarded
  ## as direct or indirect speech.
  [ a1:defaultValue = "unknown" ]
  attribute direct {
    
    ## (speech or thought is represented directly.) 
    "true"
    | 
      ## (speech or thought is represented indirectly,
      ## e.g. by use of a marked verbal aspect.) 
      "false"
    | 
      ## (no claim is made.) 
      "unknown"
  }?,
  empty
tei_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or
  ##   author to some agency external to the text.
  element quote { tei_quote.content, tei_quote.attributes }
tei_quote.content = tei_macro.specialPara
tei_quote.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.msExcerpt.attribute.defective,
  empty
tei_cit =
  
  ## A quotation from some other document, together with a
  ##   bibliographic reference to its source.
  element cit { tei_cit.content, tei_cit.attributes }
tei_cit.content =
  (tei_model.quoteLike
   | tei_model.biblLike
   | tei_model.ptrLike
   | tei_model.global)+
tei_cit.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_mentioned =
  
  ## marks words or phrases mentioned, not used.
  element mentioned { tei_mentioned.content, tei_mentioned.attributes }
tei_mentioned.content = tei_macro.phraseSeq
tei_mentioned.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_soCalled =
  
  ## (so called) contains a word or phrase for which the author or narrator
  ## indicates a disclaiming of responsibility, for example by the use
  ## of scare quotes or italics.
  element soCalled { tei_soCalled.content, tei_soCalled.attributes }
tei_soCalled.content = tei_macro.phraseSeq
tei_soCalled.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_altIdent =
  
  ## supplies the recommended XML name for an element, class,
  ##   attribute, etc. in some language.
  element altIdent { tei_altIdent.content, tei_altIdent.attributes }
tei_altIdent.content = tei_macro.xtext
tei_altIdent.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_desc =
  
  ## (description) contains a brief description of the purpose and application for
  ## an element, attribute, or attribute value.
  element desc { tei_desc.content, tei_desc.attributes }
tei_desc.content = tei_macro.paraContent
tei_desc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.translatable.attribute.version,
  empty
tei_equiv =
  
  ## specifies a component which is considered equivalent to the
  ##   parent element, either by co-reference, or by external link.
  element equiv { tei_equiv.content, tei_equiv.attributes }
tei_equiv.content = empty
tei_equiv.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## names the underlying concept of which the parent is a
  ##   representation
  attribute name { tei_data.name }?,
  
  ## references the underlying concept of which the parent is a
  ##   representation by means of some external identifier
  attribute uri { tei_data.pointer }?,
  
  ## references an external script which contains a method to
  ## transform instances of this element to canonical TEI
  ##	
  attribute filter { xsd:anyURI }?,
  
  ## MIME type of external filter script
  attribute mimeType { tei_data.word }?,
  empty
tei_gloss =
  
  ## identifies a phrase or word used to provide a gloss or
  ##   definition for some other word or phrase.
  element gloss { tei_gloss.content, tei_gloss.attributes }
tei_gloss.content = tei_macro.phraseSeq
tei_gloss.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  att.translatable.attribute.version,
  (
   ## identifies the associated term element by an
   ##       absolute or relative URI reference
   attribute target { tei_data.pointer }
   | 
     ## identifies the associated term element using a canonical
     ##       reference from a scheme defined in a refsDecl element
     ##       in the TEI header
     attribute cRef { tei_data.pointer })?,
  empty
tei_term =
  
  ## contains a single-word, multi-word, or symbolic designation
  ##   which is regarded as a technical term.
  element term { tei_term.content, tei_term.attributes }
tei_term.content = tei_macro.phraseSeq
tei_term.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## supplies the sort key for this term in an index.
  attribute sortKey { tei_data.word }?,
  (
   ## identifies the associated gloss element by an
   ##	absolute or relative URI reference
   attribute target { tei_data.pointer }
   | 
     ## identifies the associated gloss element using a
     ##	canonical reference from a scheme defined in a
     ##	refsDecl element in the TEI header
     attribute cRef { tei_data.pointer })?,
  empty
tei_sic =
  
  ## contains text reproduced although apparently incorrect or inaccurate.
  element sic { tei_sic.content, tei_sic.attributes }
tei_sic.content = tei_macro.paraContent
tei_sic.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text.
  element corr { tei_corr.content, tei_corr.attributes }
tei_corr.content = tei_macro.paraContent
tei_corr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_choice =
  
  ## groups a number of alternative encodings for the same point in
  ##   a text.
  element choice { tei_choice.content, tei_choice.attributes }
tei_choice.content = (tei_model.choicePart | tei_choice)*
tei_choice.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized
  ## in some sense.
  element reg { tei_reg.content, tei_reg.attributes }
tei_reg.content = tei_macro.paraContent
tei_reg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_orig =
  
  ## (original form) contains  a reading which is marked as following  the original,
  ## rather than being normalized or corrected.
  element orig { tei_orig.content, tei_orig.attributes }
tei_orig.content = tei_macro.paraContent
tei_orig.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_gap =
  
  ## (omitted material) indicates a point where material has been omitted in a
  ## transcription, whether for editorial reasons described in the TEI
  ## header, as part of sampling practice, or because the material is
  ## illegible or inaudible.
  element gap { tei_gap.content, tei_gap.attributes }
tei_gap.content = tei_macro.glossSeq
tei_gap.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## gives the reason for omission.  Sample values include
  ## sampling, illegible, inaudible,
  ## irrelevant, cancelled, cancelled and illegible.
  attribute reason {
    list { tei_data.word+ }
  }?,
  
  ## in the case of text omitted from the transcription because of
  ## deliberate deletion by an identifiable hand, signifies the hand which
  ## made the deletion.
  attribute hand { tei_data.pointer }?,
  
  ## In the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing (damage results from rubbing of the
  ##   leaf edges); 2] mildew (damage results from mildew on the leaf surface); 3] smoke (damage results from smoke)
  attribute agent { tei_data.enumerated }?,
  
  ## indicates approximately how much text has been omitted from the
  ## transcription, in letters, minims, inches, or any appropriate unit,
  ## either because of editorial policy or because a deletion, damage, or
  ## other cause has rendered transcription impossible.
  attribute extent {
    list { tei_data.word+ }
  }?,
  empty
tei_add =
  
  ## (addition) contains letters, words, or phrases inserted in the text by an
  ## author, scribe, annotator, or corrector.
  element add { tei_add.content, tei_add.attributes }
tei_add.content = tei_macro.paraContent
tei_add.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.authorialIntervention.attribute.hand,
  att.authorialIntervention.attribute.status,
  att.authorialIntervention.attribute.type,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.placement.attribute.place,
  empty
tei_del =
  
  ## (deletion) contains a letter, word or passage deleted, marked as deleted,
  ## or otherwise indicated as superfluous or spurious in the copy text by an
  ## author, scribe, annotator, or corrector.
  element del { tei_del.content, tei_del.attributes }
tei_del.content = tei_macro.paraContent
tei_del.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.authorialIntervention.attribute.hand,
  att.authorialIntervention.attribute.status,
  att.authorialIntervention.attribute.type,
  empty
tei_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed
  ## with certainty because it is illegible or inaudible in the source.
  element unclear { tei_unclear.content, tei_unclear.attributes }
tei_unclear.content = tei_macro.paraContent
tei_unclear.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## indicates why the material is hard to transcribe.
  attribute reason {
    list { tei_data.word+ }
  }?,
  
  ## Where the difficulty in transcription arises from action
  ## (partial deletion, etc.) assignable to an identifiable hand, signifies
  ## the hand responsible for the action.
  attribute hand { tei_data.pointer }?,
  
  ## Where the difficulty in transcription arises from
  ##  damage, categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing (damage results from rubbing of the
  ##   leaf edges); 2] mildew (damage results from mildew on the leaf surface); 3] smoke (damage results from smoke)
  attribute agent { tei_data.enumerated }?,
  empty
tei_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase.
  element name { tei_name.content, tei_name.attributes }
tei_name.content = tei_macro.phraseSeq
tei_name.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  
  ## indicates the type of the object which is being named by the
  ##       phrase.
  attribute type { tei_data.enumerated }?,
  empty
tei_rs =
  
  ## (referencing string) contains a general purpose name or referring string.
  element rs { tei_rs.content, tei_rs.attributes }
tei_rs.content = tei_macro.phraseSeq
tei_rs.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  
  ## indicates more specifically the object referred to by the
  ##       referencing string. Values might include person,
  ##       place, ship, element etc.
  attribute type { tei_data.enumerated }?,
  empty
tei_email =
  
  ## contains an e-mail address identifying a location to which
  ## e-mail messages can be delivered.
  ##		
  element email { tei_email.content, tei_email.attributes }
tei_email.content = tei_macro.phraseSeq
tei_email.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_address =
  
  ## contains a postal  address, for example of a
  ## publisher, an organization, or an individual.
  element address { tei_address.content, tei_address.attributes }
tei_address.content =
  tei_model.global*, (tei_model.addrPart, tei_model.global*)+
tei_address.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_addrLine =
  
  ## contains one line of a postal address.
  element addrLine { tei_addrLine.content, tei_addrLine.attributes }
tei_addrLine.content = tei_macro.phraseSeq
tei_addrLine.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_street =
  
  ## (street) a full street address including any name or number identifying a
  ## building as well as the name of the street or route on which it is
  ## located.
  element street { tei_street.content, tei_street.attributes }
tei_street.content = tei_macro.phraseSeq
tei_street.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_postCode =
  
  ## (postCode) contains a numerical or alphanumeric code used as part of a
  ## postal address to simplify sorting or delivery of mail. 
  element postCode { tei_postCode.content, tei_postCode.attributes }
tei_postCode.content = text
tei_postCode.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_postBox =
  
  ## (postBox) contains a number or other identifier for some postal delivery
  ## point other than a street address. 
  element postBox { tei_postBox.content, tei_postBox.attributes }
tei_postBox.content = text
tei_postBox.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_num =
  
  ## (number) contains a number, written in any form.
  element num { tei_num.content, tei_num.attributes }
tei_num.content = tei_macro.phraseSeq
tei_num.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the type of numeric value.
  ## Suggested values include: 1] cardinal (absolute number, e.g. 21, 21.5); 2] ordinal (ordinal number, e.g. 21st); 3] fraction (fraction, e.g. one half or three-quarters); 4] percentage (a percentage)
  attribute type { tei_data.enumerated }?,
  
  ## supplies the value of the number in standard form.
  attribute value { tei_data.numeric }?,
  empty
tei_measure =
  
  ## contains a word or phrase referring to some quantity of
  ## an object or commodity, usually comprising a number, a unit, and a
  ## commodity name.
  element measure { tei_measure.content, tei_measure.attributes }
tei_measure.content = tei_macro.phraseSeq
tei_measure.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.measurement.attribute.unit,
  att.measurement.attribute.quantity,
  att.measurement.attribute.commodity,
  
  ## specifies the type of measurement in any convenient typology.
  attribute type { tei_data.enumerated }?,
  empty
tei_date =
  
  ## contains a date in any format.
  element date { tei_date.content, tei_date.attributes }
tei_date.content =
  (text
   | tei_model.gLike
   | tei_model.datePart
   | tei_model.phrase
   | tei_model.global)*
tei_date.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datePart.attribute.value,
  att.datePart.attribute.dur,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## indicates the system or calendar to which the date belongs.
  ## Suggested values include: 1] Gregorian; 2] Julian; 3] Islamic; 4] Hebrew; 5] Revolutionary; 6] Iranian; 7] Coptic; 8] Chinese
  attribute calendar { tei_data.enumerated }?,
  
  ## indicates the degree of precision associated with the date.
  attribute precision { tei_data.certainty }?,
  empty
tei_time =
  
  ## contains a phrase defining a time of day in any format.
  element time { tei_time.content, tei_time.attributes }
tei_time.content =
  (text
   | tei_model.gLike
   | tei_model.datePart
   | tei_model.phrase
   | tei_model.global)*
tei_time.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datePart.attribute.value,
  att.datePart.attribute.dur,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort.
  element abbr { tei_abbr.content, tei_abbr.attributes }
tei_abbr.content = tei_macro.phraseSeq
tei_abbr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## allows the encoder to classify the abbreviation according to
  ## some convenient typology.
  ## Sample values include: 1] suspension (the abbreviation provides the first
  ##        letter(s) of the word or phrase, omitting the remainder.); 2] contraction (the abbreviation omits some letter(s) in the middle.); 3] brevigraph (the abbreviation comprises a special symbol or mark.); 4] superscription (the abbreviation includes writing above the line.); 5] acronym (the abbreviation comprises the initial letters of
  ##	  the words of a phrase.); 6] title (the abbreviation is for a title of address (Dr, Ms, Mr, …)); 7] organization (the abbreviation is for the name of an organization.); 8] geographic (the abbreviation is for a geographic name.)
  attribute type { tei_data.enumerated }?,
  empty
tei_expan =
  
  ## (expansion) contains the expansion of an abbreviation.
  element expan { tei_expan.content, tei_expan.attributes }
tei_expan.content = tei_macro.phraseSeq
tei_expan.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_ptr =
  
  ## defines a pointer to another location.
  element ptr { tei_ptr.content, tei_ptr.attributes }
tei_ptr.content = empty
tei_ptr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  att.declaring.attribute.decls,
  (
   ## specifies the destination of the pointer by supplying one or
   ##       more URI References
   attribute target {
     list { tei_data.pointer+ }
   }
   | 
     ## specifies the destination of the pointer by supplying a
     ##       canonical reference from a scheme defined in a refsDecl
     ##       element in the TEI header
     attribute cRef {
       list { tei_data.word+ }
     })?,
  empty
tei_ref =
  
  ## defines a reference to another location, possibly
  ##   modified by additional text or comment.
  element ref { tei_ref.content, tei_ref.attributes }
tei_ref.content = tei_macro.paraContent
tei_ref.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  att.declaring.attribute.decls,
  (
   ## specifies the destination of the reference by supplying one
   ##     or more URI References
   attribute target {
     list { tei_data.pointer+ }
   }
   | 
     ## specifies the destination of the reference by supplying a
     ##       canonical reference from a scheme defined in a refsDecl
     ##       element in the TEI header
     attribute cRef {
       list { tei_data.word+ }
     })?,
  empty
tei_list =
  
  ## contains any sequence of items organized as a list.
  element list { tei_list.content, tei_list.attributes }
tei_list.content =
  (tei_model.divWrapper | tei_model.global)*,
  ((tei_item, tei_model.global*)+
   | (tei_headLabel?,
      tei_headItem?,
      (tei_label, tei_model.global*, tei_item, tei_model.global*)+)),
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_list.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## describes the form of the list.
  ## Suggested values include: 1] ordered (list items are numbered or lettered.
  ##     ); 2] bulleted (list items are marked with a
  ## bullet or other typographic device.
  ##     ); 3] simple (list items are not numbered or bulleted.
  ##     ); 4] gloss (each list item glosses some term or
  ## concept, which is given by a label element preceding
  ## the list item.)
  [ a1:defaultValue = "simple" ]
  attribute type { tei_data.enumerated }?,
  empty
tei_item =
  
  ## contains one
  ## component of a list.
  element item { tei_item.content, tei_item.attributes }
tei_item.content = tei_macro.specialPara
tei_item.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_label =
  
  ## contains the label associated with an item in a list; in
  ## glossaries, marks the term being defined.
  element label { tei_label.content, tei_label.attributes }
tei_label.content = tei_macro.phraseSeq
tei_label.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_head =
  
  ## (heading) contains any type of heading, for example the title of a section,
  ## or the heading of a list, glossary, manuscript description, etc.
  element head { tei_head.content, tei_head.attributes }
tei_head.content = tei_macro.paraContent
tei_head.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the heading in any way meaningful 
  ##          to the encoder. 
  attribute type { tei_data.enumerated }?,
  empty
tei_headLabel =
  
  ## (heading for list labels) contains the heading for the label or term column in a
  ## glossary list or similar structured list.
  element headLabel { tei_headLabel.content, tei_headLabel.attributes }
tei_headLabel.content = tei_macro.phraseSeq
tei_headLabel.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_headItem =
  
  ## (heading for list items) contains the heading for the item or gloss column in a
  ## glossary list or similar structured list.
  element headItem { tei_headItem.content, tei_headItem.attributes }
tei_headItem.content = tei_macro.phraseSeq
tei_headItem.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_note =
  
  ## contains a note or annotation.
  element note { tei_note.content, tei_note.attributes }
tei_note.content = tei_macro.specialPara
tei_note.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.placement.attribute.place,
  
  ## describes the type of note.
  attribute type { tei_data.enumerated }?,
  
  ## indicates who is responsible for the annotation: author,
  ##	editor, translator, etc.
  attribute resp { tei_data.pointer }?,
  
  ## indicates whether the copy text shows the exact place of reference
  ## for the note.
  [ a1:defaultValue = "true" ]
  attribute anchored {
    
    ## (copy text indicates the place of attachment for the note.
    ##     ) 
    "true"
    | 
      ## (copy text indicates no place of attachment for the note.) 
      "false"
  }?,
  
  ## indicates the point (or points) of attachment for a note, or the beginning of
  ## the span to which the note is attached.
  attribute target {
    list { tei_data.pointer+ }
  }?,
  
  ## points to the end of the span to which the note is attached, if
  ## the note is not embedded in the text at that point.
  attribute targetEnd {
    list { tei_data.pointer+ }
  }?,
  empty
tei_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose.
  element index { tei_index.content, tei_index.attributes }
tei_index.content = (tei_term, tei_index?)*
tei_index.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.spanning.attribute.spanTo,
  
  ## supplies a name to specify which index (of several) the index entry belongs to.
  attribute indexName { tei_data.name }?,
  empty
tei_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated
  ## automatically by a text-processing application is to appear.
  element divGen { tei_divGen.content, tei_divGen.attributes }
tei_divGen.content = tei_model.divWrapper*
tei_divGen.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies what type of generated text division (e.g. index,
  ## table of contents, etc.) is to appear.
  ## Sample values include: 1] index (an index is to be generated and inserted at this point.); 2] toc (a table of contents); 3] figlist (a list of figures); 4] tablist (a list of tables)
  attribute type { tei_data.enumerated }?,
  empty
tei_graphic =
  
  ## indicates the location of an inline graphic, illustration, or figure.
  element graphic { tei_graphic.content, tei_graphic.attributes }
tei_graphic.content = empty
tei_graphic.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## The display width of the image
  attribute width { tei_data.outputMeasurement }?,
  
  ## The display height of the image
  attribute height { tei_data.outputMeasurement }?,
  
  ## A scale factor to be applied to the image to make it the desired display size
  attribute scale { tei_data.numeric }?,
  
  ## The target URL
  attribute url { tei_data.pointer }?,
  
  ## The MIME type
  attribute mimeType { tei_data.word }?,
  empty
tei_binaryObject =
  
  ## provides encoded binary data representing an inline graphic or other object.
  element binaryObject {
    tei_binaryObject.content, tei_binaryObject.attributes
  }
tei_binaryObject.content = text
tei_binaryObject.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## The display width of the object
  attribute width { tei_data.outputMeasurement }?,
  
  ## The display height of the object
  attribute height { tei_data.outputMeasurement }?,
  
  ## A scale factor to be applied to the object to make it the desired display size
  attribute scale { tei_data.numeric }?,
  
  ## The MIME type
  attribute mimeType { tei_data.word }?,
  
  ## The encoding used to encode the binary data. If not
  ##       specified, this is assumed to be Base64
  attribute encoding {
    list { tei_data.word+ }
  }?,
  empty
tei_milestone =
  
  ## marks a boundary point separating  any kind of section of a text, as indicated by
  ## changes in a standard reference system, where the section is not
  ## represented by a structural element.
  element milestone { tei_milestone.content, tei_milestone.attributes }
tei_milestone.content = empty
tei_milestone.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the edition or version to which the milestone applies.
  attribute ed { tei_data.code }?,
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page (physical page breaks (synonymous with the pb
  ##	  element).); 2] column (column breaks.); 3] line (line breaks (synonymous with the lb element).); 4] book (any units termed book, liber, etc.); 5] poem (individual poems in a collection.); 6] canto (cantos or other major sections of a poem.); 7] stanza (stanzas within a poem, book, or canto.); 8] act (acts within a play.); 9] scene (scenes within a play or act.); 10] section (sections of any kind.); 11] absent (passages not present in the reference edition.)
  attribute unit { tei_data.enumerated },
  empty
tei_pb =
  
  ## (page break) marks the boundary between one page of a text and the next
  ## in a standard reference system.
  element pb { tei_pb.content, tei_pb.attributes }
tei_pb.content = empty
tei_pb.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the edition or version in which the page break is located
  ## at this point
  attribute ed { tei_data.code }?,
  empty
tei_lb =
  
  ## (line break) marks the start of a new (typographic) line in some
  ## edition or version of a text.
  element lb { tei_lb.content, tei_lb.attributes }
tei_lb.content = empty
tei_lb.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the edition or version in which the line break is located
  ## at this point
  attribute ed { tei_data.code }?,
  empty
tei_cb =
  
  ## (column break) marks the boundary between one column of a text and the next
  ## in a standard reference system.
  element cb { tei_cb.content, tei_cb.attributes }
tei_cb.content = empty
tei_cb.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the edition or version in which the column break is located
  ## at this point
  attribute ed { tei_data.code }?,
  empty
tei_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which
  ## the sub-components may or may not be explicitly tagged. 
  element bibl { tei_bibl.content, tei_bibl.attributes }
tei_bibl.content =
  (text
   | tei_model.gLike
   | tei_model.hiLike
   | tei_model.pPart.data
   | tei_model.pPart.edit
   | tei_model.segLike
   | tei_model.ptrLike
   | tei_model.biblPart
   | tei_model.global)*
tei_bibl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_biblItem =
  
  ## (bibliographic citation) contains a bibliographic citation in which only bibliographic
  ##   subelements appear.
  element biblItem { tei_biblItem.content, tei_biblItem.attributes }
tei_biblItem.content =
  (tei_title
   | tei_biblItem
   | tei_imprint
   | tei_model.nameLike
   | tei_model.biblPart
   | tei_model.dateLike)+
tei_biblItem.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## indicates the physical form of the object of this bibliographic entry.
  ## Sample values include: 1] book.hardcover (); 2] book.paperback (); 3] video.VHS (); 4] video.DVD (); 5] audio.casette (); 6] audio.CD ()
  attribute form { tei_data.word }?,
  
  ## indicates the publication status of the object of this bibliographic entry.
  ## Sample values include: 1] manuscript (the item is a manuscript); 2] forthcoming (the item is being published, but has not been released yet); 3] inPrint (the item is currently being published)
  attribute status { text }?,
  
  ## indicates the relationship of this bibliographic entry to
  ##       that of its parent bibl or biblItem.
  ## Sample values include: 1] host (this bibliographic item has a host relationship to
  ##	  the item encoded in the parent bibl or biblItem; e.g., this item is the
  ##	  magazine in which the article described by the parent bibl or biblItem
  ##	  appeared.); 2] original (the item is original source); 3] workReviewed (this bibliographic item was reviewed in the ancestor work); 4] edition (indicates that this entry contains separate
  ##	  information for a particular edition of the parent bibl or biblItem); 5] basedOn (indicates that the parent bibl or biblItem is the base work from which this one was
  ##	  derived); 6] referencedBy (indicates that the element is a reference for the work in question); 7] copyOf (indicates that this entry is for a facsimile of that
  ##	  which is referred to by the parent bibl or biblItem)
  attribute role { text }?,
  empty
tei_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only
  ## bibliographic subelements appear and in a specified order. 
  element biblStruct {
    tei_biblStruct.content, tei_biblStruct.attributes
  }
tei_biblStruct.content =
  tei_analytic*,
  (tei_monogr, tei_series*)+,
  (tei_model.noteLike | tei_idno)*
tei_biblStruct.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_biblFull =
  
  ## contains a fully-structured bibliographic citation, in which all
  ## components of the TEI file description
  ## are present.
  element biblFull { tei_biblFull.content, tei_biblFull.attributes }
tei_biblFull.content = tei_macro.fileDescPart, tei_sourceDesc*
tei_biblFull.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. 
  element listBibl { tei_listBibl.content, tei_listBibl.attributes }
tei_listBibl.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_model.biblLike, tei_model.global*)+,
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_listBibl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an
  ## article or poem) published within a monograph or journal and not as an
  ## independent publication.
  element analytic { tei_analytic.content, tei_analytic.attributes }
tei_analytic.content =
  (tei_author | tei_editor | tei_respStmt | tei_title)*
tei_analytic.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book
  ## or journal) published as an independent item (i.e. as a separate
  ## physical object).
  element monogr { tei_monogr.content, tei_monogr.attributes }
tei_monogr.content =
  (((tei_author | tei_editor | tei_respStmt),
    (tei_author | tei_editor | tei_respStmt)*,
    tei_title+,
    (tei_editor | tei_respStmt)*)
   | (tei_title+, (tei_author | tei_editor | tei_respStmt)*))?,
  (tei_model.noteLike | tei_meeting)*,
  (tei_edition, (tei_editor | tei_respStmt)*)*,
  tei_imprint,
  (tei_imprint | tei_extent | tei_biblScope)*
tei_monogr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_series =
  
  ## (series information) contains information about the series in which a book or other
  ## bibliographic item has appeared.
  element series { tei_series.content, tei_series.attributes }
tei_series.content =
  (text
   | tei_model.gLike
   | tei_title
   | tei_editor
   | tei_respStmt
   | tei_biblScope
   | tei_model.global)*
tei_series.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_author =
  
  ## in a bibliographic reference, contains the name of the author(s),
  ## personal or corporate,
  ## of a work; the primary statement of responsibility for any
  ## bibliographic item. 
  element author { tei_author.content, tei_author.attributes }
tei_author.content = tei_macro.phraseSeq
tei_author.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_editor =
  
  ## secondary statement of responsibility for a
  ## bibliographic item, for example the name of an individual, institution
  ## or organization, (or of several such) acting as editor, compiler,
  ## translator, etc. 
  element editor { tei_editor.content, tei_editor.attributes }
tei_editor.content = tei_macro.phraseSeq
tei_editor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the nature of the intellectual responsibility
  [ a1:defaultValue = "editor" ]
  attribute role { tei_data.enumerated }?,
  empty
tei_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for someone responsible
  ##   for the intellectual content of a text, edition, recording, or
  ##   series, where the specialized elements for authors, editors, etc. do
  ##   not suffice or do not apply.
  element respStmt { tei_respStmt.content, tei_respStmt.attributes }
tei_respStmt.content =
  (tei_resp+, tei_model.nameLike.agent+)
  | (tei_model.nameLike.agent+, tei_resp+)
tei_respStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_resp =
  
  ## contains a phrase describing the nature of a person's
  ##   intellectual responsibility.
  element resp { tei_resp.content, tei_resp.attributes }
tei_resp.content = tei_macro.phraseSeq
tei_resp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_title =
  
  ## contains the full title of a work of any kind.
  element title { tei_title.content, tei_title.attributes }
tei_title.content = tei_macro.paraContent
tei_title.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the bibliographic level for a title, that is,
  ##	whether it identifies  an article, book, journal,
  ## series, or unpublished material.
  attribute level {
    
    ## (analytic title (article, poem, or other item published as
    ##           part of a larger item)
    ##     ) 
    "a"
    | 
      ## (monographic title (book, collection, or other item published
      ##           as a distinct item, including single volumes of multi-volume
      ##           works)
      ##     ) 
      "m"
    | 
      ## (journal title
      ##     ) 
      "j"
    | 
      ## (series title
      ##     ) 
      "s"
    | 
      ## (title of unpublished material (including theses and
      ##           dissertations unless published by a commercial press)) 
      "u"
  }?,
  
  ## classifies the title according to some convenient typology.
  ## Sample values include: 1] main (main title
  ##     ); 2] sub (subtitle, title of part
  ##     ); 3] alt (alternate title, often in another language,
  ##                            by which the work is also known
  ##     ); 4] short (abbreviated form of title); 5] desc (descriptive paraphrase of the work functioning as a title)
  attribute type { tei_data.enumerated }?,
  empty
tei_meeting =
  
  ## in bibliographic references,
  ## contains a description of the meeting or conference from which
  ## the bibliographic item derives.
  element meeting { tei_meeting.content, tei_meeting.attributes }
tei_meeting.content = tei_macro.paraContent
tei_meeting.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_imprint =
  
  ## groups information relating to the publication or distribution
  ##   of a bibliographic item.
  element imprint { tei_imprint.content, tei_imprint.attributes }
tei_imprint.content =
  ((tei_model.imprintPart | tei_model.dateLike), tei_model.global*)+
tei_imprint.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_publisher =
  
  ## provides the name of the organization responsible for
  ## the publication or distribution of a bibliographic item.
  element publisher { tei_publisher.content, tei_publisher.attributes }
tei_publisher.content = tei_macro.phraseSeq
tei_publisher.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_biblScope =
  
  ## (scope of citation) defines the scope of a bibliographic reference, for example as a
  ## list of pagenumbers, or a named subdivision of a larger work.
  element biblScope { tei_biblScope.content, tei_biblScope.attributes }
tei_biblScope.content = tei_macro.phraseSeq
tei_biblScope.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the type of information conveyed by the element, e.g.
  ## pages, volume.
  ## Suggested values include: 1] vol (the element contains a volume number.); 2] issue (the element contains an issue number, or volume and
  ## issue numbers.); 3] pp (the element contains a page number or page range.); 4] cap (the element contains a chapter indication (number
  ## and/or title)); 5] part (the element identifies a part of a book or collection.)
  attribute type { tei_data.enumerated }?,
  empty
tei_pubPlace =
  
  ## contains the name of the place where a bibliographic item was
  ## published.
  element pubPlace { tei_pubPlace.content, tei_pubPlace.attributes }
tei_pubPlace.content = tei_macro.phraseSeq
tei_pubPlace.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  empty
tei_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse.
  element l { tei_l.content, tei_l.attributes }
tei_l.content = tei_macro.paraContent
tei_l.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.enjamb.attribute.enjamb,
  
  ## specifies whether or not the line is metrically complete. 
  [ a1:defaultValue = "N" ]
  attribute part {
    
    ## (the line is metrically incomplete) 
    "Y"
    | 
      ## (either the line is complete, or no claim is made as to its
      ## completeness) 
      "N"
    | 
      ## (the initial part of an incomplete line) 
      "I"
    | 
      ## (a medial part of an incomplete line) 
      "M"
    | 
      ## (the final part of an incomplete line) 
      "F"
  }?,
  empty
tei_lg =
  
  ## (line group) contains a group of verse lines functioning as a formal unit,
  ## e.g. a stanza, refrain, verse paragraph, etc.
  element lg { tei_lg.content, tei_lg.attributes }
tei_lg.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_model.lLike | tei_lg),
  (tei_model.lLike | tei_lg | tei_model.global)*,
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_lg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
tei_sp =
  
  ## (speech) An individual speech in a performance text, or a passage
  ##	  presented as such in a prose or verse text.
  element sp { tei_sp.content, tei_sp.attributes }
tei_sp.content =
  tei_model.global*,
  (tei_speaker, tei_model.global*)?,
  ((tei_model.lLike
    | tei_lg
    | tei_model.pLike
    | tei_model.blockLike
    | tei_model.stageLike),
   tei_model.global*)+
tei_sp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  empty
tei_speaker =
  
  ## A specialized form of heading or label, giving the name of
  ## one or more speakers in a dramatic text or fragment.
  element speaker { tei_speaker.content, tei_speaker.attributes }
tei_speaker.content = tei_macro.phraseSeq
tei_speaker.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or
  ## fragment.
  element stage { tei_stage.content, tei_stage.attributes }
tei_stage.content = tei_macro.specialPara
tei_stage.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the kind of stage direction.
  ## Suggested values include: 1] setting (describes a setting.); 2] entrance (describes an entrance.); 3] exit (describes an exit.); 4] business (describes stage business.); 5] novelistic (is a narrative, motivating stage direction.); 6] delivery (describes how a character speaks.); 7] modifier (gives some detail about a character.); 8] location (describes a location.); 9] mixed (more than one of the above)
  attribute type { tei_data.enumerated }?,
  empty
tei_teiCorpus =
  
  ## (TEI corpus) contains the whole of a TEI encoded corpus, comprising a
  ## single corpus header and one or more TEI elements, each containing
  ## a single text header and a text.
  element teiCorpus { tei_teiCorpus.content, tei_teiCorpus.attributes }
tei_teiCorpus.content = tei_teiHeader, (tei_TEI | tei_teiCorpus)+
tei_teiCorpus.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## The version of the TEI scheme
  [ a1:defaultValue = "5.0" ] attribute version { xsd:decimal }?,
  empty
tei_s =
  
  ## (s-unit) contains a sentence-like division of a text.
  element s { tei_s.content, tei_s.attributes }
tei_s.content = tei_macro.phraseSeq
tei_s.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
tei_cl =
  
  ## (clause) represents a grammatical clause.
  element cl { tei_cl.content, tei_cl.attributes }
tei_cl.content = tei_macro.phraseSeq
tei_cl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
tei_phr =
  
  ## (phrase) represents a grammatical phrase.
  element phr { tei_phr.content, tei_phr.attributes }
tei_phr.content = tei_macro.phraseSeq
tei_phr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
tei_w =
  
  ## (word) represents a grammatical (not necessarily orthographic) word.
  element w { tei_w.content, tei_w.attributes }
tei_w.content =
  (text
   | tei_model.gLike
   | tei_model.blockLike
   | tei_w
   | tei_m
   | tei_c
   | tei_model.global)*
tei_w.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  
  ## identifies the word's lemma (dictionary entry form).
  attribute lemma { tei_data.word }?,
  empty
tei_m =
  
  ## (morpheme) represents a grammatical morpheme.
  element m { tei_m.content, tei_m.attributes }
tei_m.content =
  (text
   | tei_model.gLike
   | tei_model.blockLike
   | tei_c
   | tei_model.global)*
tei_m.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  
  ## identifies the morpheme's base form.
  attribute baseForm { tei_data.word }?,
  empty
tei_c =
  
  ## (character) represents a character.
  element c { tei_c.content, tei_c.attributes }
tei_c.content = tei_macro.xtext
tei_c.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
tei_span =
  
  ## (span) associates an interpretative annotation directly with a span
  ##   of text.
  element span { tei_span.content, tei_span.attributes }
tei_span.content = tei_macro.phraseSeq
tei_span.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.interpLike.attribute.resp,
  att.interpLike.attribute.type,
  att.interpLike.attribute.inst,
  
  ## specifies the beginning of the passage being annotated; if
  ##       not accompanied by a to attribute, then specifies the
  ##       entire passage.
  attribute from { tei_data.pointer },
  
  ## specifies the end of the passage being annotated.
  attribute to { tei_data.pointer }?,
  empty
tei_spanGrp =
  
  ## (span group) collects together span tags.
  element spanGrp { tei_spanGrp.content, tei_spanGrp.attributes }
tei_spanGrp.content = tei_span*
tei_spanGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.interpLike.attribute.resp,
  att.interpLike.attribute.type,
  att.interpLike.attribute.inst,
  empty
tei_interp =
  
  ## (interpretation) summarizes a specific interpretative annotation which can be
  ## linked to a span of text.
  element interp { tei_interp.content, tei_interp.attributes }
tei_interp.content = tei_macro.phraseSeq
tei_interp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.interpLike.attribute.resp,
  att.interpLike.attribute.type,
  att.interpLike.attribute.inst,
  empty
tei_interpGrp =
  
  ## (interpretation group) collects together a set of related interpretations which share
  ## responsibility or type.
  element interpGrp { tei_interpGrp.content, tei_interpGrp.attributes }
tei_interpGrp.content = tei_interp+
tei_interpGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.interpLike.attribute.resp,
  att.interpLike.attribute.type,
  att.interpLike.attribute.inst,
  empty
tei_att.global.analytic.attributes =
  att.global.analytic.attribute.ana, empty
att.global.analytic.attribute.ana =
  
  ## indicates one or more elements containing interpretations of the
  ## element on which the ana attribute appears.
  attribute ana {
    list { tei_data.pointer+ }
  }?
tei_certainty =
  
  ## indicates the degree of certainty or uncertainty associated
  ##   with some aspect of the text markup. 
  element certainty { tei_certainty.content, tei_certainty.attributes }
tei_certainty.content = tei_macro.glossSeq
tei_certainty.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## points at the elements whose markup is
  ##       uncertain.
  attribute target {
    list { tei_data.pointer+ }
  },
  
  ## indicates the precise location of the uncertainty in the
  ##	markup: applicability of the element, precise position of the
  ##	start- or end-tag, value of a specific attribute,
  ##	etc.
  ## Suggested values include: 1] gi (uncertain whether the element used actually applies
  ##	    to the passage.); 2] startloc (start-tag may not be correctly located.); 3] endloc (end-tag may not be correctly located.); 4] location (both the start-tag and the end-tag may not be
  ##	    correctly located.); 5] att.name (the value given for the attribute name is
  ##	    uncertain.); 6] transcribedContent (the content of the element may not be a correct
  ##	    transcription of the source text.); 7] suppliedContent (the content of the element may not have been
  ##	    correctly supplied by the reader, e.g. as in the cases of
  ##	    corr and abbrev elements.)
  attribute locus { tei_data.enumerated },
  
  ## provides an alternative value for the aspect of the markup in
  ## question—an alternative generic identifier, transcription,
  ## or attribute value, or the identifier of an anchor element (to
  ## indicate an alternative starting or ending location).  If an
  ## assertedValue is given, the confidence level specified by
  ## degree applies to the alternative markup specified by
  ## assertedValue; if none is given, it applies to the markup
  ## in the text.
  attribute assertedValue {
    tei_data.pointer | tei_data.name | tei_data.word
  }?,
  
  ## indicates conditions assumed in the assignment of a degree
  ##       of confidence.
  attribute given {
    list { tei_data.pointer+ }
  }?,
  
  ## indicates the degree of confidence assigned to the aspect
  ## of the markup named by the locus attribute.
  attribute degree { tei_data.probability }?,
  empty
tei_respons =
  
  ## (responsibility) identifies the individual(s) responsible for some aspect of the
  ## markup of particular element(s).
  element respons { tei_respons.content, tei_respons.attributes }
tei_respons.content = tei_macro.glossSeq
tei_respons.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives the identifier(s) of the element(s) for which some
  ## aspect of the responsibility is being
  ## assigned.
  attribute target {
    list { tei_data.pointer+ }
  },
  
  ## indicates the specific aspect of the markup for which
  ## responsibility is being assigned.
  ## Suggested values include: 1] gi (responsibility for the claim that the element is of the
  ## type indicated by the markup); 2] location (responsibility for the claim that the element
  ## begins and ends where indicated); 3] startloc (responsibility for the claim that the element
  ## begins where indicated); 4] endloc (responsibility for the claim that the element
  ## ends where indicated); 5] att.name (responsibility for the claim that the
  ## name attribute has the value given in the markup); 6] transcribedContent (responsibility for the transcription of
  ## the element content); 7] suppliedContent (responsibility for the contents supplied by
  ## the encoder (corrections, expansions of abbreviations, etc.))
  attribute locus { tei_data.enumerated },
  
  ## identifies the individual or agency responsible for the indicated
  ## aspect of the electronic text.
  attribute resp { tei_data.pointer },
  empty
tei_firstLang =
  
  ## (First language) specifies the first language of a participant.
  element firstLang { tei_firstLang.content, tei_firstLang.attributes }
tei_firstLang.content = tei_macro.phraseSeq
tei_firstLang.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_textDesc =
  
  ## (text description) provides a description of a text in terms of its
  ## situational parameters.
  element textDesc { tei_textDesc.content, tei_textDesc.attributes }
tei_textDesc.content = tei_model.textDescPart_sequence, tei_purpose+
tei_textDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_particDesc =
  
  ## (participation description) describes the identifiable speakers, voices, or other participants
  ## in a linguistic interaction. 
  element particDesc {
    tei_particDesc.content, tei_particDesc.attributes
  }
tei_particDesc.content = tei_model.pLike+ | tei_model.personLike+
tei_particDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_settingDesc =
  
  ## (setting description) describes the setting or settings within which a language
  ## interaction takes place, either as a prose description or as a
  ## series of setting elements.
  element settingDesc {
    tei_settingDesc.content, tei_settingDesc.attributes
  }
tei_settingDesc.content = tei_model.pLike+ | tei_setting+
tei_settingDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_channel =
  
  ## (primary channel) describes the medium or channel by which a text is delivered or
  ## experienced. For a written text, this might be print, manuscript, e-mail, etc.;
  ## for a spoken one, radio, telephone, face-to-face, etc.
  element channel { tei_channel.content, tei_channel.attributes }
tei_channel.content = tei_macro.phraseSeq
tei_channel.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the mode of this channel with respect to speech and
  ##          writing.
  ##    
  [ a1:defaultValue = "x" ]
  attribute mode {
    
    ## (spoken
    ##    ) 
    "s"
    | 
      ## (written
      ##    ) 
      "w"
    | 
      ## (spoken to be written (e.g. dictation)
      ##    ) 
      "sw"
    | 
      ## (written to be spoken (e.g. a script)
      ##    ) 
      "ws"
    | 
      ## (mixed modes
      ##    ) 
      "m"
    | 
      ## (unknown or inapplicable
      ##    ) 
      "x"
  }?,
  empty
tei_constitution =
  
  ## describes the internal composition of a text or text sample,
  ## for example
  ## as fragmentary, complete, etc.
  element constitution {
    tei_constitution.content, tei_constitution.attributes
  }
tei_constitution.content = tei_macro.phraseSeq
tei_constitution.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies how the text was constituted.
  ##    
  [ a1:defaultValue = "single" ]
  attribute type {
    
    ## (a single complete text
    ##     ) 
    "single"
    | 
      ## (a text made by combining several smaller
      ##              items, each individually complete
      ##     ) 
      "composite"
    | 
      ## (a text made by combining several smaller, not
      ##              necessarily complete, items
      ##     ) 
      "frags"
    | 
      ## (composition unknown or unspecified
      ##    ) 
      "unknown"
  }?,
  empty
tei_derivation =
  
  ## describes the nature and extent of originality of this text.
  element derivation {
    tei_derivation.content, tei_derivation.attributes
  }
tei_derivation.content = tei_macro.phraseSeq
tei_derivation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the derivation of the text.
  ##    
  ## Sample values include: 1] original (text is original
  ##         ); 2] revision (text is a revision of some other text
  ##         ); 3] translation (text is a translation of some other text
  ##         ); 4] abridgment (text is an abridged version of some other text
  ##         ); 5] plagiarism (text is plagiarized from some other text
  ##         ); 6] traditional (text has no obvious source but is one of a
  ##         number derived from some common ancestor
  ##     )
  attribute type { tei_data.enumerated }?,
  empty
tei_domain =
  
  ## (Domain of use) describes the most important social context in which the text was
  ## realized or for which it is intended, for example private vs. public,
  ## education, religion, etc.
  element domain { tei_domain.content, tei_domain.attributes }
tei_domain.content = tei_macro.phraseSeq
tei_domain.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the domain of use.
  ##    
  ## Sample values include: 1] art (art and entertainment
  ##     ); 2] domestic (domestic and private
  ##     ); 3] religious (religious and ceremonial
  ##     ); 4] business (business and work place
  ##     ); 5] education (education
  ##     ); 6] govt (government and law
  ##     ); 7] public (other forms of public context
  ##    )
  attribute type { tei_data.enumerated }?,
  empty
tei_factuality =
  
  ## describes the extent to which the text may be regarded as
  ## imaginative or non-imaginative, that is, as describing a fictional
  ## or a non-fictional world. 
  element factuality {
    tei_factuality.content, tei_factuality.attributes
  }
tei_factuality.content = tei_macro.phraseSeq
tei_factuality.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the factuality of the text.
  ##    
  attribute type {
    
    ## (the text is to be regarded as entirely imaginative
    ##   ) 
    "fiction"
    | 
      ## (the text is to be regarded as entirely informative or factual
      ##   ) 
      "fact"
    | 
      ## (the text contains a mixture of fact and fiction
      ##   ) 
      "mixed"
    | 
      ## (the fiction/fact distinction is not regarded
      ##     as helpful or appropriate to this text
      ##    ) 
      "inapplicable"
  }?,
  empty
tei_interaction =
  
  ## describes the extant, cardinality and nature of any interaction
  ## among those producing and experiencing the text, for example in the
  ## form of response or interjection, commentary etc.
  element interaction {
    tei_interaction.content, tei_interaction.attributes
  }
tei_interaction.content = tei_macro.phraseSeq
tei_interaction.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the degree of interaction between
  ##   active and passive participants in the text. 
  attribute type {
    
    ## (no interaction of any kind, e.g. a monologue ) 
    "none"
    | 
      ## (some degree of interaction, e.g. a monologue with set responses ) 
      "partial"
    | 
      ## (complete interaction, e.g. a face to face conversation ) 
      "complete"
    | 
      ## (this parameter is inappropriate or inapplicable in this case ) 
      "inapplicable"
  }?,
  
  ## specifies the number of active participants
  ##    (or addressors) producing parts of the text. 
  ## Suggested values include: 1] singular (a single addressor ); 2] plural (many addressors ); 3] corporate (a corporate addressor ); 4] unknown (number of addressors unknown or unspecifiable )
  attribute active { tei_data.enumerated }?,
  
  ## specifies the number of passive participants
  ##    (or addressees) to whom a text is directed
  ##    or in whose presence it is created or performed.
  ##    
  ## Suggested values include: 1] self (text is addressed to the originator e.g. a diary ); 2] single (text is addressed to one other person e.g. a personal letter ); 3] many (text is addressed to a countable number of others
  ##     e.g. a conversation in which all participants are identified ); 4] group (text is addressed to an undefined but fixed
  ##     number of participants  e.g. a lecture ); 5] world (text is addressed to an undefined and indeterminately
  ##     large number e.g. a published book )
  attribute passive { tei_data.enumerated }?,
  empty
tei_preparedness =
  
  ## describes the extent to which a text may be regarded as
  ## prepared or spontaneous. 
  element preparedness {
    tei_preparedness.content, tei_preparedness.attributes
  }
tei_preparedness.content = tei_macro.phraseSeq
tei_preparedness.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## a keyword characterizing the type of preparedness.
  ##    
  ## Sample values include: 1] none (spontaneous or unprepared
  ##         ); 2] scripted (follows a script
  ##         ); 3] formulaic (follows a predefined set of conventions
  ##         ); 4] revised (polished or revised before presentation
  ##    )
  attribute type { tei_data.enumerated }?,
  empty
tei_purpose =
  
  ## characterizes a single purpose or communicative function of the
  ## text.
  element purpose { tei_purpose.content, tei_purpose.attributes }
tei_purpose.content = tei_macro.phraseSeq
tei_purpose.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies a particular kind of purpose.
  ##    
  ## Suggested values include: 1] persuade (didactic, advertising, propaganda, etc.
  ##   ); 2] express (self expression, confessional, etc.
  ##   ); 3] inform (convey information, educate, etc.
  ##   ); 4] entertain (amuse, entertain, etc.
  ##    )
  attribute type { tei_data.enumerated }?,
  
  ## specifies the extent to which this purpose predominates.
  attribute degree {
    
    ## (this purpose is predominant
    ##   ) 
    "high"
    | 
      ## (this purpose is intermediate
      ##   ) 
      "medium"
    | 
      ## (this purpose is weak
      ##   ) 
      "low"
    | 
      ## (extent unknown
      ##    ) 
      "unknown"
  }?,
  empty
tei_setting =
  
  ## (setting) describes one particular setting in which a language
  ##   interaction takes place.
  element setting { tei_setting.content, tei_setting.attributes }
tei_setting.content =
  tei_model.pLike+
  | (tei_model.nameLike.agent
     | tei_model.dateLike
     | tei_model.settingPart)*
tei_setting.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  empty
tei_locale =
  
  ## contains a brief informal description of the nature of a
  ## place for example a room, a restaurant, a park bench etc.
  element locale { tei_locale.content, tei_locale.attributes }
tei_locale.content = tei_macro.phraseSeq
tei_locale.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_activity =
  
  ## contains a brief informal description of what a participant in a
  ## language interaction is doing other than speaking, if anything.
  element activity { tei_activity.content, tei_activity.attributes }
tei_activity.content = tei_macro.phraseSeq
tei_activity.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_teifsd =
  
  ## (feature system declaration) contains a feature system declaration.
  element teifsd { tei_teifsd.content, tei_teifsd.attributes }
tei_teifsd.content = tei_teiHeader, tei_fsDecl+
tei_teifsd.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_fsDecl =
  
  ## (feature structure declaration) declares one type of feature structure.
  element fsDecl { tei_fsDecl.content, tei_fsDecl.attributes }
tei_fsDecl.content = tei_fsDescr?, tei_fDecl+, tei_fsConstraints?
tei_fsDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives a name for the type of feature structure being declared.
  attribute type { tei_data.enumerated },
  
  ## gives the name of one or more typed feature structures
  ##	from which this type inherits feature specifications and
  ##	constraints; if this type includes a feature specification
  ##	with the same name as that of any of those specified by this
  ##	attribute, or if more than one specification of the same name
  ##	is inherited, then the set of possible values is defined by
  ##	unification. Similarly, the set of constraints applicable is
  ##	derived by combining those specified explicitly within this
  ##	element with those implied by the baseTypes
  ##	attribute. When no baseType is specified, no
  ##	feature specification or constraint is inherited.
  attribute baseTypes {
    list { tei_data.name+ }
  }?,
  empty
tei_fsDescr =
  
  ## (feature system description (in FSD)) describes in prose what is represented by the type of feature
  ## structure declared in the enclosing fsDecl.
  element fsDescr { tei_fsDescr.content, tei_fsDescr.attributes }
tei_fsDescr.content = tei_macro.paraContent
tei_fsDescr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_fDecl =
  
  ## (feature declaration) declares a single feature, specifying its name, organization,
  ## range of allowed values, and optionally its default value.
  element fDecl { tei_fDecl.content, tei_fDecl.attributes }
tei_fDecl.content = tei_fDescr?, tei_vRange, tei_vDefault?
tei_fDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the name of the feature being declared; matches the
  ## name attribute of f elements in the text.
  attribute name { tei_data.name },
  
  ## indicates whether or not the value of this feature may
  ##	be present.
  [ a1:defaultValue = "true" ] attribute optional { xsd:boolean }?,
  
  ## specifies the organizing discipline of the feature value.
  [ a1:defaultValue = "unit" ]
  attribute org {
    
    ## (unitary atomic value) 
    "unit"
    | 
      ## (set value (unordered, no duplicates)) 
      "set"
    | 
      ## (bag value (unordered, may have duplicates)) 
      "bag"
    | 
      ## (list value (ordered, may have duplicates)) 
      "list"
  }?,
  empty
tei_fDescr =
  
  ## (feature description (in FSD)) describes in prose what is represented by the feature being
  ## declared and its values.
  element fDescr { tei_fDescr.content, tei_fDescr.attributes }
tei_fDescr.content = tei_macro.paraContent
tei_fDescr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vRange =
  
  ## (value range) defines the range of allowed values for a feature, in the form of
  ## an fs, vAlt, or primitive value;
  ## for the value of an f to be valid, it must be
  ## subsumed by the specified range; if the f
  ## contains multiple values (as sanctioned by the org attribute),
  ## then each value must be subsumed by the vRange.
  element vRange { tei_vRange.content, tei_vRange.attributes }
tei_vRange.content = tei_model.featureVal
tei_vRange.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vDefault =
  
  ## (value default) declares the default value to be supplied when a feature structure
  ## does not contain an instance of f for this name; if
  ## unconditional, it is specified as one (or, depending on the value of
  ## the org attribute of the enclosing fDecl) more
  ## fs elements or primitive values;
  ## if conditional, it is specified as
  ## one or more if elements; if no default is specified, or no
  ## condition matches, the value none is assumed.
  element vDefault { tei_vDefault.content, tei_vDefault.attributes }
tei_vDefault.content = tei_model.featureVal+ | tei_if+
tei_vDefault.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_if =
  
  ## defines a conditional default value for a feature; the condition
  ## is specified as a feature structure, and is met if it
  ## subsumes the feature structure in the text for which a
  ## default value is sought.
  element if { tei_if.content, tei_if.attributes }
tei_if.content = (tei_fs | tei_f), tei_then, tei_model.featureVal
tei_if.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_then =
  
  ## separates the condition from the default in an if, or
  ## the antecedent and the consequent in a cond element.
  element then { tei_then.content, tei_then.attributes }
tei_then.content = empty
tei_then.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_fsConstraints =
  
  ## (feature-structure constraints) specifies constraints on the content of well formed feature
  ## structures.
  element fsConstraints {
    tei_fsConstraints.content, tei_fsConstraints.attributes
  }
tei_fsConstraints.content = (tei_cond | tei_bicond)*
tei_fsConstraints.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_cond =
  
  ## (conditional feature-structure constraint) defines a conditional feature-structure constraint; the consequent
  ## and the antecedent are specified as feature structures or
  ## feature-structure groups; the constraint is satisfied if both the
  ## antecedent and the consequent subsume a given feature
  ## structure, or if the antecedent does not.
  element cond { tei_cond.content, tei_cond.attributes }
tei_cond.content = (tei_fs | tei_f), tei_then, (tei_fs | tei_f)
tei_cond.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_bicond =
  
  ## (bi-conditional feature-structure constraint) defines a biconditional feature-structure constraint; both
  ## consequent and antecedent are specified as feature structures or groups
  ## of feature structures; the constraint is satisfied if both
  ## subsume a given feature structure, or if both do not.
  element bicond { tei_bicond.content, tei_bicond.attributes }
tei_bicond.content = (tei_fs | tei_f), tei_iff, (tei_fs | tei_f)
tei_bicond.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_iff =
  
  ## separates the condition from the consequence in a bicond
  ## element.
  element iff { tei_iff.content, tei_iff.attributes }
tei_iff.content = empty
tei_iff.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_superEntry =
  
  ## groups successive entries for a set of homographs.
  element superEntry {
    tei_superEntry.content, tei_superEntry.attributes
  }
tei_superEntry.content = (tei_form?, tei_entry+) | tei_dictScrap
tei_superEntry.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.entryLike.attribute.type,
  att.entryLike.attribute.sortKey,
  empty
tei_entry =
  
  ## contains a reasonably well-structured dictionary entry.
  element entry { tei_entry.content, tei_entry.attributes }
tei_entry.content =
  (tei_hom | tei_sense | tei_model.entryParts.top | tei_model.global)+
tei_entry.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.entryLike.attribute.type,
  att.entryLike.attribute.sortKey,
  empty
tei_entryFree =
  
  ## contains a dictionary entry which does not necessarily conform to the constraints imposed
  ##         by the entry element.
  element entryFree { tei_entryFree.content, tei_entryFree.attributes }
tei_entryFree.content =
  (text
   | tei_model.gLike
   | tei_model.entryParts
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global)*
tei_entryFree.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.entryLike.attribute.type,
  att.entryLike.attribute.sortKey,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_hom =
  
  ## (homograph) groups information relating to one homograph within an entry.
  element hom { tei_hom.content, tei_hom.attributes }
tei_hom.content =
  (tei_sense | tei_model.entryParts.top | tei_model.global)*
tei_hom.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_sense =
  
  ## (sense information group) groups together all information relating to one word sense in a dictionary entry
  ##         (definitions, examples, translation equivalents, etc.)
  element sense { tei_sense.content, tei_sense.attributes }
tei_sense.content =
  (text
   | tei_model.gLike
   | tei_sense
   | tei_model.entryParts.top
   | tei_model.phrase
   | tei_model.global)*
tei_sense.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## gives the nesting depth of this sense.
  attribute level { tei_data.numeric }?,
  empty
tei_dictScrap =
  
  ## encloses a part of a dictionary entry in which other phrase-level dictionary elements are
  ##         freely combined.
  element dictScrap { tei_dictScrap.content, tei_dictScrap.attributes }
tei_dictScrap.content =
  (text
   | tei_model.gLike
   | tei_model.entryParts
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global)*
tei_dictScrap.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_form =
  
  ## (form information group) groups all the information on the written and spoken forms of one headword.
  element form { tei_form.content, tei_form.attributes }
tei_form.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.formPart
   | tei_model.global)*
tei_form.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies form as simple, compound, etc.
  ## Suggested values include: 1] simple (single free lexical item); 2] lemma (the headword itself); 3] variant (a variant form); 4] compound (word formed from simple lexical items); 5] derivative (word derived from headword); 6] inflected (word in other than usual dictionary form); 7] phrase (multiple-word lexical item)
  attribute type { tei_data.enumerated }?,
  empty
tei_orth =
  
  ## (orthographic form) gives the orthographic form of a dictionary headword.
  element orth { tei_orth.content, tei_orth.attributes }
tei_orth.content = tei_macro.paraContent
tei_orth.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## gives the type of spelling.
  attribute type { tei_data.enumerated }?,
  
  ## gives the extent of the orthographic information provided.
  ## Sample values include: 1] full (full form); 2] pref (prefix); 3] suff (suffix); 4] part (partial)
  [ a1:defaultValue = "full" ]
  attribute extent { tei_data.enumerated }?,
  empty
tei_pron =
  
  ## (pronunciation) contains the pronunciation(s) of the word.
  element pron { tei_pron.content, tei_pron.attributes }
tei_pron.content = tei_macro.paraContent
tei_pron.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## indicates whether the pronunciation is for whole word or part. 
  ## Sample values include: 1] full (full form); 2] pref (prefix); 3] suff (suffix); 4] part (partial)
  [ a1:defaultValue = "full" ]
  attribute extent { tei_data.enumerated }?,
  
  ## indicates what notation is used for the pronunciation, if more than one occurs in
  ##                 the machine-readable dictionary. 
  attribute notation { tei_data.enumerated }?,
  empty
tei_hyph =
  
  ## (hyphenation) contains a hyphenated form of a dictionary headword, or hyphenation information in some
  ##         other form.
  element hyph { tei_hyph.content, tei_hyph.attributes }
tei_hyph.content = tei_macro.paraContent
tei_hyph.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_syll =
  
  ## (syllabification) contains the syllabification of the headword.
  element syll { tei_syll.content, tei_syll.attributes }
tei_syll.content = tei_macro.paraContent
tei_syll.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_stress =
  
  ## contains the stress pattern for a dictionary headword, if given separately.
  element stress { tei_stress.content, tei_stress.attributes }
tei_stress.content = tei_macro.paraContent
tei_stress.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_gram =
  
  ## (grammatical information) within an entry in a dictionary or a terminological data file, contains grammatical
  ##         information relating to a term, word, or form.
  element gram { tei_gram.content, tei_gram.attributes }
tei_gram.content = tei_macro.paraContent
tei_gram.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies the grammatical information given according to some convenient typology
  ##                 — in the case of terminological information, preferably the dictionary of
  ##                 data element types specified in ISO WD 12 620.
  ## Sample values include: 1] pos (part of speech (any of the word classes to which a word may be assigned
  ##                         in a given language, based on form, meaning, or a combination of features,
  ##                         e.g. noun, verb, adjective, etc.)); 2] gen (gender (formal classification by which nouns and pronouns, and often
  ##                         accompanying modifiers, are grouped and inflected, or changed in form, so as
  ##                         to control certain syntactic relationships)); 3] num (number (e.g. singular, plural, dual, ...)); 4] animate (animate or inanimate); 5] proper (proper noun or common noun)
  attribute type { tei_data.enumerated }?,
  empty
tei_gen =
  
  ## (gender) identifies the morphological gender of a lexical item, as given in the dictionary.
  element gen { tei_gen.content, tei_gen.attributes }
tei_gen.content = tei_macro.paraContent
tei_gen.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_number =
  
  ## indicates grammatical number associated with a form, as given in a dictionary.
  element number { tei_number.content, tei_number.attributes }
tei_number.content = tei_macro.paraContent
tei_number.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_case =
  
  ## contains grammatical case information given by a dictionary for a given form.
  element case { tei_case.content, tei_case.attributes }
tei_case.content = tei_macro.paraContent
tei_case.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_per =
  
  ## (person) contains an indication of the grammatical person (1st, 2nd, 3rd, etc.) associated with a
  ##         given inflected form in a dictionary.
  element per { tei_per.content, tei_per.attributes }
tei_per.content = tei_macro.paraContent
tei_per.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_tns =
  
  ## (tense) indicates the grammatical tense associated with a given inflected form in a dictionary.
  element tns { tei_tns.content, tei_tns.attributes }
tei_tns.content = tei_macro.paraContent
tei_tns.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_mood =
  
  ## contains information about the grammatical mood of verbs (e.g. indicative, subjunctive, imperative)
  element mood { tei_mood.content, tei_mood.attributes }
tei_mood.content = tei_macro.paraContent
tei_mood.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_iType =
  
  ## (inflectional class) indicates the inflectional class associated with a lexical item.
  element iType { tei_iType.content, tei_iType.attributes }
tei_iType.content = tei_macro.paraContent
tei_iType.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## indicates the type of indicator used to specify the inflection class, when it is
  ##                 necessary to distinguish between the usual abbreviated indications (e.g.
  ##                 inv) and other kinds of indicators, such as special codes
  ##                 referring to conjugation patterns, etc.
  ## Sample values include: 1] abbrev (abbreviated indicator); 2] verbTable (coded reference to a table of verbs)
  attribute type { tei_data.enumerated }?,
  empty
tei_gramGrp =
  
  ## (grammatical information group) groups morpho-syntactic information about a lexical item, e.g. pos, gen, number, case, or
  ##         iType (inflectional class).
  element gramGrp { tei_gramGrp.content, tei_gramGrp.attributes }
tei_gramGrp.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.gramPart
   | tei_model.global)*
tei_gramGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_pos =
  
  ## (part of speech) indicates the part of speech assigned to a dictionary headword (noun, verb, adjective, etc.)
  element pos { tei_pos.content, tei_pos.attributes }
tei_pos.content = tei_macro.paraContent
tei_pos.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_subc =
  
  ## (subcategorization) contains subcategorization information (transitive/intransitive, countable/non-countable, etc.)
  element subc { tei_subc.content, tei_subc.attributes }
tei_subc.content = tei_macro.paraContent
tei_subc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_colloc =
  
  ## (collocate) contains a collocate of the headword.
  element colloc { tei_colloc.content, tei_colloc.attributes }
tei_colloc.content = tei_macro.paraContent
tei_colloc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies the collocation, using any convenient typology.
  attribute type { tei_data.word }?,
  empty
tei_def =
  
  ## (definition) contains definition text in a dictionary entry.
  element def { tei_def.content, tei_def.attributes }
tei_def.content = tei_macro.paraContent
tei_def.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_tr =
  
  ## (translation equivalent) contains a translation of the headword or an example.
  element tr { tei_tr.content, tei_tr.attributes }
tei_tr.content = tei_macro.paraContent
tei_tr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_trans =
  
  ## (translation information) contains translation text and related information (within an entry in a multilingual dictionary).
  element trans { tei_trans.content, tei_trans.attributes }
tei_trans.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.entryParts
   | tei_model.global)*
tei_trans.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_etym =
  
  ## (etymology) encloses the etymological information in a dictionary entry.
  element etym { tei_etym.content, tei_etym.attributes }
tei_etym.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_usg
   | tei_lbl
   | tei_def
   | tei_trans
   | tei_tr
   | tei_model.morphLike
   | tei_dicteg
   | tei_xr
   | tei_model.global)*
tei_etym.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_lang =
  
  ## (language name) name of a language mentioned in etymological or other linguistic discussion.
  element lang { tei_lang.content, tei_lang.attributes }
tei_lang.content = tei_macro.paraContent
tei_lang.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_dicteg =
  
  ## (example (exempli gratia)) (in a dictionary) contains an example text containing at least one occurrence of the word
  ##         form, used in the sense being described; examples may be quoted from (named) authors or contrived.
  element dicteg { tei_dicteg.content, tei_dicteg.attributes }
tei_dicteg.content =
  (tei_q | tei_quote | tei_cit | tei_model.entryParts)+
tei_dicteg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_usg =
  
  ## (usage) contains usage information in a dictionary entry.
  element usg { tei_usg.content, tei_usg.attributes }
tei_usg.content = tei_macro.paraContent
tei_usg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies the usage information using any convenient typology.
  ## Sample values include: 1] geo (geographic area); 2] time (temporal, historical era (archaic, old, etc.)); 3] dom (domain); 4] reg (register); 5] style (style (figurative, literal, etc.)); 6] plev (preference level (chiefly, usually, etc.)); 7] lang (lang (language for foreign words, spellings pronunciations, etc.)); 8] gram (grammatical usage); 9] syn (synonym given to show use); 10] hyper (hypernym given to show usage); 11] colloc (collocation given to show usage); 12] comp (typical complement); 13] obj (typical object); 14] subj (typical subject); 15] verb (typical verb); 16] hint (unclassifiable piece of information to guide sense choice)
  attribute type { tei_data.enumerated }?,
  empty
tei_lbl =
  
  ## (label) in dictionaries, contains a label for a form, example, translation, or other piece of
  ##         information, e.g. abbreviation for, contraction of, literally, approximately, synonyms:, etc.
  element lbl { tei_lbl.content, tei_lbl.attributes }
tei_lbl.content = tei_macro.paraContent
tei_lbl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies the label using any convenient typology.
  attribute type { tei_data.word }?,
  empty
tei_xr =
  
  ## (cross-reference phrase) contains a phrase, sentence, or icon referring the reader to
  ## some other location in this or another text.
  element xr { tei_xr.content, tei_xr.attributes }
tei_xr.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_usg
   | tei_lbl
   | tei_model.global)*
tei_xr.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## indicates the type of cross reference, using any convenient
  ## typology.
  ## Sample values include: 1] syn (cross reference for synonym information); 2] etym (etymological information); 3] cf (related or similar term); 4] illus (illustration of an object)
  attribute type { tei_data.enumerated }?,
  empty
tei_re =
  
  ## (related entry) contains a dictionary entry for a lexical item related to the headword, such as a compound
  ##         phrase or derived form, embedded inside a larger entry.
  element re { tei_re.content, tei_re.attributes }
tei_re.content =
  (text
   | tei_model.gLike
   | tei_sense
   | tei_model.entryParts.top
   | tei_model.phrase
   | tei_model.global)*
tei_re.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## classifies the related entry according to any convenient typology.
  attribute type { tei_data.word }?,
  empty
tei_oRef =
  
  ## (orthographic-form reference) in a dictionary example, indicates a reference to the orthographic form(s) of the headword.
  element oRef { tei_oRef.content, tei_oRef.attributes }
tei_oRef.content = empty
tei_oRef.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ptrLike.form.attribute.target,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## indicates the kind of typographic modification made to the headword in the reference.
  ## Sample values include: 1] cap (indicates first letter is given as capital); 2] nohyph (indicates that the headword, though a prefix or suffix, loses its hyphen)
  attribute type { tei_data.enumerated }?,
  empty
tei_oVar =
  
  ## (orthographic-variant reference) in a dictionary example, indicates a reference to variant orthographic form(s) of the headword.
  element oVar { tei_oVar.content, tei_oVar.attributes }
tei_oVar.content = (text | tei_model.gLike | tei_oRef)*
tei_oVar.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ptrLike.form.attribute.target,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  
  ## indicates the kind of variant involved.
  ## Sample values include: 1] pt (past tense); 2] pp (past participle); 3] prp (present participle); 4] f (feminine); 5] pl (plural)
  attribute type { tei_data.enumerated }?,
  empty
tei_pRef =
  
  ## (pronunciation reference) in a dictionary example, indicates a reference to the pronunciation(s) of the headword.
  element pRef { tei_pRef.content, tei_pRef.attributes }
tei_pRef.content = empty
tei_pRef.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ptrLike.form.attribute.target,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_pVar =
  
  ## (pronunciation-variant reference) in a dictionary example, indicates a reference to variant pronunciation(s) of the headword.
  element pVar { tei_pVar.content, tei_pVar.attributes }
tei_pVar.content = (text | tei_model.gLike | tei_pRef)*
tei_pVar.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ptrLike.form.attribute.target,
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
tei_model.entryLike = tei_superEntry | tei_entry | tei_entryFree
tei_model.entryLike_sequence = tei_superEntry, tei_entry, tei_entryFree
tei_model.entryLike_sequenceOptional =
  tei_superEntry?, tei_entry?, tei_entryFree?
tei_model.entryLike_sequenceOptionalRepeatable =
  tei_superEntry*, tei_entry*, tei_entryFree*
tei_model.entryLike_sequenceRepeatable =
  tei_superEntry+, tei_entry+, tei_entryFree+
tei_att.entryLike.attributes =
  att.entryLike.attribute.type, att.entryLike.attribute.sortKey, empty
att.entryLike.attribute.type =
  
  ## indicates type of entry, in dictionaries with multiple types.
  ## Suggested values include: 1] main (a main entry (default).); 2] hom (a homograph with a separate entry.); 3] xref (a reduced entry whose only function is to point to another main entry
  ##                         (e.g. for forms of an irregular verb or for variant spellings:
  ##                         was pointing to be, or
  ##                         esthete to aesthete).); 4] affix (an entry for a prefix, infix, or suffix.); 5] abbr (an entry for an abbreviation.); 6] supplemental (a supplemental entry (for use in dictionaries which issue supplements to
  ##                         their main work in which they include updated information about entries).); 7] foreign (an entry for a foreign word in a monolingual dictionary.)
  [ a1:defaultValue = "main" ] attribute type { tei_data.enumerated }?
att.entryLike.attribute.sortKey =
  
  ## contains a (sortable) character sequence reflecting the entry's alphabetical
  ##                 position in the printed dictionary.
  attribute sortKey { tei_data.word }?
tei_model.morphLike =
  tei_gram
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
tei_model.morphLike_sequence =
  tei_gram,
  tei_gen,
  tei_number,
  tei_case,
  tei_per,
  tei_tns,
  tei_mood,
  tei_iType
tei_model.morphLike_sequenceOptional =
  tei_gram?,
  tei_gen?,
  tei_number?,
  tei_case?,
  tei_per?,
  tei_tns?,
  tei_mood?,
  tei_iType?
tei_model.morphLike_sequenceOptionalRepeatable =
  tei_gram*,
  tei_gen*,
  tei_number*,
  tei_case*,
  tei_per*,
  tei_tns*,
  tei_mood*,
  tei_iType*
tei_model.morphLike_sequenceRepeatable =
  tei_gram+,
  tei_gen+,
  tei_number+,
  tei_case+,
  tei_per+,
  tei_tns+,
  tei_mood+,
  tei_iType+
tei_model.formPart =
  tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_usg
  | tei_lbl
  | tei_model.morphLike
tei_model.formPart_sequence =
  tei_form,
  tei_orth,
  tei_pron,
  tei_hyph,
  tei_syll,
  tei_usg,
  tei_lbl,
  tei_model.morphLike
tei_model.formPart_sequenceOptional =
  tei_form?,
  tei_orth?,
  tei_pron?,
  tei_hyph?,
  tei_syll?,
  tei_usg?,
  tei_lbl?,
  tei_model.morphLike?
tei_model.formPart_sequenceOptionalRepeatable =
  tei_form*,
  tei_orth*,
  tei_pron*,
  tei_hyph*,
  tei_syll*,
  tei_usg*,
  tei_lbl*,
  tei_model.morphLike*
tei_model.formPart_sequenceRepeatable =
  tei_form+,
  tei_orth+,
  tei_pron+,
  tei_hyph+,
  tei_syll+,
  tei_usg+,
  tei_lbl+,
  tei_model.morphLike+
tei_model.gramPart =
  tei_gramGrp
  | tei_pos
  | tei_subc
  | tei_colloc
  | tei_usg
  | tei_lbl
  | tei_model.morphLike
tei_model.gramPart_sequence =
  tei_gramGrp,
  tei_pos,
  tei_subc,
  tei_colloc,
  tei_usg,
  tei_lbl,
  tei_model.morphLike
tei_model.gramPart_sequenceOptional =
  tei_gramGrp?,
  tei_pos?,
  tei_subc?,
  tei_colloc?,
  tei_usg?,
  tei_lbl?,
  tei_model.morphLike?
tei_model.gramPart_sequenceOptionalRepeatable =
  tei_gramGrp*,
  tei_pos*,
  tei_subc*,
  tei_colloc*,
  tei_usg*,
  tei_lbl*,
  tei_model.morphLike*
tei_model.gramPart_sequenceRepeatable =
  tei_gramGrp+,
  tei_pos+,
  tei_subc+,
  tei_colloc+,
  tei_usg+,
  tei_lbl+,
  tei_model.morphLike+
tei_model.ptrLike.form = tei_oRef | tei_oVar | tei_pRef | tei_pVar
tei_model.ptrLike.form_sequence = tei_oRef, tei_oVar, tei_pRef, tei_pVar
tei_model.ptrLike.form_sequenceOptional =
  tei_oRef?, tei_oVar?, tei_pRef?, tei_pVar?
tei_model.ptrLike.form_sequenceOptionalRepeatable =
  tei_oRef*, tei_oVar*, tei_pRef*, tei_pVar*
tei_model.ptrLike.form_sequenceRepeatable =
  tei_oRef+, tei_oVar+, tei_pRef+, tei_pVar+
tei_att.ptrLike.form.attributes =
  att.ptrLike.form.attribute.target, empty
att.ptrLike.form.attribute.target =
  
  ## identifies the orthographic form or pronunciation referred to.
  attribute target { tei_data.pointer }?
tei_att.lexicographic.attributes =
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedin,
  att.lexicographic.attribute.opt,
  empty
att.lexicographic.attribute.expand =
  
  ## gives an expanded form of information presented more concisely in the dictionary
  attribute expand { text }?
att.lexicographic.attribute.norm =
  
  ## gives a normalized form of information given by the source text in a
  ##                 non-normalized form
  attribute norm { text }?
att.lexicographic.attribute.split =
  
  ## gives the list of split values for a merged form
  attribute split { text }?
att.lexicographic.attribute.value =
  
  ## gives a value which lacks any realization in the printed source text.
  attribute value { text }?
att.lexicographic.attribute.orig =
  
  ## gives the original string or is the empty string when the element does not appear
  ##                 in the source text.
  attribute orig { text }?
att.lexicographic.attribute.location =
  
  ## provides a reference to an anchor element elsewhere in the document
  ##                 indicating the original location of this component.
  attribute location { tei_data.pointer }?
att.lexicographic.attribute.mergedin =
  
  ## gives a reference to another element, where the original appears as a merged form.
  attribute mergedin { tei_data.pointer }?
att.lexicographic.attribute.opt =
  
  ## indicates whether the element is optional or not
  [ a1:defaultValue = "false" ] attribute opt { xsd:boolean }?
tei_model.entryParts =
  tei_superEntry
  | tei_hom
  | tei_sense
  | tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_stress
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
  | tei_gramGrp
  | tei_pos
  | tei_subc
  | tei_colloc
  | tei_def
  | tei_tr
  | tei_trans
  | tei_etym
  | tei_dicteg
  | tei_usg
  | tei_lbl
  | tei_xr
  | tei_re
tei_model.entryParts_sequence =
  tei_superEntry,
  tei_hom,
  tei_sense,
  tei_form,
  tei_orth,
  tei_pron,
  tei_hyph,
  tei_syll,
  tei_stress,
  tei_gen,
  tei_number,
  tei_case,
  tei_per,
  tei_tns,
  tei_mood,
  tei_iType,
  tei_gramGrp,
  tei_pos,
  tei_subc,
  tei_colloc,
  tei_def,
  tei_tr,
  tei_trans,
  tei_etym,
  tei_dicteg,
  tei_usg,
  tei_lbl,
  tei_xr,
  tei_re
tei_model.entryParts_sequenceOptional =
  tei_superEntry?,
  tei_hom?,
  tei_sense?,
  tei_form?,
  tei_orth?,
  tei_pron?,
  tei_hyph?,
  tei_syll?,
  tei_stress?,
  tei_gen?,
  tei_number?,
  tei_case?,
  tei_per?,
  tei_tns?,
  tei_mood?,
  tei_iType?,
  tei_gramGrp?,
  tei_pos?,
  tei_subc?,
  tei_colloc?,
  tei_def?,
  tei_tr?,
  tei_trans?,
  tei_etym?,
  tei_dicteg?,
  tei_usg?,
  tei_lbl?,
  tei_xr?,
  tei_re?
tei_model.entryParts_sequenceOptionalRepeatable =
  tei_superEntry*,
  tei_hom*,
  tei_sense*,
  tei_form*,
  tei_orth*,
  tei_pron*,
  tei_hyph*,
  tei_syll*,
  tei_stress*,
  tei_gen*,
  tei_number*,
  tei_case*,
  tei_per*,
  tei_tns*,
  tei_mood*,
  tei_iType*,
  tei_gramGrp*,
  tei_pos*,
  tei_subc*,
  tei_colloc*,
  tei_def*,
  tei_tr*,
  tei_trans*,
  tei_etym*,
  tei_dicteg*,
  tei_usg*,
  tei_lbl*,
  tei_xr*,
  tei_re*
tei_model.entryParts_sequenceRepeatable =
  tei_superEntry+,
  tei_hom+,
  tei_sense+,
  tei_form+,
  tei_orth+,
  tei_pron+,
  tei_hyph+,
  tei_syll+,
  tei_stress+,
  tei_gen+,
  tei_number+,
  tei_case+,
  tei_per+,
  tei_tns+,
  tei_mood+,
  tei_iType+,
  tei_gramGrp+,
  tei_pos+,
  tei_subc+,
  tei_colloc+,
  tei_def+,
  tei_tr+,
  tei_trans+,
  tei_etym+,
  tei_dicteg+,
  tei_usg+,
  tei_lbl+,
  tei_xr+,
  tei_re+
tei_set =
  
  ## contains a description of the setting, time, locale, appearance,
  ## etc., of the action of a play, typically found in the front matter of
  ## a printed performance text (not a stage direction).
  element set { tei_set.content, tei_set.attributes }
tei_set.content =
  tei_model.global*,
  tei_head?,
  (tei_macro.component, tei_model.global*)*
tei_set.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_prologue =
  
  ## contains the prologue to a drama,  typically spoken by an actor out of
  ## character, possibly in association with a particular performance or venue.
  element prologue { tei_prologue.content, tei_prologue.attributes }
tei_prologue.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_macro.component, tei_model.global*)+,
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_prologue.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_epilogue =
  
  ## contains the epilogue to a drama,  typically spoken by an actor
  ## out of character, possibly in association with a particular performance
  ## or venue.
  element epilogue { tei_epilogue.content, tei_epilogue.attributes }
tei_epilogue.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_macro.component, tei_model.global*)+,
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_epilogue.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_performance =
  
  ## contains a section of front or back matter describing how a
  ## dramatic piece is to be performed in general or how it was performed
  ## on some specific occasion. 
  element performance {
    tei_performance.content, tei_performance.attributes
  }
tei_performance.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_macro.component, tei_model.global*)+,
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_performance.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_castList =
  
  ## (cast list) contains a single cast list or dramatis personae.
  element castList { tei_castList.content, tei_castList.attributes }
tei_castList.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_macro.component, tei_model.global*)*,
  ((tei_castItem | tei_castGroup), tei_model.global*)+,
  (tei_macro.component, tei_model.global*)*
tei_castList.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_castGroup =
  
  ## (Cast list grouping) groups one or more individual castItem
  ## elements within a cast list.
  element castGroup { tei_castGroup.content, tei_castGroup.attributes }
tei_castGroup.content =
  tei_model.global*,
  (tei_head, tei_model.global*)?,
  ((tei_castItem | tei_castGroup | tei_roleDesc), tei_model.global*)+,
  (tei_trailer, tei_model.global*)?
tei_castGroup.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_castItem =
  
  ## (Cast list item) contains a single entry within a cast list, describing
  ## either a single role or a list of non-speaking roles.
  element castItem { tei_castItem.content, tei_castItem.attributes }
tei_castItem.content =
  (text
   | tei_model.gLike
   | tei_model.castItemPart
   | tei_model.phrase
   | tei_model.global)*
tei_castItem.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## characterizes the cast item.
  ##    
  [ a1:defaultValue = "role" ]
  attribute type {
    
    ## (the item describes a single role.
    ##        ) 
    "role"
    | 
      ## (the item describes a list of non-speaking roles.
      ##    ) 
      "list"
  }?,
  empty
tei_role =
  
  ## the name of a dramatic role, as given in a cast list.
  element role { tei_role.content, tei_role.attributes }
tei_role.content = tei_macro.phraseSeq
tei_role.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_roleDesc =
  
  ## (role description) describes a character's role in a drama.
  element roleDesc { tei_roleDesc.content, tei_roleDesc.attributes }
tei_roleDesc.content = tei_macro.phraseSeq
tei_roleDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_actor =
  
  ## (actor) Name of an actor appearing within a cast list.
  element actor { tei_actor.content, tei_actor.attributes }
tei_actor.content = tei_macro.phraseSeq
tei_actor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_move =
  
  ## (Movement) marks the actual entrance or exit of one or more characters on stage.
  element move { tei_move.content, tei_move.attributes }
tei_move.content = empty
tei_move.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  
  ## characterizes the movement, for example as an entrance or exit.
  ## Suggested values include: 1] entrance (character is entering the stage.); 2] exit (character is exiting the stage.); 3] onstage (character moves on stage)
  attribute type { tei_data.enumerated }?,
  
  ## specifies the direction of a stage movement.
  ## Sample values include: 1] L (stage left); 2] R (stage right); 3] C (centre stage)
  attribute where {
    list { tei_data.enumerated+ }
  }?,
  
  ## identifies the performance or performances in which this movement
  ##		occurred as specified.
  attribute perf {
    list { tei_data.pointer+ }
  }?,
  empty
tei_view =
  
  ## describes the visual context of some part of a screen play in
  ## terms of what the spectator sees, generally independent of any
  ## dialogue.
  element view { tei_view.content, tei_view.attributes }
tei_view.content = tei_macro.specialPara
tei_view.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_camera =
  
  ## describes a particular camera angle or viewpoint in a screen play.
  element camera { tei_camera.content, tei_camera.attributes }
tei_camera.content = tei_macro.paraContent
tei_camera.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_sound =
  
  ## describes a sound effect or musical sequence specified within a
  ## screen play or radio script.
  element sound { tei_sound.content, tei_sound.attributes }
tei_sound.content = tei_macro.paraContent
tei_sound.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the sound in some respect, e.g. as music, special
  ## effect, etc.
  attribute type { tei_data.enumerated }?,
  
  ## indicates whether the sound overlaps the surrounding speeches
  ## or interrupts them.
  [ a1:defaultValue = "unknown" ]
  attribute discrete {
    
    ## (the sound is heard between the surrounding speeches) 
    "true"
    | 
      ## (the sound overlaps the surrounding speeches) 
      "false"
    | 
      ## (unknown or inapplicable) 
      "unknown"
  }?,
  empty
tei_caption =
  
  ## contains the text of a caption or other text displayed as part of
  ## a film script or screenplay.
  element caption { tei_caption.content, tei_caption.attributes }
tei_caption.content = tei_macro.paraContent
tei_caption.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_tech =
  
  ## (Technical stage direction) describes a special-purpose stage direction that is not
  ## meant for the actors.
  element tech { tei_tech.content, tei_tech.attributes }
tei_tech.content = tei_macro.paraContent
tei_tech.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the technical stage direction.
  attribute type {
    
    ## (a lighting cue) 
    "light"
    | 
      ## (a sound cue) 
      "sound"
    | 
      ## (a prop cue) 
      "prop"
    | 
      ## (a blocking instruction) 
      "block"
  }?,
  
  ## identifies the performance or performances to which this
  ## technical direction applies.
  attribute perf { tei_data.enumerated }?,
  empty
tei_model.divPart.stage = tei_model.stageLike | tei_castList
tei_model.divPart.stage_sequence = tei_model.stageLike, tei_castList
tei_model.divPart.stage_sequenceOptional =
  tei_model.stageLike?, tei_castList?
tei_model.divPart.stage_sequenceOptionalRepeatable =
  tei_model.stageLike*, tei_castList*
tei_model.divPart.stage_sequenceRepeatable =
  tei_model.stageLike+, tei_castList+
tei_table =
  
  ## contains text displayed in tabular form, in
  ## rows and columns.
  element table { tei_table.content, tei_table.attributes }
tei_table.content =
  (tei_head | tei_model.global)*, (tei_row, tei_model.global*)+
tei_table.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the number of rows in the table.
  attribute rows { tei_data.count }?,
  
  ## indicates the number of columns in each row of the table.
  attribute cols { tei_data.count }?,
  empty
tei_row =
  
  ## contains one row of a table. 
  element row { tei_row.content, tei_row.attributes }
tei_row.content = ((tei_cell | tei_table), tei_model.global*)+
tei_row.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.tableDecoration.attribute.role,
  att.tableDecoration.attribute.rows,
  att.tableDecoration.attribute.cols,
  empty
tei_cell =
  
  ## contains one cell of a table. 
  element cell { tei_cell.content, tei_cell.attributes }
tei_cell.content = tei_macro.paraContent
tei_cell.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.tableDecoration.attribute.role,
  att.tableDecoration.attribute.rows,
  att.tableDecoration.attribute.cols,
  empty
tei_formula =
  
  ## contains a mathematical or other formula.
  element formula { tei_formula.content, tei_formula.attributes }
tei_formula.content = mathml.math
tei_formula.attributes =
  
  ## supplies the name of a previously defined notation used for the
  ## content of the
  ## element.
  attribute notation { tei_data.code }?,
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_figure =
  
  ## contains a block containing graphics, illustrations, or figures.
  element figure { tei_figure.content, tei_figure.attributes }
tei_figure.content =
  (tei_model.pLike
   | tei_model.global
   | tei_figure
   | tei_figDesc
   | tei_model.graphicLike
   | tei_head)*
tei_figure.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_figDesc =
  
  ## (Description of Figure) contains a brief prose description of the appearance or content
  ## of a graphic figure, for use when documenting an image without
  ## displaying it.
  element figDesc { tei_figDesc.content, tei_figDesc.attributes }
tei_figDesc.content = tei_macro.paraContent
tei_figDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_g =
  
  ## (character or glyph) represents a non-standard character or glyph.
  element g { tei_g.content, tei_g.attributes }
tei_g.content = text
tei_g.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## points to a description of the  character or glyph intended.
  attribute ref { tei_data.pointer }?,
  empty
tei_char =
  
  ## (character) provides descriptive information about a character. 
  element char { tei_char.content, tei_char.attributes }
tei_char.content =
  tei_charName,
  tei_macro.glossSeq,
  tei_charProp*,
  tei_mapping*,
  tei_model.graphicLike*,
  tei_model.noteLike?
tei_char.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_charName =
  
  ## (character name) contains the name of a character, expressed following Unicode conventions. 
  element charName { tei_charName.content, tei_charName.attributes }
tei_charName.content = text
tei_charName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_charProp =
  
  ## (character property) provides a name and value for some property of the parent
  ## character or glyph. 
  element charProp { tei_charProp.content, tei_charProp.attributes }
tei_charProp.content = (tei_unicodeName | tei_localName), tei_value
tei_charProp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_charDesc =
  
  ## (character description) provides descriptive information about characters or
  ## glyphs. 
  element charDesc { tei_charDesc.content, tei_charDesc.attributes }
tei_charDesc.content = tei_desc?, (tei_char | tei_glyph)+
tei_charDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. 
  element glyph { tei_glyph.content, tei_glyph.attributes }
tei_glyph.content =
  tei_glyphName,
  tei_macro.glossSeq,
  tei_charProp*,
  tei_mapping*,
  tei_model.graphicLike*,
  tei_model.noteLike?
tei_glyph.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_glyphName =
  
  ## (character glyph name) contains the name of a glyph, expressed following Unicode
  ## conventions for character names. 
  element glyphName { tei_glyphName.content, tei_glyphName.attributes }
tei_glyphName.content = text
tei_glyphName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_localName =
  
  ## (Locally-defined Property Name) contains a locally defined name for some property. 
  element localName { tei_localName.content, tei_localName.attributes }
tei_localName.content = text
tei_localName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_mapping =
  
  ## (character mapping) contains one or more
  ##	 characters which are related to the parent character or glyph
  ##	 in some respect, as specified by the type
  ##	 attribute.
  ##
  element mapping { tei_mapping.content, tei_mapping.attributes }
tei_mapping.content = tei_macro.xtext
tei_mapping.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_unicodeName =
  
  ## (Unicode Property Name) contains the name of a registered Unicode normative or
  ## informative property. 
  element unicodeName {
    tei_unicodeName.content, tei_unicodeName.attributes
  }
tei_unicodeName.content = text
tei_unicodeName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the version number of the Unicode Standard in
  ##         which this property name is defined.
  attribute version { tei_data.numeric }?,
  empty
tei_value =
  
  ## (value) contains a single value for some property, attribute, or other
  ##   analysis.
  element value { tei_value.content, tei_value.attributes }
tei_value.content = tei_macro.xtext
tei_value.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_teiHeader =
  
  ## (TEI Header) supplies the descriptive and declarative information making
  ##	up an electronic title page prefixed to every TEI-conformant
  ##	text.
  element teiHeader { tei_teiHeader.content, tei_teiHeader.attributes }
tei_teiHeader.content =
  tei_fileDesc, tei_model.headerPart*, tei_revisionDesc?
tei_teiHeader.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the kind of document to which the header is attached.
  ## Sample values include: 1] text (the header is attached to a single text.); 2] corpus (the header is attached to a corpus.)
  [ a1:defaultValue = "text" ] attribute type { tei_data.enumerated }?,
  empty
tei_fileDesc =
  
  ## (File Description) contains a full bibliographic description of an electronic
  ## file.
  element fileDesc { tei_fileDesc.content, tei_fileDesc.attributes }
tei_fileDesc.content = tei_macro.fileDescPart, tei_sourceDesc+
tei_fileDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_titleStmt =
  
  ## (title statement) groups information about the title of a work and those
  ## responsible for its intellectual content.
  element titleStmt { tei_titleStmt.content, tei_titleStmt.attributes }
tei_titleStmt.content =
  tei_title+,
  (tei_author
   | tei_editor
   | tei_sponsor
   | tei_funder
   | tei_principal
   | tei_respStmt)*
tei_titleStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_sponsor =
  
  ## specifies the name of a sponsoring organization or
  ## institution.
  element sponsor { tei_sponsor.content, tei_sponsor.attributes }
tei_sponsor.content = tei_macro.phraseSeq
tei_sponsor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_funder =
  
  ## (Funding body) specifies the name of an individual, institution, or organization
  ## responsible for the funding of a project or text.
  element funder { tei_funder.content, tei_funder.attributes }
tei_funder.content = tei_macro.phraseSeq
tei_funder.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the
  ## creation of an electronic text.
  element principal { tei_principal.content, tei_principal.attributes }
tei_principal.content = tei_macro.phraseSeq
tei_principal.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text.
  element editionStmt {
    tei_editionStmt.content, tei_editionStmt.attributes
  }
tei_editionStmt.content =
  tei_model.pLike+ | (tei_edition, tei_respStmt*)
tei_editionStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_edition =
  
  ## (Edition) describes the particularities of one edition of a text.
  element edition { tei_edition.content, tei_edition.attributes }
tei_edition.content = tei_macro.phraseSeq
tei_edition.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_extent =
  
  ## describes the approximate size of a text as stored on
  ## some carrier medium, whether digital or non-digital, specified in any convenient units.
  element extent { tei_extent.content, tei_extent.attributes }
tei_extent.content = tei_macro.phraseSeq
tei_extent.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution
  ## of an electronic or other text. 
  element publicationStmt {
    tei_publicationStmt.content, tei_publicationStmt.attributes
  }
tei_publicationStmt.content =
  tei_model.pLike+ | tei_model.publicationStmtPart+
tei_publicationStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_distributor =
  
  ## supplies the name of a person or other agency responsible for the
  ## distribution of a text.
  element distributor {
    tei_distributor.content, tei_distributor.attributes
  }
tei_distributor.content = tei_macro.phraseSeq
tei_distributor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for
  ##   making an electronic file available, other than a publisher or
  ##   distributor.
  element authority { tei_authority.content, tei_authority.attributes }
tei_authority.content = tei_macro.phraseSeq
tei_authority.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_idno =
  
  ## (identifying number) supplies any standard or non-standard number used to identify a
  ## bibliographic item.
  element idno { tei_idno.content, tei_idno.attributes }
tei_idno.content = text
tei_idno.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## categorizes the number, for example as an ISBN or other
  ##          standard series.
  ##    
  attribute type { tei_data.enumerated }?,
  empty
tei_availability =
  
  ## supplies information about the availability of a text, for
  ##   example any restrictions on its use or distribution, its copyright
  ##   status, etc.
  element availability {
    tei_availability.content, tei_availability.attributes
  }
tei_availability.content = tei_model.pLike+
tei_availability.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies a code identifying the current availability of the
  ## text.
  ##    
  [ a1:defaultValue = "unknown" ]
  attribute status {
    
    ## (the text is freely available.
    ##     ) 
    "free"
    | 
      ## (the status of the text is unknown.
      ##     ) 
      "unknown"
    | 
      ## (the text is not freely available.
      ##    ) 
      "restricted"
  }?,
  empty
tei_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which
  ## a publication belongs.
  element seriesStmt {
    tei_seriesStmt.content, tei_seriesStmt.attributes
  }
tei_seriesStmt.content =
  tei_model.pLike+
  | (tei_title+, (tei_idno | tei_respStmt)*)
tei_seriesStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_notesStmt =
  
  ## (Notes statement) collects together any notes providing information about a text
  ## additional to that recorded in other parts of the bibliographic
  ## description.
  element notesStmt { tei_notesStmt.content, tei_notesStmt.attributes }
tei_notesStmt.content = tei_model.noteLike+
tei_notesStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_sourceDesc =
  
  ## supplies a description of the source text(s) from
  ## which an electronic text was derived or generated.
  element sourceDesc {
    tei_sourceDesc.content, tei_sourceDesc.attributes
  }
tei_sourceDesc.content =
  tei_model.pLike+
  | tei_listBibl
  | (tei_model.biblLike | tei_model.sourceDescPart)+
tei_sourceDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_scriptStmt =
  
  ## (script statement) contains a citation giving details of the script used for
  ## a spoken text.
  element scriptStmt {
    tei_scriptStmt.content, tei_scriptStmt.attributes
  }
tei_scriptStmt.content = tei_model.pLike+ | tei_model.biblLike
tei_scriptStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_recordingStmt =
  
  ## (recording statement) describes a set of recordings used in transcription of a
  ## spoken text.
  element recordingStmt {
    tei_recordingStmt.content, tei_recordingStmt.attributes
  }
tei_recordingStmt.content = tei_model.pLike+ | tei_recording+
tei_recordingStmt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_recording =
  
  ## (recording event) details of an audio or video recording event
  ## used as the source of a spoken text, either directly or from
  ## a public broadcast. 
  element recording { tei_recording.content, tei_recording.attributes }
tei_recording.content = tei_model.pLike+ | tei_model.recordingPart*
tei_recording.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## the kind of recording.
  [ a1:defaultValue = "audio" ]
  attribute type {
    
    ## (audio recording) 
    "audio"
    | 
      ## (audio and video recording) 
      "video"
  }?,
  
  ## the original duration of the recording. 
  attribute dur { tei_data.duration }?,
  empty
tei_equipment =
  
  ## (equipment) provides technical details of the equipment and media used for
  ## an audio or video recording used as the source for a spoken text.
  element equipment { tei_equipment.content, tei_equipment.attributes }
tei_equipment.content = tei_model.pLike+
tei_equipment.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_broadcast =
  
  ## (broadcast) describes a broadcast used as the source of a spoken text.
  element broadcast { tei_broadcast.content, tei_broadcast.attributes }
tei_broadcast.content =
  tei_model.pLike+ | tei_model.biblLike | tei_recording
tei_broadcast.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_encodingDesc =
  
  ## (Encoding description) documents the relationship between an electronic text and the
  ## source or sources from which it was derived.
  element encodingDesc {
    tei_encodingDesc.content, tei_encodingDesc.attributes
  }
tei_encodingDesc.content = (tei_model.encodingPart | tei_model.pLike)+
tei_encodingDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic
  ## file was encoded, together with any other relevant information
  ## concerning the process by which it was assembled or collected.
  element projectDesc {
    tei_projectDesc.content, tei_projectDesc.attributes
  }
tei_projectDesc.content = tei_model.pLike+
tei_projectDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used
  ## in sampling texts in the creation of a corpus or collection.
  element samplingDecl {
    tei_samplingDecl.content, tei_samplingDecl.attributes
  }
tei_samplingDecl.content = tei_model.pLike+
tei_samplingDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied
  ## during the encoding of a text.
  element editorialDecl {
    tei_editorialDecl.content, tei_editorialDecl.attributes
  }
tei_editorialDecl.content =
  tei_model.pLike+ | tei_model.editorialDeclPart+
tei_editorialDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been
  ## made in the text.
  element correction {
    tei_correction.content, tei_correction.attributes
  }
tei_correction.content = tei_model.pLike+
tei_correction.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## indicates the degree of correction applied to the text.
  ##    
  [ a1:defaultValue = "unknown" ]
  attribute status {
    
    ## (the text has been thoroughly checked and
    ##                        proofread.
    ##     ) 
    "high"
    | 
      ## (the text has been checked at least once.
      ##     ) 
      "medium"
    | 
      ## (the text has not been checked.
      ##     ) 
      "low"
    | 
      ## (the correction status of the text is unknown.
      ##    ) 
      "unknown"
  }?,
  
  ## indicates the method adopted to indicate corrections within the
  ##          text.
  ##    
  [ a1:defaultValue = "silent" ]
  attribute method {
    
    ## (corrections have been made silently
    ##     ) 
    "silent"
    | 
      ## (corrections have been represented using editorial tags
      ##    ) 
      "tags"
  }?,
  empty
tei_normalization =
  
  ## indicates the extent of normalization or regularization of the
  ## original source carried out in converting it to electronic form.
  element normalization {
    tei_normalization.content, tei_normalization.attributes
  }
tei_normalization.content = tei_model.pLike+
tei_normalization.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## indicates the authority for any normalization carried out.
  ##     
  attribute source { tei_data.pointer }?,
  
  ## indicates the method adopted to indicate normalizations within
  ##          the text.
  ##    
  [ a1:defaultValue = "silent" ]
  attribute method {
    
    ## (normalization made silently
    ##   ) 
    "silent"
    | 
      ## (normalization represented using editorial tags
      ##    ) 
      "tags"
  }?,
  empty
tei_quotation =
  
  ## specifies editorial practice adopted with respect to quotation
  ##   marks in the original. 
  element quotation { tei_quotation.content, tei_quotation.attributes }
tei_quotation.content = tei_model.pLike+
tei_quotation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## indicates whether or not quotation marks have been retained as
  ##       content within the text. 
  [ a1:defaultValue = "all" ]
  attribute marks {
    
    ## (no quotation marks have been retained ) 
    "none"
    | 
      ## (some quotation marks have been retained ) 
      "some"
    | 
      ## (all quotation marks have been retained ) 
      "all"
  }?,
  
  ## specifies how quotation marks are indicated within the
  ##       text.
  [ a1:defaultValue = "unknown" ]
  attribute form {
    
    ## (quotation marks are retained as data.) 
    "data"
    | 
      ## (the rendition attribute is consistently used to
      ##           indicate the form of quotation marks.) 
      "rend"
    | 
      ## (use of quotation marks has been standardized.) 
      "std"
    | 
      ## (quotation marks are represented inconsistently.) 
      "nonstd"
    | 
      ## (use of quotation marks is unknown.) 
      "unknown"
  }?,
  empty
tei_hyphenation =
  
  ## (Hyphenation) summarizes the way in which hyphenation in a source text has been
  ## treated in an encoded version of it.
  element hyphenation {
    tei_hyphenation.content, tei_hyphenation.attributes
  }
tei_hyphenation.content = tei_model.pLike+
tei_hyphenation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## indicates whether or not end-of-line hyphenation has been
  ##	retained in a text.
  [ a1:defaultValue = "some" ]
  attribute eol {
    
    ## (all end-of-line hyphenation has been retained,
    ##                    even though the lineation of the original
    ##                    may not have been.
    ##    ) 
    "all"
    | 
      ## (end-of-line hyphenation has been retained in some
      ##                    cases.
      ##    ) 
      "some"
    | 
      ## (all soft end-of-line hyphenation has been removed:
      ##                    any remaining end-od-line hyphenation should be retained.
      ##   ) 
      "hard"
    | 
      ## (all end-of-line hyphenation has been removed:
      ##                   any remaining hyphenation occurred within the line.
      ##    ) 
      "none"
  }?,
  empty
tei_segmentation =
  
  ## describes the principles according to which the text has been
  ## segmented, for example into sentences, tone-units, graphemic strata,
  ## etc.
  element segmentation {
    tei_segmentation.content, tei_segmentation.attributes
  }
tei_segmentation.content = tei_model.pLike+
tei_segmentation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_stdVals =
  
  ## (Standard values) specifies the format used when standardized date or number
  ## values are supplied.
  element stdVals { tei_stdVals.content, tei_stdVals.attributes }
tei_stdVals.content = tei_model.pLike+
tei_stdVals.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_interpretation =
  
  ## describes the scope of any analytic or interpretive information
  ## added to the text in addition to the transcription. 
  element interpretation {
    tei_interpretation.content, tei_interpretation.attributes
  }
tei_interpretation.content = tei_model.pLike+
tei_interpretation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to an SGML or XML document.
  element tagsDecl { tei_tagsDecl.content, tei_tagsDecl.attributes }
tei_tagsDecl.content = tei_rendition*, tei_namespace*
tei_tagsDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_tagUsage =
  
  ## (tag usage) supplies information about the usage of a specific element
  ## within a text. 
  element tagUsage { tei_tagUsage.content, tei_tagUsage.attributes }
tei_tagUsage.content = tei_macro.paraContent
tei_tagUsage.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## the name (generic identifier)
  ## of the element indicated by the tag.
  attribute gi { tei_data.name },
  
  ## specifies the number of occurrences of this element within the text.
  ##  
  attribute occurs { tei_data.count }?,
  
  ## specifies the number of occurrences of this element within the text
  ## which bear a distinct value for the global xml:id attribute. 
  attribute withId { tei_data.count }?,
  
  ## specifies the identifier of a rendition element which
  ## defines how this element is to be rendered.
  attribute render { tei_data.pointer }?,
  empty
tei_namespace =
  
  ## supplies the formal name of the namespace to which the elements
  ## documented by its children belong. 
  element namespace { tei_namespace.content, tei_namespace.attributes }
tei_namespace.content = tei_tagUsage+
tei_namespace.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## the full formal name of the namespace concerned.
  attribute name { tei_data.namespace },
  empty
tei_rendition =
  
  ## (rendition) supplies information about the intended rendition of one or more
  ## elements.
  element rendition { tei_rendition.content, tei_rendition.attributes }
tei_rendition.content = tei_macro.paraContent
tei_rendition.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this
  ##   text.
  element refsDecl { tei_refsDecl.content, tei_refsDecl.attributes }
tei_refsDecl.content = tei_model.pLike+ | tei_cRefPattern+ | tei_state+
tei_refsDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## identifies the document type within which
  ##       this reference declaration is used.
  [ a1:defaultValue = "TEI" ] attribute doctype { tei_data.name }?,
  empty
tei_cRefPattern =
  
  ## (defines how to convert a canonical reference into a URI) specifies an expression and replacement pattern for
  ##   tranforming a canonical reference into a URI
  element cRefPattern {
    tei_cRefPattern.content, tei_cRefPattern.attributes
  }
tei_cRefPattern.content = tei_model.pLike*
tei_cRefPattern.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies a regular expression against which the values of
  ##       cRef attributes can be matched.
  attribute matchPattern { tei_data.pattern },
  
  ## specifies a replacement pattern
  ##       which, once subpattern substitution has been performed, provides
  ##       a URI.
  attribute replacementPattern { text },
  empty
tei_state =
  
  ## specifies one component of a canonical reference defined by
  ## the milestone method.
  element state { tei_state.content, tei_state.attributes }
tei_state.content = empty
tei_state.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates which edition or version the milestone applies to.
  attribute ed { tei_data.code }?,
  
  ## indicates what kind of state is changing at this milestone.
  ## Suggested values include: 1] page (page breaks in the reference edition.
  ##     ); 2] column (column breaks.
  ##     ); 3] line (line breaks.
  ##     ); 4] book (any units termed book, liber, etc.
  ##     ); 5] poem (individual poems in a collection.
  ##     ); 6] canto (cantos or other major sections of a poem.
  ##     ); 7] stanza (stanzas within a poem, book, or canto.
  ##     ); 8] act (acts within a play.
  ##     ); 9] scene (scenes within a play or act.
  ##     ); 10] section (sections of any kind.
  ##     ); 11] absent (passages not present in the reference edition.)
  attribute unit { tei_data.enumerated },
  
  ## specifies the fixed length of the reference component.
  attribute length { tei_data.count }?,
  
  ## supplies a delimiting string following the reference
  ##           component.
  attribute delim { text }?,
  empty
tei_classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory
  ## codes used elsewhere in the text.
  element classDecl { tei_classDecl.content, tei_classDecl.attributes }
tei_classDecl.content = tei_taxonomy+
tei_classDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_taxonomy =
  
  ## (taxonomy) defines a typology used to classify texts either implicitly, by
  ## means of a bibliographic citation, or explicitly by a structured
  ## taxonomy.
  element taxonomy { tei_taxonomy.content, tei_taxonomy.attributes }
tei_taxonomy.content =
  tei_model.glossLike*
  | tei_category+
  | (tei_model.biblLike, tei_category*)
tei_taxonomy.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_category =
  
  ## (category) contains an individual descriptive category, possibly nested
  ## within a superordinate category, within a user-defined taxonomy.
  element category { tei_category.content, tei_category.attributes }
tei_category.content =
  (tei_catDesc | tei_model.glossLike), tei_category*
tei_category.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_catDesc =
  
  ## (category description) describes some category within a taxonomy
  ## or text typology, either in the form of a brief prose description
  ## or in terms of the situational parameters used by the TEI
  ## formal textDesc.
  element catDesc { tei_catDesc.content, tei_catDesc.attributes }
tei_catDesc.content = (text | tei_model.phrase | tei_model.catDescPart)*
tei_catDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_fsdDecl =
  
  ## (FSD (feature-system declaration) declaration) identifies the feature system declaration which contains
  ## definitions for a particular type of feature structure.
  element fsdDecl { tei_fsdDecl.content, tei_fsdDecl.attributes }
tei_fsdDecl.content = empty
tei_fsdDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the type of feature structure documented by the FSD;
  ## this will be the value of the type attribute on at least one
  ## feature structure.
  attribute type { tei_data.enumerated },
  
  ## supplies a link to the entity containing the feature system
  ## declaration. 
  attribute url { tei_data.pointer },
  empty
tei_metDecl =
  
  ## documents the notation employed to represent a metrical
  ##   pattern when this is specified as the value of a met,
  ##   real, or rhyme attribute on any structural
  ##   element of a metrical text (e.g. lg, l, or
  ##   seg).
  element metDecl { tei_metDecl.content, tei_metDecl.attributes }
tei_metDecl.content = tei_macro.componentSeq | tei_metSym+
tei_metDecl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  
  ## indicates whether the notation conveys the abstract
  ##       metrical form, its actual prosodic realization, or the rhyme
  ##       scheme, or some combination thereof.
  
  ## Sorry, unable to create schema that uses actual counts minOccurs=1 and maxOccurs=3; approximating to minOccurs=1 and maxOccurs=unbounded.
  [ a1:defaultValue = "met real" ]
  attribute type {
    list { tei_data.enumerated, tei_data.enumerated* }
  }?,
  
  ## specifies a regular expression defining any value that
  ##	is legal for this notation.
  attribute pattern { tei_data.pattern }?,
  empty
tei_metSym =
  
  ## documents the intended significance of a particular character or
  ## character sequence within a metrical notation, either explicitly or in
  ## terms of other symbol elements in the same metDecl.
  element metSym { tei_metSym.content, tei_metSym.attributes }
tei_metSym.content = tei_macro.phraseSeq
tei_metSym.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the character or character sequence being documented.
  attribute value {
    list { tei_data.word+ }
  },
  
  ## specifies whether the symbol is defined in terms of other
  ## symbols (terminal is set to false) or in prose
  ## (terminal is set to true).
  [ a1:defaultValue = "true" ]
  attribute terminal {
    
    ## (the element contains a prose definition of its meaning.) 
    "true"
    | 
      ## (the element contains a definition of its meaning given using
      ## symbols defined elsewhere in the same metDecl element.) 
      "false"
  }?,
  empty
tei_variantEncoding =
  
  ## declares the method used to encode text-critical variants.
  element variantEncoding {
    tei_variantEncoding.content, tei_variantEncoding.attributes
  }
tei_variantEncoding.content = empty
tei_variantEncoding.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates which method is used to encode the apparatus of
  ## variants.
  attribute method {
    
    ## (apparatus uses line numbers or other canonical reference scheme
    ## referenced in a base text.) 
    "location-referenced"
    | 
      ## (apparatus indicates the precise locations of the beginning and
      ## ending of each lemma relative to a base text.) 
      "double-end-point"
    | 
      ## (alternate readings of a passage are given in parallel in the
      ## text; no notion of a base text is necessary.) 
      "parallel-segmentation"
  },
  
  ## indicates whether the apparatus appears within the running text
  ## or external to it.
  attribute location {
    
    ## (apparatus appears within the running text.) 
    "internal"
    | 
      ## (apparatus appears outside the base text.) 
      "external"
  },
  empty
tei_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a
  ## text, specifically the languages and sublanguages used, the situation in
  ## which it was produced, the participants and their setting.
  element profileDesc {
    tei_profileDesc.content, tei_profileDesc.attributes
  }
tei_profileDesc.content = tei_creation?, tei_model.profileDescPart*
tei_profileDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_creation =
  
  ## contains information about the creation of a text.
  element creation { tei_creation.content, tei_creation.attributes }
tei_creation.content = tei_macro.phraseSeq
tei_creation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects etc.
  ## represented within a text.
  element langUsage { tei_langUsage.content, tei_langUsage.attributes }
tei_langUsage.content = tei_language+
tei_langUsage.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_language =
  
  ## characterizes a single language or sublanguage used within a
  ##   text.
  element language { tei_language.content, tei_language.attributes }
tei_language.content = tei_macro.phraseSeq
tei_language.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## Supplies a language code constructed as defined in RFC 3066 (or
  ##       its successor) which is used to identify the language documented
  ##       by this element, and which is referenced by the global xml:lang attribute.
  attribute ident { tei_data.language },
  
  ## specifies the approximate percentage (by volume) of the
  ##       text which uses this language.
  ##       
  attribute usage {
    xsd:nonNegativeInteger { maxInclusive = "100" }
  }?,
  empty
tei_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text
  ## in terms of a standard classification scheme, thesaurus, etc.
  element textClass { tei_textClass.content, tei_textClass.attributes }
tei_textClass.content = (tei_classCode | tei_catRef | tei_keywords)*
tei_textClass.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declarable.attribute.default,
  empty
tei_keywords =
  
  ## contains a list of keywords or phrases identifying the topic or
  ## nature of a text.
  element keywords { tei_keywords.content, tei_keywords.attributes }
tei_keywords.content = tei_term+ | tei_list
tei_keywords.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the controlled vocabulary within which the set of
  ##   keywords concerned is defined.
  ##    
  attribute scheme { tei_data.pointer },
  empty
tei_classCode =
  
  ## contains the classification code used for this text in some
  ## standard classification system.
  element classCode { tei_classCode.content, tei_classCode.attributes }
tei_classCode.content = tei_macro.phraseSeq
tei_classCode.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the classification system or taxonomy in use.
  attribute scheme { tei_data.pointer },
  empty
tei_catRef =
  
  ## (category reference) specifies one or more defined categories
  ## within some taxonomy or text typology.
  element catRef { tei_catRef.content, tei_catRef.attributes }
tei_catRef.content = empty
tei_catRef.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the categories concerned
  ##    
  attribute target {
    list { tei_data.pointer+ }
  },
  
  ## identifies the classification scheme within which the set of
  ##     categories concerned is defined
  ##    
  attribute scheme { tei_data.pointer }?,
  empty
tei_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file.
  element revisionDesc {
    tei_revisionDesc.content, tei_revisionDesc.attributes
  }
tei_revisionDesc.content = tei_list | tei_change+
tei_revisionDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_change =
  
  ## summarizes a particular change or correction made
  ## to a particular version of an electronic text which is
  ## shared between several researchers.
  element change { tei_change.content, tei_change.attributes }
tei_change.content = tei_macro.specialPara
tei_change.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  
  ## supplies the date of the change in standard form,  i.e. yyyy-mm-dd.
  attribute date { tei_data.temporal }?,
  empty
tei_model.headerPart = tei_encodingDesc | tei_profileDesc | tei_include
tei_model.headerPart_sequence =
  tei_encodingDesc, tei_profileDesc, tei_include
tei_model.headerPart_sequenceOptional =
  tei_encodingDesc?, tei_profileDesc?, tei_include?
tei_model.headerPart_sequenceOptionalRepeatable =
  tei_encodingDesc*, tei_profileDesc*, tei_include*
tei_model.headerPart_sequenceRepeatable =
  tei_encodingDesc+, tei_profileDesc+, tei_include+
tei_model.sourceDescPart = tei_scriptStmt | tei_recordingStmt
tei_model.sourceDescPart_sequence = tei_scriptStmt, tei_recordingStmt
tei_model.sourceDescPart_sequenceOptional =
  tei_scriptStmt?, tei_recordingStmt?
tei_model.sourceDescPart_sequenceOptionalRepeatable =
  tei_scriptStmt*, tei_recordingStmt*
tei_model.sourceDescPart_sequenceRepeatable =
  tei_scriptStmt+, tei_recordingStmt+
tei_model.encodingPart =
  tei_charDesc
  | tei_projectDesc
  | tei_samplingDecl
  | tei_editorialDecl
  | tei_tagsDecl
  | tei_refsDecl
  | tei_classDecl
  | tei_fsdDecl
  | tei_metDecl
  | tei_variantEncoding
tei_model.encodingPart_sequence =
  tei_charDesc,
  tei_projectDesc,
  tei_samplingDecl,
  tei_editorialDecl,
  tei_tagsDecl,
  tei_refsDecl,
  tei_classDecl,
  tei_fsdDecl,
  tei_metDecl,
  tei_variantEncoding
tei_model.encodingPart_sequenceOptional =
  tei_charDesc?,
  tei_projectDesc?,
  tei_samplingDecl?,
  tei_editorialDecl?,
  tei_tagsDecl?,
  tei_refsDecl?,
  tei_classDecl?,
  tei_fsdDecl?,
  tei_metDecl?,
  tei_variantEncoding?
tei_model.encodingPart_sequenceOptionalRepeatable =
  tei_charDesc*,
  tei_projectDesc*,
  tei_samplingDecl*,
  tei_editorialDecl*,
  tei_tagsDecl*,
  tei_refsDecl*,
  tei_classDecl*,
  tei_fsdDecl*,
  tei_metDecl*,
  tei_variantEncoding*
tei_model.encodingPart_sequenceRepeatable =
  tei_charDesc+,
  tei_projectDesc+,
  tei_samplingDecl+,
  tei_editorialDecl+,
  tei_tagsDecl+,
  tei_refsDecl+,
  tei_classDecl+,
  tei_fsdDecl+,
  tei_metDecl+,
  tei_variantEncoding+
tei_model.editorialDeclPart =
  tei_correction
  | tei_normalization
  | tei_quotation
  | tei_hyphenation
  | tei_segmentation
  | tei_stdVals
  | tei_interpretation
tei_model.editorialDeclPart_sequence =
  tei_correction,
  tei_normalization,
  tei_quotation,
  tei_hyphenation,
  tei_segmentation,
  tei_stdVals,
  tei_interpretation
tei_model.editorialDeclPart_sequenceOptional =
  tei_correction?,
  tei_normalization?,
  tei_quotation?,
  tei_hyphenation?,
  tei_segmentation?,
  tei_stdVals?,
  tei_interpretation?
tei_model.editorialDeclPart_sequenceOptionalRepeatable =
  tei_correction*,
  tei_normalization*,
  tei_quotation*,
  tei_hyphenation*,
  tei_segmentation*,
  tei_stdVals*,
  tei_interpretation*
tei_model.editorialDeclPart_sequenceRepeatable =
  tei_correction+,
  tei_normalization+,
  tei_quotation+,
  tei_hyphenation+,
  tei_segmentation+,
  tei_stdVals+,
  tei_interpretation+
tei_model.profileDescPart =
  tei_textDesc
  | tei_particDesc
  | tei_settingDesc
  | tei_langUsage
  | tei_textClass
  | tei_handShift
  | tei_handList
tei_model.profileDescPart_sequence =
  tei_textDesc,
  tei_particDesc,
  tei_settingDesc,
  tei_langUsage,
  tei_textClass,
  tei_handShift,
  tei_handList
tei_model.profileDescPart_sequenceOptional =
  tei_textDesc?,
  tei_particDesc?,
  tei_settingDesc?,
  tei_langUsage?,
  tei_textClass?,
  tei_handShift?,
  tei_handList?
tei_model.profileDescPart_sequenceOptionalRepeatable =
  tei_textDesc*,
  tei_particDesc*,
  tei_settingDesc*,
  tei_langUsage*,
  tei_textClass*,
  tei_handShift*,
  tei_handList*
tei_model.profileDescPart_sequenceRepeatable =
  tei_textDesc+,
  tei_particDesc+,
  tei_settingDesc+,
  tei_langUsage+,
  tei_textClass+,
  tei_handShift+,
  tei_handList+
tei_fs =
  
  ## (Feature structure) represents a feature structure, that is, a
  ##   collection of feature-value pairs organized as a
  ## structural unit.
  element fs { tei_fs.content, tei_fs.attributes }
tei_fs.content = tei_f*
tei_fs.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the type of the feature structure.
  attribute type { tei_data.enumerated }?,
  
  ## references the feature-value specifications making up this feature structure.
  attribute feats {
    list { tei_data.pointer+ }
  }?,
  empty
tei_f =
  
  ## (Feature) represents a feature value specification, that
  ##   is, the association of a name with a value of any of several different types.
  element f { tei_f.content, tei_f.attributes }
tei_f.content = tei_model.featureVal*
tei_f.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides a name for the feature.
  attribute name { tei_data.name },
  
  ## references any element which can be used to represent the
  ##   value of a feature.
  attribute fVal { tei_data.pointer }?,
  empty
tei_binary =
  
  ## (binary value) represents the value part of a feature-value specification which can contain either
  ##   of exactly two possible values.
  element binary { tei_binary.content, tei_binary.attributes }
tei_binary.content = empty
tei_binary.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies a binary value.
  attribute value { tei_data.truthValue },
  empty
tei_symbol =
  
  ## (Symbolic value) represents the value part of a feature-value specification
  ##   which contains one of a finite list of symbols.
  element symbol { tei_symbol.content, tei_symbol.attributes }
tei_symbol.content = empty
tei_symbol.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies the symbolic value for the feature, one of a finite list that
  ## may be specified in a feature declaration.
  attribute value { tei_data.word },
  empty
tei_numeric =
  
  ## (Numeric value) represents the value part of a feature-value specification
  ##   which contains a numeric value or range.
  element numeric { tei_numeric.content, tei_numeric.attributes }
tei_numeric.content = empty
tei_numeric.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies a lower bound for the numeric value represented,
  ##       and also (if max is not supplied) its upper bound.
  attribute value { tei_data.numeric },
  
  ## supplies an upper bound for the numeric value represented.
  attribute max { tei_data.numeric }?,
  
  ## specifies whether the value represented should be
  ##	  truncated to give an integer value.
  attribute trunc { tei_data.truthValue }?,
  empty
tei_string =
  
  ## (String value) represents the value part of a feature-value specification
  ##   which contains a string.
  element string { tei_string.content, tei_string.attributes }
tei_string.content = tei_macro.xtext
tei_string.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vLabel =
  
  ## (value label) represents the value part of a feature-value specification
  ##   which appears at more than one point in a feature structure
  element vLabel { tei_vLabel.content, tei_vLabel.attributes }
tei_vLabel.content = tei_model.featureVal?
tei_vLabel.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies a name for the sharing point.
  attribute name { tei_data.word },
  empty
tei_vColl =
  
  ## (collection of values) represents the value part of a feature-value specification
  ##   which contains multiple values organized as a set, bag, or list.
  element vColl { tei_vColl.content, tei_vColl.attributes }
tei_vColl.content = (tei_fs | tei_model.singleVal)*
tei_vColl.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates organization of given value or values as  set, bag or list.
  attribute org {
    
    ## (indicates that the given values are organized as a set.
    ##    ) 
    "set"
    | 
      ## (indicates that the given values are organized as a
      ## bag (multiset).
      ##    ) 
      "bag"
    | 
      ## (indicates that the given values are organized as a
      ## list.) 
      "list"
  }?,
  empty
tei_default =
  
  ## (Default feature value) represents the value part of a feature-value specification
  ##   which contains a defaulted value.
  element default { tei_default.content, tei_default.attributes }
tei_default.content = empty
tei_default.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vAlt =
  
  ## (Value alternation) represents the value part of a feature-value specification
  ##   which contains a set of values, only one of which can be valid.
  element vAlt { tei_vAlt.content, tei_vAlt.attributes }
tei_vAlt.content = tei_model.featureVal, tei_model.featureVal+
tei_vAlt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vNot =
  
  ## (Value negation) represents a feature value which is the negation of its content.
  element vNot { tei_vNot.content, tei_vNot.attributes }
tei_vNot.content = tei_model.featureVal
tei_vNot.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_vMerge =
  
  ## (Merged collection of values) represents a feature value which is the result of merging
  ##   together the feature values contained by its children, using the organization
  ##   specified by the org attribute.
  element vMerge { tei_vMerge.content, tei_vMerge.attributes }
tei_vMerge.content = tei_model.featureVal+
tei_vMerge.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates the organization of the resulting merged values as  set, bag or list.
  attribute org {
    
    ## (indicates that the resulting values are organized as a set.) 
    "set"
    | 
      ## (indicates that the resulting values are organized as a bag (multiset).
      ##    ) 
      "bag"
    | 
      ## (indicates that the resulting values are organized as a list.) 
      "list"
  }?,
  empty
tei_fLib =
  
  ## (Feature library) assembles a library of feature elements.
  element fLib { tei_fLib.content, tei_fLib.attributes }
tei_fLib.content = tei_f+
tei_fLib.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_fvLib =
  
  ## (Feature-value library) assembles a library of reusable feature value elements
  ##   (including complete feature structures).
  element fvLib { tei_fvLib.content, tei_fvLib.attributes }
tei_fvLib.content = tei_model.featureVal*
tei_fvLib.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_link =
  
  ## defines an association or hypertextual link
  ## among elements or passages, of some type
  ## not more precisely specifiable by other elements.
  element link { tei_link.content, tei_link.attributes }
tei_link.content = empty
tei_link.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  
  ## specifies the identifiers of the elements or passages
  ##     to be linked or associated.
  ##  
  attribute targets {
    list { tei_data.pointer, tei_data.pointer+ }
  },
  empty
tei_linkGrp =
  
  ## defines a collection of associations or hypertextual links.
  element linkGrp { tei_linkGrp.content, tei_linkGrp.attributes }
tei_linkGrp.content = (tei_link | tei_ptr)+
tei_linkGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  empty
tei_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as
  ## an anonymous container for phrase or inter level elements analogous to, but
  ## without the semantic baggage of, a paragraph.
  element ab { tei_ab.content, tei_ab.attributes }
tei_ab.content = tei_macro.paraContent
tei_ab.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## specifies whether or not the block is complete. 
  [ a1:defaultValue = "N" ]
  attribute part {
    
    ## (the block is incomplete) 
    "Y"
    | 
      ## (either the block is complete, or no claim is made as to its
      ## completeness) 
      "N"
    | 
      ## (the initial part of an incomplete block) 
      "I"
    | 
      ## (a medial part of an incomplete block) 
      "M"
    | 
      ## (the final part of an incomplete block) 
      "F"
  }?,
  empty
tei_anchor =
  
  ## (anchor point) attaches an identifier to a
  ## point within a text, whether or not it corresponds with a textual
  ## element.
  element anchor { tei_anchor.content, tei_anchor.attributes }
tei_anchor.content = empty
tei_anchor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_seg =
  
  ## (arbitrary segment) contains any arbitrary phrase-level unit of text (including
  ## other seg elements).
  element seg { tei_seg.content, tei_seg.attributes }
tei_seg.content = tei_macro.paraContent
tei_seg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.segLike.attribute.type,
  att.segLike.attribute.function,
  att.segLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  
  ## provides a sub-categorization of the segment marked.
  attribute subtype { tei_data.word }?,
  empty
tei_when =
  
  ## (when) indicates a point in time either relative to other elements in the
  ## same timeline tag, or absolutely.
  element when { tei_when.content, tei_when.attributes }
tei_when.content = empty
tei_when.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies an absolute value for the time.
  attribute absolute { tei_data.temporal }?,
  
  ## specifies the unit of time in which the  interval
  ## value is expressed, if this is not inherited from the parent timeLine.
  ## Suggested values include: 1] s (seconds); 2] ms (milliseconds); 3] m (minutes); 4] h (hours); 5] d (days)
  attribute unit { tei_data.enumerated }?,
  
  ## specifies the numeric portion of a time interval
  attribute interval {
    xsd:float { minExclusive = "0" }
    | "unknown"
  }?,
  
  ## identifies the reference point for determining the time of the
  ## current when element, which is obtained by adding the interval to the
  ## time of the reference point.
  attribute since { tei_data.pointer }?,
  empty
tei_timeline =
  
  ## (timeline) provides a set of ordered points in time which can be linked to
  ## elements of a spoken text to create a temporal alignment of that text.
  element timeline { tei_timeline.content, tei_timeline.attributes }
tei_timeline.content = tei_when+
tei_timeline.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## designates the origin of the timeline, i.e. the time at which it
  ## begins.
  attribute origin { tei_data.pointer },
  
  ## specifies the unit of time corresponding to the
  ##	interval value of the timeline or of its
  ##	constituent points in time.
  ## Suggested values include: 1] d (days); 2] h (hours); 3] m (minutes); 4] s (seconds); 5] ms (milliseconds)
  attribute unit { tei_data.enumerated }?,
  
  ## specifies the numeric portion of a time interval
  attribute interval {
    xsd:float { minExclusive = "0" }
    | "regular"
    | "irregular"
  }?,
  empty
tei_join =
  
  ## identifies a possibly fragmented segment of text, by pointing
  ## at the possibly discontiguous elements which compose it.
  element join { tei_join.content, tei_join.attributes }
tei_join.content = tei_macro.glossSeq
tei_join.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  
  ## specifies the identifiers of the elements or passages
  ##        to be joined into a virtual
  ##        element.
  attribute targets {
    list { tei_data.pointer, tei_data.pointer+ }
  },
  
  ## specifies the name of an element
  ## which this aggregation
  ## may be understood to represent.
  attribute result { tei_data.name }?,
  
  ## indicates whether the targets to be joined include the
  ## entire element indicated (the entire subtree including its root),
  ## or just the children of the target (the branches of the subtree).
  [ a1:defaultValue = "root" ]
  attribute scope {
    
    ## (the rooted subtrees indicated by the targets
    ## attribute are joined, each subtree become a child of the virtual
    ## element created by the join) 
    "root"
    | 
      ## (the children of the subtrees indicated by the
      ## targets attribute become the children of the virtual element
      ## (i.e. the roots of the subtrees are discarded)) 
      "branches"
  }?,
  empty
tei_joinGrp =
  
  ## (join group) groups a collection of join elements and possibly
  ##   pointers.
  element joinGrp { tei_joinGrp.content, tei_joinGrp.attributes }
tei_joinGrp.content = tei_macro.glossSeq?, (tei_join | tei_ptr)+
tei_joinGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  
  ## describes the result of the joins gathered in this collection.
  attribute result { tei_data.name }?,
  empty
tei_alt =
  
  ## (alternation) identifies an alternation or a set of choices among elements or passages.
  element alt { tei_alt.content, tei_alt.attributes }
tei_alt.content = empty
tei_alt.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  
  ## specifies the identifiers of the alternative elements or passages.
  attribute targets {
    list { tei_data.pointer, tei_data.pointer+ }
  },
  
  ## states whether the alternations gathered in this collection are exclusive or inclusive.
  attribute mode {
    
    ## (indicates that the alternation is exclusive, i.e. that
    ##		  at most one of the alternatives occurs.) 
    "excl"
    | 
      ## (indicates that the alternation is not exclusive, i.e. that
      ##		  one or more of the alternatives occur.) 
      "incl"
  }?,
  
  ## If mode is excl, each weight
  ##       states the probability that the corresponding alternative
  ##       occurs. If modeincl each weight states
  ##       the probability that the corresponding alternative occurs given
  ##       that at least one of the other alternatives occurs.
  attribute weights {
    list { tei_data.probability+ }
  }?,
  empty
tei_altGrp =
  
  ## (alternation group) groups a collection of alt elements and possibly
  ## pointers.
  element altGrp { tei_altGrp.content, tei_altGrp.attributes }
tei_altGrp.content = (tei_alt | tei_ptr)*
tei_altGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc,
  att.pointing.attribute.type,
  att.pointing.attribute.evaluate,
  
  ## states whether the alternations gathered in this collection are
  ## exclusive or inclusive.
  [ a1:defaultValue = "excl" ]
  attribute mode {
    
    ## (indicates that the alternation is exclusive, i.e. that at
    ## most one of the alternatives occurs.) 
    "excl"
    | 
      ## (indicates that the alternation is not exclusive, i.e. that
      ## one or more of the alternatives occur.) 
      "incl"
  }?,
  empty
tei_att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  empty
att.global.linking.attribute.corresp =
  
  ## points to elements that correspond to the current
  ##       element in some way.
  attribute corresp {
    list { tei_data.pointer+ }
  }?
att.global.linking.attribute.synch =
  
  ## points to elements that are synchronous with the current
  ##       element.
  attribute synch {
    list { tei_data.pointer+ }
  }?
att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current
  ##       element.
  attribute sameAs { tei_data.pointer }?
att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a
  ##	copy.
  attribute copyOf { tei_data.pointer }?
att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which
  ##       the current element is part.
  attribute next { tei_data.pointer }?
att.global.linking.attribute.prev =
  
  ## points to the previous element of a virtual aggregate of
  ##       which the current element is part.
  attribute prev { tei_data.pointer }?
att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation
  ##       with the current element.
  attribute exclude {
    list { tei_data.pointer+ }
  }?
att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is
  ##       selected, the ambiguity or uncertainty is marked as resolved. If
  ##       more than one alternant is selected, the degree of ambiguity or
  ##       uncertainty is marked as reduced by the number of alternants not
  ##       selected.
  attribute select {
    list { tei_data.pointer+ }
  }?
tei_att.pointing.attributes =
  att.pointing.attribute.type, att.pointing.attribute.evaluate, empty
att.pointing.attribute.type =
  
  ## categorizes the pointer in some respect, using any
  ##       convenient set of categories.
  attribute type { tei_data.word }?
att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a
  ##       pointer is itself a pointer.
  attribute evaluate {
    
    ## (if the element pointed to is itself a pointer, then
    ##	  the target of that pointer will be taken, and so on, until
    ##	  an element is found which is not a pointer.) 
    "all"
    | 
      ## (if the element pointed to is itself a pointer, then
      ##	  its target (whether a pointer or not) is taken as the target
      ##	  of this pointer.) 
      "one"
    | 
      ## (no further evaluation of targets is carried out
      ##	  beyond that needed to find the element specified in the
      ##	  pointer's target.) 
      "none"
  }?
tei_att.pointing.group.attributes =
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc,
  empty
att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements
  ##       within which all elements indicated by the contents of this
  ##       element lie.
  attribute domains {
    list { tei_data.name+ }
  }?
att.pointing.group.attribute.targFunc =
  
  ## describes the function of each of the values of the
  ##       targets attribute of the enclosed link,
  ##       join or alt tags.
  attribute targFunc {
    list { tei_data.word+ }
  }?
tei_msDescription =
  
  ## contains a description of a single identifiable
  ## manuscript.
  element msDescription {
    tei_msDescription.content, tei_msDescription.attributes
  }
tei_msDescription.content =
  tei_msIdentifier,
  tei_head*,
  (tei_model.pLike+
   | (tei_msContents?,
      tei_physDesc?,
      tei_history?,
      tei_additional?,
      tei_msPart*))
tei_msDescription.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_catchwords =
  
  ## describes the system used to ensure
  ## correct ordering of the quires making up a codex or incunable,
  ## typically by means of annotations at the foot of the page.
  element catchwords {
    tei_catchwords.content, tei_catchwords.attributes
  }
tei_catchwords.content = tei_macro.phraseSeq
tei_catchwords.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_dimensions =
  
  ## contains any kind of dimensional specification. 
  element dimensions {
    tei_dimensions.content, tei_dimensions.attributes
  }
tei_dimensions.content = (tei_height?, tei_width?, tei_depth?)+
tei_dimensions.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.measured.attribute.unit,
  att.measured.attribute.scope,
  
  ## indicates which aspect of the object is being measured. 
  ## Sample values include: 1] leaves (dimensions relate to one or more leaves (e.g. a single leaf, a
  ## gathering, or a separately bound part)); 2] ruled (dimensions relate to the area of a leaf which has been ruled in
  ## preparation for writing.); 3] pricked (dimensions relate to the area of a leaf which has been pricked
  ## out in preparation for ruling (used where this differs significantly
  ## from the ruled area, or where the ruling is not measurable).); 4] written (dimensions relate to the area of a leaf which has been written,
  ## with the height measured from the top of the minims on the top line of
  ## writing, to the bottom of the minims on the bottom line of writing.); 5] miniatures (dimensions relate to the miniatures within the manuscript); 6] binding (dimensions relate to the binding in which the codex or manuscript is contained); 7] box (dimensions relate to the box or other container in which  the
  ## manuscript is stored.)
  attribute type { tei_data.enumerated }?,
  empty
tei_height =
  
  ## contains a measurement measured along the axis parallel to the spine. 
  element height { tei_height.content, tei_height.attributes }
tei_height.content = tei_macro.xtext
tei_height.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.measured.attribute.unit,
  att.measured.attribute.scope,
  empty
tei_depth =
  
  ## contains a measurement measured across the spine. 
  element depth { tei_depth.content, tei_depth.attributes }
tei_depth.content = tei_macro.xtext
tei_depth.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.measured.attribute.unit,
  att.measured.attribute.scope,
  empty
tei_width =
  
  ## contains a measurement measured along the axis perpendicular to the spine. 
  element width { tei_width.content, tei_width.attributes }
tei_width.content = tei_macro.xtext
tei_width.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.measured.attribute.unit,
  att.measured.attribute.scope,
  empty
tei_heraldry =
  
  ## contains a heraldic formula
  ## or phrase, typically found as part of a blazon, coat of arms, etc. 
  ##
  element heraldry { tei_heraldry.content, tei_heraldry.attributes }
tei_heraldry.content = tei_macro.phraseSeq
tei_heraldry.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_locus =
  
  ## defines a location  within a manuscript or manuscript part, usually as a (possibly discontinuous) sequence of folio references. 
  element locus { tei_locus.content, tei_locus.attributes }
tei_locus.content = tei_macro.xtext
tei_locus.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the foliation scheme in terms of which the location is being specified.
  attribute scheme { tei_data.enumerated }?,
  
  ## specifies the starting point of the location in a normalized form.
  attribute from { tei_data.word }?,
  
  ## specifies the end-point of the location in a normalized form.
  attribute to { tei_data.word }?,
  
  ## supplies a link to one or more page images or
  ##	transcriptions of the specified range of folios.
  attribute targets {
    list { tei_data.pointer+ }
  }?,
  empty
tei_material =
  
  ## contains a word or phrase describing the
  ##   material of which  a manuscript (or part of a manuscript) is composed.
  ##   
  element material { tei_material.content, tei_material.attributes }
tei_material.content = tei_macro.phraseSeq
tei_material.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_origDate =
  
  ## contains any form of date, used to
  ##   identify the date of origin for a manuscript or manuscript part.
  ##   
  element origDate { tei_origDate.content, tei_origDate.attributes }
tei_origDate.content = text
tei_origDate.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_origPlace =
  
  ## contains any form of place name, used to identify the
  ## place of origin for a manuscript or manuscript part. 
  element origPlace { tei_origPlace.content, tei_origPlace.attributes }
tei_origPlace.content = tei_macro.xtext
tei_origPlace.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_secFol =
  
  ## The word or words taken from a fixed point
  ## in a codex (typically the beginning of the
  ## second leaf) in order
  ## to provide a unique identifier for it.
  ##
  element secFol { tei_secFol.content, tei_secFol.attributes }
tei_secFol.content = tei_macro.phraseSeq
tei_secFol.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_signatures =
  
  ## contains discussion of the leaf or quire signatures found within a codex.
  element signatures {
    tei_signatures.content, tei_signatures.attributes
  }
tei_signatures.content = tei_macro.phraseSeq
tei_signatures.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_stamp =
  
  ## contains a word or phrase describing a
  ## stamp or similar device.
  element stamp { tei_stamp.content, tei_stamp.attributes }
tei_stamp.content = tei_macro.phraseSeq
tei_stamp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
tei_watermark =
  
  ## contains a word or phrase describing a
  ## watermark or similar device.
  element watermark { tei_watermark.content, tei_watermark.attributes }
tei_watermark.content = tei_macro.phraseSeq
tei_watermark.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_msIdentifier =
  
  ## contains the information required to identify
  ## the  manuscript being described. 
  element msIdentifier {
    tei_msIdentifier.content, tei_msIdentifier.attributes
  }
tei_msIdentifier.content =
  ((tei_model.placeNamePart_sequenceOptional,
    tei_institution?,
    tei_repository,
    tei_collection?,
    tei_idno?)
   | tei_msName),
  (tei_altIdentifier | tei_msName)*
tei_msIdentifier.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_institution =
  
  ## contains the name of an
  ## organization, such as a university or library, within which a
  ## manuscript repository is located.
  element institution {
    tei_institution.content, tei_institution.attributes
  }
tei_institution.content = tei_macro.xtext
tei_institution.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  empty
tei_repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution.
  element repository {
    tei_repository.content, tei_repository.attributes
  }
tei_repository.content = tei_macro.xtext
tei_repository.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  empty
tei_collection =
  
  ## contains the name of a collection of
  ## manuscripts, not necessarily located within a single repository. 
  element collection {
    tei_collection.content, tei_collection.attributes
  }
tei_collection.content = tei_macro.xtext
tei_collection.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  empty
tei_altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for
  ## a manuscript, such as a former catalogue number.
  element altIdentifier {
    tei_altIdentifier.content, tei_altIdentifier.attributes
  }
tei_altIdentifier.content =
  tei_model.placeNamePart_sequenceOptional,
  tei_institution?,
  tei_repository?,
  tei_collection?,
  tei_idno,
  tei_note?
tei_altIdentifier.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_msName =
  
  ## (alternative name) contains any form of unstructured alternative
  ## name used for a manuscript, such as an  ocellus
  ## nominum, or nickname. 
  element msName { tei_msName.content, tei_msName.attributes }
tei_msName.content = tei_macro.xtext
tei_msName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_colophon =
  
  ## contains the  colophon
  ## of a  manuscript item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript.
  element colophon { tei_colophon.content, tei_colophon.attributes }
tei_colophon.content = tei_macro.phraseSeq
tei_colophon.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_explicit =
  
  ## contains the  explicit of a
  ## manuscript item, that is, the closing words of the text proper,
  ## exclusive of any rubric or colophon which might follow it.
  ##   
  element explicit { tei_explicit.content, tei_explicit.attributes }
tei_explicit.content = tei_macro.phraseSeq
tei_explicit.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.msExcerpt.attribute.defective,
  empty
tei_filiation =
  
  ## contains information concerning the manuscript's filiation, i.e. its relationship to other surviving manuscripts of the same text, its protographs, antigraphs and apographs.
  element filiation { tei_filiation.content, tei_filiation.attributes }
tei_filiation.content = tei_macro.specialPara
tei_filiation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_finalRubric =
  
  ## contains the string of words that denotes the end of a text division, often with an assertion as to its author and title, usually set off from the text itself by red ink, by a different size or type of script, or by some other such visual device.
  element finalRubric {
    tei_finalRubric.content, tei_finalRubric.attributes
  }
tei_finalRubric.content = tei_macro.phraseSeq
tei_finalRubric.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_incipit =
  
  ## contains the incipit of a manuscript item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipts were, in fomer times, frequently used a means of reference to a work, in place of a title.
  element incipit { tei_incipit.content, tei_incipit.attributes }
tei_incipit.content = tei_macro.phraseSeq
tei_incipit.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.msExcerpt.attribute.defective,
  empty
tei_msContents =
  
  ## describes the intellectual content of
  ##   a manuscript or manuscript part, either as a series of paragraphs or
  ##   as a series of structured manuscript items.
  element msContents {
    tei_msContents.content, tei_msContents.attributes
  }
tei_msContents.content =
  tei_model.pLike+
  | (tei_summary?, tei_textLang?, (tei_msItem | tei_msItemStruct)+)
tei_msContents.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.msExcerpt.attribute.defective,
  
  ## identifies the text types or classifications applicable
  ##	to this object.
  attribute class { tei_data.code }?,
  empty
tei_msItem =
  
  ## describes an individual work or item within the intellectual
  ##   content of a manuscript or manuscript part. 
  element msItem { tei_msItem.content, tei_msItem.attributes }
tei_msItem.content =
  tei_locus?,
  (tei_model.pLike+ | (tei_model.msItemPart | tei_model.global)+)
tei_msItem.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.msExcerpt.attribute.defective,
  
  ## identifies the text types or classifications applicable to this
  ## item
  attribute class { tei_data.code }?,
  empty
tei_msItemStruct =
  
  ## contains a structured description for an
  ##   individual work or item within the intellectual content of a
  ##   manuscript or manuscript part.
  element msItemStruct {
    tei_msItemStruct.content, tei_msItemStruct.attributes
  }
tei_msItemStruct.content =
  tei_locus?,
  (tei_model.pLike+
   | (tei_author*,
      tei_respStmt*,
      tei_title*,
      tei_rubric?,
      tei_incipit?,
      tei_msItemStruct*,
      tei_explicit?,
      tei_finalRubric?,
      tei_colophon*,
      tei_decoNote*,
      tei_listBibl*,
      tei_bibl*,
      tei_filiation*,
      tei_model.noteLike*,
      tei_textLang?))
tei_msItemStruct.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.msExcerpt.attribute.defective,
  
  ## identifies the text types or classifications applicable to this
  ## item
  attribute class { tei_data.code }?,
  empty
tei_rubric =
  
  ## contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a
  ## manuscript signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, usually in red ink, or by use of different size or type of script, or some other such visual device.
  element rubric { tei_rubric.content, tei_rubric.attributes }
tei_rubric.content = tei_macro.phraseSeq
tei_rubric.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_summary =
  
  ## contains a brief summary of the
  ## intellectual content of an item, provided by the cataloguer 
  element summary { tei_summary.content, tei_summary.attributes }
tei_summary.content = tei_macro.phraseSeq
tei_summary.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_textLang =
  
  ## describes the languages and writing systems used by a
  ## manuscript (as opposed to its description, which is described in the langUsage element)
  element textLang { tei_textLang.content, tei_textLang.attributes }
tei_textLang.content = tei_macro.phraseSeq
tei_textLang.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## supplies a code which identifies the chief language used
  ##       in the manuscript.
  attribute mainLang { tei_data.language }?,
  
  ## one or more codes identifying any other languages used in
  ##       the manuscript.
  attribute otherLangs {
    list { tei_data.language* }
  }?,
  empty
tei_physDesc =
  
  ## contains a full physical description of a
  ## manuscript or manuscript part, optionally subdivided using more
  ## specialised elements from the model.physDescPart class.
  element physDesc { tei_physDesc.content, tei_physDesc.attributes }
tei_physDesc.content =
  tei_model.pLike+ | tei_model.physDescPart_sequenceOptional
tei_physDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_objectDesc =
  
  ## contains a description of the physical
  ##   components making up the object which is being described.
  element objectDesc {
    tei_objectDesc.content, tei_objectDesc.attributes
  }
tei_objectDesc.content =
  tei_model.pLike+ | (tei_supportDesc?, tei_layoutDesc?)
tei_objectDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## a short  project-specific name identifying the physical form of
  ##       the carrier, for example as a codex, roll, fragment, partial leaf,
  ##       cutting etc.
  attribute form { tei_data.enumerated }?,
  empty
tei_supportDesc =
  
  ## groups elements describing the physical support for the written part of a manuscript.
  element supportDesc {
    tei_supportDesc.content, tei_supportDesc.attributes
  }
tei_supportDesc.content =
  tei_model.pLike+
  | (tei_support?,
     tei_extent?,
     tei_foliation?,
     tei_collation?,
     tei_condition?)
tei_supportDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## a short project-defined name for the material composing
  ##       the majority of the support
  attribute material { tei_data.enumerated }?,
  empty
tei_support =
  
  ## contains a description of the materials
  ## etc. which make up the physical support for the written part of a manuscript.
  element support { tei_support.content, tei_support.attributes }
tei_support.content = tei_macro.specialPara
tei_support.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_collation =
  
  ## contains a description of how the leaves or bifolia are physically
  ## arranged.
  element collation { tei_collation.content, tei_collation.attributes }
tei_collation.content = tei_macro.specialPara
tei_collation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_foliation =
  
  ## describes the numbering system or systems used to 
  ## count the leaves or pages in a codex.
  element foliation { tei_foliation.content, tei_foliation.attributes }
tei_foliation.content = tei_macro.specialPara
tei_foliation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_condition =
  
  ## contains a description of the physical
  ## condition of the manuscript. 
  element condition { tei_condition.content, tei_condition.attributes }
tei_condition.content = tei_macro.specialPara
tei_condition.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_layoutDesc =
  
  ## collects the set of layout descriptions applicable to a manuscript.
  element layoutDesc {
    tei_layoutDesc.content, tei_layoutDesc.attributes
  }
tei_layoutDesc.content = tei_model.pLike+ | tei_layout+
tei_layoutDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_layout =
  
  ## describes how text is laid out on the
  ##   page, including information about any ruling, pricking, or other
  ##   evidence of page-preparation techniques.
  element layout { tei_layout.content, tei_layout.attributes }
tei_layout.content = tei_macro.specialPara
tei_layout.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the number of columns per page
  attribute columns {
    list { tei_data.count, tei_data.count? }
  }?,
  
  ## specifies the number of ruled lines per column
  attribute ruledLines {
    list { tei_data.count, tei_data.count? }
  }?,
  
  ## specifies the number of written lines per
  ##       colum
  attribute writtenLines {
    list { tei_data.count, tei_data.count? }
  }?,
  empty
tei_handDesc =
  
  ## contains a description of all the different kinds of writing  used in a manuscript.
  element handDesc { tei_handDesc.content, tei_handDesc.attributes }
tei_handDesc.content = (tei_handNote | tei_model.pLike)+
tei_handDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the number of distinct hands identified within the manuscript
  attribute hands { tei_data.count }?,
  empty
tei_handNote =
  
  ## (note on hand) describes a particular style
  ## or hand distinguished within a manuscript.
  element handNote { tei_handNote.content, tei_handNote.attributes }
tei_handNote.content = tei_macro.specialPara
tei_handNote.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives a standard name or other identifier for the scribe
  ## believed to be responsible for this hand.
  attribute scribe { tei_data.name }?,
  
  ## characterizes the particular script or writing style used by
  ## this hand, for example secretary, copperplate, Chancery, Italian, etc..
  attribute script {
    list { tei_data.name+ }
  }?,
  
  ## describes the tint or type of ink, e.g. brown, or other
  ## writing medium, e.g. pencil
  attribute medium { tei_data.enumerated }?,
  
  ## specifies how widely this  hand is used in the manuscript.
  attribute scope {
    
    ## (only this hand is used throughout the manuscript) 
    "sole"
    | 
      ## (this hand is used through most of the manuscript) 
      "major"
    | 
      ## (this hand is used occasionally in the manuscript) 
      "minor"
  }?,
  empty
tei_musicNotation =
  
  ## contains description of type of musical notation.
  element musicNotation {
    tei_musicNotation.content, tei_musicNotation.attributes
  }
tei_musicNotation.content = tei_macro.specialPara
tei_musicNotation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_decoDesc =
  
  ## contains a description of the decoration of a manuscript, either as a sequence of paragraphs, or as a sequence of topically organised decoNote elements.
  element decoDesc { tei_decoDesc.content, tei_decoDesc.attributes }
tei_decoDesc.content = tei_model.pLike+ | tei_decoNote+
tei_decoDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_decoNote =
  
  ## contains a note describing either a
  ## decorative component of a manuscript, or a fairly homogenous class of
  ## such components.
  element decoNote { tei_decoNote.content, tei_decoNote.attributes }
tei_decoNote.content = tei_macro.specialPara
tei_decoNote.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_additions =
  
  ## contains a description of any significant additions found
  ## within a manuscript, such as marginalia or other annotations. 
  element additions { tei_additions.content, tei_additions.attributes }
tei_additions.content = tei_macro.specialPara
tei_additions.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_bindingDesc =
  
  ## describes the present and former bindings of a manuscript, either
  ## as a series of paragraphs or as a series of distinct binding elements,
  ## one for each binding of the manuscript. 
  element bindingDesc {
    tei_bindingDesc.content, tei_bindingDesc.attributes
  }
tei_bindingDesc.content =
  (tei_model.pLike | tei_decoNote)+ | tei_binding+
tei_bindingDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_binding =
  
  ## contains a description of one binding, i.e. type of covering, boards, etc. applied to a manuscript
  element binding { tei_binding.content, tei_binding.attributes }
tei_binding.content = (tei_model.pLike | tei_decoNote)+
tei_binding.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  
  ## specifies whether or not the binding is contemporary with the majority of its contents
  attribute contemporary { tei_data.xTruthValue }?,
  empty
tei_sealDesc =
  
  ## describes the seals or other external items attached to a manuscript, either
  ## as a series of paragraphs or as a series of distinct seal elements,
  ## possibly with additional decoNotes. 
  element sealDesc { tei_sealDesc.content, tei_sealDesc.attributes }
tei_sealDesc.content = tei_model.pLike+ | (tei_decoNote | tei_seal)+
tei_sealDesc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_seal =
  
  ## contains a description of one seal or similar
  ##   attachment applied to a manuscript
  element seal { tei_seal.content, tei_seal.attributes }
tei_seal.content = (tei_model.pLike | tei_decoNote)+
tei_seal.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  
  ## specifies whether or not the seal is contemporary with the
  ##       item to which it is affixed
  attribute contemporary { tei_data.xTruthValue }?,
  empty
tei_accMat =
  
  ## (accompanying material) contains details of any significant additional
  ## material which may be closely associated with the manuscript being
  ## described, such as non-contemporaneous documents or fragments bound in
  ## with the manuscript at some earlier historical period.
  element accMat { tei_accMat.content, tei_accMat.attributes }
tei_accMat.content = tei_macro.specialPara
tei_accMat.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_history =
  
  ##  groups elements
  ## describing the full history of a manuscript or manuscript part.
  element history { tei_history.content, tei_history.attributes }
tei_history.content =
  tei_model.pLike+ | (tei_origin?, tei_provenance*, tei_acquisition?)
tei_history.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_origin =
  
  ## contains any descriptive or other information
  ## concerning the origin of  a manuscript or manuscript part. 
  element origin { tei_origin.content, tei_origin.attributes }
tei_origin.content = tei_macro.specialPara
tei_origin.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
tei_provenance =
  
  ## contains any descriptive or other information
  ## concerning a single identifiable episode during the history of a manuscript
  ## or manuscript part, after its creation but before its acquisition. 
  element provenance {
    tei_provenance.content, tei_provenance.attributes
  }
tei_provenance.content = tei_macro.specialPara
tei_provenance.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
tei_acquisition =
  
  ## contains any descriptive or other information
  ## concerning the process by which a manuscript or manuscript part entered the holding
  ## institution. 
  element acquisition {
    tei_acquisition.content, tei_acquisition.attributes
  }
tei_acquisition.content = tei_macro.specialPara
tei_acquisition.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
tei_additional =
  
  ## groups additional information, combining
  ## bibliographic information about a manuscript, or surrogate copies of
  ## it with  curatorial or administrative information. 
  element additional {
    tei_additional.content, tei_additional.attributes
  }
tei_additional.content = tei_adminInfo?, tei_surrogates?, tei_listBibl?
tei_additional.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_adminInfo =
  
  ## (administrative information) contains information about the present
  ## custody and availability of the manuscript, and also about the record
  ## description itself. 
  element adminInfo { tei_adminInfo.content, tei_adminInfo.attributes }
tei_adminInfo.content =
  tei_recordHist?,
  tei_availability?,
  tei_custodialHist?,
  tei_model.noteLike?
tei_adminInfo.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_recordHist =
  
  ## provides information about the source and
  ## revision status of the parent manuscript description itself. 
  element recordHist {
    tei_recordHist.content, tei_recordHist.attributes
  }
tei_recordHist.content = tei_model.pLike+ | (tei_source, tei_change*)
tei_recordHist.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_source =
  
  ## describes the original source for the information contained with a manuscript description. 
  element source { tei_source.content, tei_source.attributes }
tei_source.content = tei_macro.specialPara
tei_source.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_custodialHist =
  
  ## contains a description of a manuscript's custodial history, either
  ## as running prose or as a series of dated custodial events. 
  element custodialHist {
    tei_custodialHist.content, tei_custodialHist.attributes
  }
tei_custodialHist.content = tei_model.pLike+ | tei_custEvent+
tei_custodialHist.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_custEvent =
  
  ## describes a single event during the custodial history of a manuscript.
  element custEvent { tei_custEvent.content, tei_custEvent.attributes }
tei_custEvent.content = tei_macro.specialPara
tei_custEvent.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_surrogates =
  
  ## contains information about any digital or
  ## photographic representations of the manuscript being described which
  ## may exist in the holding institution or elsewhere. 
  element surrogates {
    tei_surrogates.content, tei_surrogates.attributes
  }
tei_surrogates.content = tei_macro.specialPara
tei_surrogates.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_msPart =
  
  ## contains information about an originally
  ## distinct manuscript or part of a manuscript, now forming part of a composite manuscript.
  element msPart { tei_msPart.content, tei_msPart.attributes }
tei_msPart.content =
  tei_altIdentifier,
  tei_head*,
  (tei_model.pLike+
   | (tei_msContents?,
      tei_physDesc?,
      tei_history?,
      tei_additional?,
      tei_msPart*))
tei_msPart.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_att.msExcerpt.attributes = att.msExcerpt.attribute.defective, empty
att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective,
  ##       i.e. incomplete through loss or damage.
  [ a1:defaultValue = "false" ]
  attribute defective { tei_data.xTruthValue }?
tei_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a
  ##   person, possibly including any or all of the person's forenames,
  ##   surnames, honorifics, added names, etc.
  element persName { tei_persName.content, tei_persName.attributes }
tei_persName.content =
  (text
   | tei_model.gLike
   | tei_model.persNamePart
   | tei_model.phrase
   | tei_model.global)*
tei_persName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  
  ## describes the personal name more fully using an open-ended
  ##       list of words or phrases which help to indicate the function,
  ##       e.g. married name, maiden name, pen name,
  ##       religious name, etc.
  attribute type { tei_data.enumerated }?,
  empty
tei_surname =
  
  ## (surname) contains a family (inherited) name, as opposed to a given,
  ## baptismal, or nick name.
  element surname { tei_surname.content, tei_surname.attributes }
tei_surname.content = tei_macro.phraseSeq
tei_surname.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_forename =
  
  ## (forename) contains a forename, given or baptismal name.
  element forename { tei_forename.content, tei_forename.attributes }
tei_forename.content = tei_macro.phraseSeq
tei_forename.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_genName =
  
  ## contains a name component used to distinguish otherwise similar
  ## names on the basis of the relative ages or generations of the persons named.
  element genName { tei_genName.content, tei_genName.attributes }
tei_genName.content = tei_macro.phraseSeq
tei_genName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not
  ## regarded as part of it, such as  van der or of.
  element nameLink { tei_nameLink.content, tei_nameLink.attributes }
tei_nameLink.content = tei_macro.phraseSeq
tei_nameLink.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_addName =
  
  ## (additional name) contains an additional name component, such as a nickname, 
  ## epithet, or alias, or any other descriptive phrase used within a
  ## personal name.
  element addName { tei_addName.content, tei_addName.attributes }
tei_addName.content = tei_macro.phraseSeq
tei_addName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_roleName =
  
  ## (roleName) contains a name component which indicates that the referent has a
  ## particular role or position in society, such as an official title or
  ## rank.
  element roleName { tei_roleName.content, tei_roleName.attributes }
tei_roleName.content = tei_macro.phraseSeq
tei_roleName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
tei_placeName =
  
  ## contains an absolute or relative place name. 
  element placeName { tei_placeName.content, tei_placeName.attributes }
tei_placeName.content =
  (text
   | tei_model.gLike
   | tei_model.placeNamePart
   | tei_model.phrase
   | tei_model.global)*
tei_placeName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  empty
tei_bloc =
  
  ## (bloc) contains the name of a geo-political unit consisting of  two or
  ## more nation states or countries.
  element bloc { tei_bloc.content, tei_bloc.attributes }
tei_bloc.content = tei_macro.phraseSeq
tei_bloc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_country =
  
  ## (country) contains the name of a geo-political unit, such as a nation,
  ## country, colony, or commonwealth, larger than or administratively superior
  ## to a region and smaller than a bloc.
  element country { tei_country.content, tei_country.attributes }
tei_country.content = tei_macro.phraseSeq
tei_country.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## supplies a regularized form of the country name using a
  ##	name or	code from ISO 3166
  attribute reg { tei_data.code }?,
  empty
tei_region =
  
  ## (region) contains the name of an administrative unit such as a state,
  ## province, or county, larger than a settlement, but smaller than a country.
  element region { tei_region.content, tei_region.attributes }
tei_region.content = tei_macro.phraseSeq
tei_region.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_district =
  
  ## contains the name of any kind of subdivision of a
  ## settlement,  such as a parish, ward, or other
  ## administrative or geographic unit.
  element district { tei_district.content, tei_district.attributes }
tei_district.content = tei_macro.phraseSeq
tei_district.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_settlement =
  
  ## contains the name of a settlement such as a city, town, or
  ## village identified as a single geo-political or
  ## administrative unit.
  element settlement {
    tei_settlement.content, tei_settlement.attributes
  }
tei_settlement.content = tei_macro.phraseSeq
tei_settlement.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_offset =
  
  ## (offset) that  part of a relative temporal or spatial expression
  ## which indicates the direction of the offset between the two place
  ## names, dates, or times involved in the expression. 
  element offset { tei_offset.content, tei_offset.attributes }
tei_offset.content = (text | tei_model.gLike | tei_model.global)*
tei_offset.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_distance =
  
  ## (distance) that part of a relative temporal or spatial expression which indicates
  ## the distance between the place or time denoted by it and the place or
  ## time referred to within it.
  element distance { tei_distance.content, tei_distance.attributes }
tei_distance.content = tei_macro.phraseSeq
tei_distance.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datePart.attribute.value,
  att.datePart.attribute.dur,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## indicates the degree
  ## of accuracy associated with the
  ## distance.
  [ a1:defaultValue = "unknown" ]
  attribute exact {
    
    ## (The distance is exact.) 
    "true"
    | 
      ## (The distance is approximate.) 
      "false"
    | 
      ## (Accuracy unavailable or unknown.) 
      "unknown"
  }?,
  empty
tei_geogName =
  
  ## (geographical name) a name associated with some geographical feature such as
  ##   Windrush Valley or Mount Sinai.
  element geogName { tei_geogName.content, tei_geogName.attributes }
tei_geogName.content =
  (text
   | tei_model.gLike
   | tei_geog
   | tei_model.nameLike
   | tei_model.global)*
tei_geogName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  
  ## provides more culture- linguistic- or application-
  ##       specific information used to categorize this name
  ##       component.
  attribute type { tei_data.enumerated }?,
  empty
tei_geog =
  
  ## (geographical feature name) contains a common noun identifying some geographical feature 
  ## contained within a geographic name, such as valley,
  ## mount etc.
  element geog { tei_geog.content, tei_geog.attributes }
tei_geog.content = tei_macro.xtext
tei_geog.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_orgName =
  
  ## (organization name) contains an organizational name. 
  element orgName { tei_orgName.content, tei_orgName.attributes }
tei_orgName.content =
  (text
   | tei_model.gLike
   | tei_orgTitle
   | tei_orgType
   | tei_orgDivn
   | tei_model.phrase
   | tei_model.global)*
tei_orgName.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## more fully describes the organization indicated in the
  ##       organizational name. Possible values include voluntary,
  ##       political, governmental, industrial,
  ##       commercial, etc.
  attribute type { tei_data.enumerated }?,
  
  ## provides an alternative identifier for the organization
  ##       being named, such as a database record key.
  attribute key { tei_data.key }?,
  
  ## gives a normalized or regularized form of the organization name
  attribute reg { text }?,
  empty
tei_orgTitle =
  
  ## (organization title) contains the proper name component of an organizational
  ## name. 
  element orgTitle { tei_orgTitle.content, tei_orgTitle.attributes }
tei_orgTitle.content = tei_macro.phraseSeq
tei_orgTitle.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## more fully describes the organization title. Possible values
  ## include formal,
  ## colloquial, acronym, etc.
  attribute type { tei_data.enumerated }?,
  
  ## gives a normalized or regularized form of the organization title.
  attribute reg { text }?,
  empty
tei_orgType =
  
  ## (organization type) indicates a part of the organization name which contains
  ## information about the organization's structure or function.
  element orgType { tei_orgType.content, tei_orgType.attributes }
tei_orgType.content = tei_macro.phraseSeq
tei_orgType.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## more fully describes the organization type specified in the name
  ## component.  Possible values include function, structure,
  ## etc.
  attribute type { tei_data.enumerated }?,
  
  ## gives a normalized or regularized form of the organization type
  attribute reg { text }?,
  empty
tei_orgDivn =
  
  ## (organizational division) indicates a division, branch or department specified
  ## in an organizational name.
  element orgDivn { tei_orgDivn.content, tei_orgDivn.attributes }
tei_orgDivn.content = tei_macro.phraseSeq
tei_orgDivn.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## more fully describes the organization division specified in the
  ## name component.
  ## Possible values include branch, department,
  ## section,
  ## division, etc.
  attribute type { tei_data.enumerated }?,
  
  ## gives a normalized or regularized form of the organizational
  ## division.
  attribute reg { text }?,
  empty
tei_affiliation =
  
  ## (affiliation) contains an informal description of a person's present
  ## or past affiliation with some
  ## organization, for example an employer or sponsor.
  element affiliation {
    tei_affiliation.content, tei_affiliation.attributes
  }
tei_affiliation.content = tei_macro.phraseSeq
tei_affiliation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.naming.attribute.key,
  empty
tei_age =
  
  ## specifies the age of a person.
  element age { tei_age.content, tei_age.attributes }
tei_age.content = tei_macro.phraseSeq
tei_age.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  
  ## supplies a numeric code representing the age or age group
  attribute value { tei_data.count }?,
  empty
tei_birth =
  
  ## (Birth details) contains information about a person's birth, such as its date
  ## and place.
  element birth { tei_birth.content, tei_birth.attributes }
tei_birth.content = tei_macro.phraseSeq
tei_birth.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.naming.attribute.key,
  
  ## specifies the date of birth in a W3C standard form (YYYY-MM-DD).
  attribute date { tei_data.temporal }?,
  empty
tei_death =
  
  ## contains information about a person's death, such as its date
  ## and place.
  element death { tei_death.content, tei_death.attributes }
tei_death.content = tei_macro.phraseSeq
tei_death.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.naming.attribute.key,
  
  ## specifies the date of death in a W3C standard form (YYYY-MM-DD).
  attribute date { tei_data.temporal }?,
  empty
tei_education =
  
  ## contains a description of the
  ## educational experience of a person.
  element education { tei_education.content, tei_education.attributes }
tei_education.content = tei_macro.phraseSeq
tei_education.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.naming.attribute.key,
  empty
tei_faith =
  
  ## specifies the faith,  religion, or belief set of a person.
  element faith { tei_faith.content, tei_faith.attributes }
tei_faith.content = tei_macro.phraseSeq
tei_faith.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  empty
tei_floruit =
  
  ## contains information about a person's period of activity.
  element floruit { tei_floruit.content, tei_floruit.attributes }
tei_floruit.content = tei_macro.phraseSeq
tei_floruit.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  empty
tei_langKnowledge =
  
  ## summarizes the state of a person's linguistic knowledge, either
  ## as prose or by a list of langKnown elements.
  element langKnowledge {
    tei_langKnowledge.content, tei_langKnowledge.attributes
  }
tei_langKnowledge.content = tei_model.pLike | tei_langKnown+
tei_langKnowledge.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## supplies one or more valid language tags for the languages
  ##       specified
  attribute tags {
    list { tei_data.language+ }
  }?,
  empty
tei_langKnown =
  
  ## (linguistic competence) summarizes the state of a person's knowledge of a single language.
  element langKnown { tei_langKnown.content, tei_langKnown.attributes }
tei_langKnown.content = tei_macro.phraseSeq
tei_langKnown.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## supplies a  valid language tag for the language concerned.
  attribute tag { tei_data.language },
  
  ## a code indicating the person's level of knowledge for this language 
  attribute level { tei_data.code }?,
  empty
tei_listPerson =
  
  ## contains a list of descriptions, each of which provides
  ## information about an identifiable person or a group of people, for
  ## example the participants in a language interaction, or the people referred
  ## to in a historical source. 
  element listPerson {
    tei_listPerson.content, tei_listPerson.attributes
  }
tei_listPerson.content =
  tei_model.pLike+
  | ((tei_person | tei_personGrp)+, tei_particLinks?)
tei_listPerson.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.declarable.attribute.default,
  empty
tei_nationality =
  
  ## contains an informal description of a person's present
  ## or past nationality or citizenship.
  element nationality {
    tei_nationality.content, tei_nationality.attributes
  }
tei_nationality.content = tei_macro.phraseSeq
tei_nationality.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  
  ## supplies a regularized form of the country name using a
  ##	name or	code from ISO 3166
  attribute reg { tei_data.code }?,
  empty
tei_occupation =
  
  ## contains an informal description of a person's trade,
  ## profession or occupation.
  element occupation {
    tei_occupation.content, tei_occupation.attributes
  }
tei_occupation.content = tei_macro.phraseSeq
tei_occupation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  
  ## identifies the classification system or taxonomy in use by supplying
  ## the identifier of a taxonomy element elsewhere in the header.
  attribute scheme { tei_data.pointer }?,
  
  ## identifies an occupation code defined within the
  ## classification system or taxonomy defined by the scheme
  ## attribute.
  attribute code { tei_data.pointer }?,
  empty
tei_particLinks =
  
  ## (participant relationships) describes the relationships or social links existing between
  ## participants in a linguistic interaction. 
  element particLinks {
    tei_particLinks.content, tei_particLinks.attributes
  }
tei_particLinks.content = tei_model.pLike+ | tei_relation+
tei_particLinks.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_persEvent =
  
  ## contains a description of a particular event of significance in
  ## the life of  a person.
  element persEvent { tei_persEvent.content, tei_persEvent.attributes }
tei_persEvent.content =
  tei_label?,
  tei_model.dateLike?,
  tei_placeName?,
  tei_model.pLike*,
  (tei_model.noteLike | tei_model.biblLike)*
tei_persEvent.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.naming.attribute.key,
  empty
tei_persState =
  
  ## contains a description of some ongoing status or quality
  ## attributed to a person.
  element persState { tei_persState.content, tei_persState.attributes }
tei_persState.content =
  tei_label?,
  tei_model.dateLike?,
  tei_model.pLike*,
  (tei_model.noteLike | tei_model.biblLike)*
tei_persState.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.naming.attribute.key,
  empty
tei_persTrait =
  
  ## contains a description of a personal or culturally-determined characteristic
  ## attributed to a person.
  element persTrait { tei_persTrait.content, tei_persTrait.attributes }
tei_persTrait.content =
  tei_label?,
  tei_model.dateLike?,
  tei_model.pLike*,
  (tei_model.noteLike | tei_model.biblLike)*
tei_persTrait.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  empty
tei_person =
  
  ## provides information about an identifiable individual, for
  ## example a participant in a language interaction, or a person referred
  ## to in a historical source.
  element person { tei_person.content, tei_person.attributes }
tei_person.content =
  tei_model.pLike+ | (tei_model.personPart | tei_model.global)*
tei_person.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies a primary role or classification for the person.
  attribute role {
    list { tei_data.word+ }
  }?,
  
  ## specifies the sex of the person.
  attribute sex { tei_data.sex }?,
  
  ## specifies an age group for the person.
  attribute age { tei_data.word }?,
  empty
tei_personGrp =
  
  ## (personal group) describes a group of individuals treated as a single person for
  ##   analytic purposes.
  element personGrp { tei_personGrp.content, tei_personGrp.attributes }
tei_personGrp.content = tei_model.pLike+ | tei_model.personPart*
tei_personGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the role of this group of participants in the
  ##         interaction.
  attribute role { tei_data.code }?,
  
  ## specifies the sex of the participant group.
  attribute sex { tei_data.sex | "mixed" }?,
  
  ## specifies the age group of the participants.
  attribute age { tei_data.word }?,
  
  ## specifies the size or approximate size of the group.
  attribute size {
    list { tei_data.word+ }
  }?,
  empty
tei_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified
  ## group of participants.
  element relation { tei_relation.content, tei_relation.attributes }
tei_relation.content = tei_desc?
tei_relation.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  
  ## categorizes the relationship in some respect, e.g.
  ## as social, personal or other.
  ## Suggested values include: 1] social (relationship concerned with social roles); 2] personal (relationship concerned with personal roles, e.g.
  ## kinship, marriage, etc.); 3] other (other kinds of relationship)
  [ a1:defaultValue = "personal" ]
  attribute type { tei_data.enumerated }?,
  
  ## supplies a name for the kind of  relationship of which
  ##	this is an instance.
  attribute name { tei_data.enumerated },
  
  ## identifies the passive participants in a non-mutual
  ## relationship.
  attribute passive {
    list { tei_data.pointer+ }
  }?,
  (
   ## identifies the active participants in a non-mutual
   ## relationship, or all the participants in a mutual one.
   attribute active {
     list { tei_data.pointer+ }
   }
   | 
     ## supplies a list of participants amongst all of whom the relationship holds equally.
     attribute mutual {
       list { tei_data.pointer+ }
     })?,
  empty
tei_residence =
  
  ## (residence) describes a person's present or past places of residence.
  element residence { tei_residence.content, tei_residence.attributes }
tei_residence.content = tei_macro.phraseSeq
tei_residence.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  empty
tei_sex =
  
  ## specifies the sex of a person.
  element sex { tei_sex.content, tei_sex.attributes }
tei_sex.content = tei_macro.phraseSeq
tei_sex.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  
  ##
  attribute value { tei_data.sex }?,
  empty
tei_socecStatus =
  
  ## (socio-economic status) contains an informal description of a person's perceived social or
  ## economic status.
  element socecStatus {
    tei_socecStatus.content, tei_socecStatus.attributes
  }
tei_socecStatus.content = tei_macro.phraseSeq
tei_socecStatus.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.datable.attribute.notBefore,
  att.datable.attribute.notAfter,
  att.datable.attribute.from,
  att.datable.attribute.to,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.naming.attribute.key,
  
  ## identifies the classification system or taxonomy in use.
  attribute scheme { tei_data.pointer }?,
  
  ## identifies a status code defined within the
  ## classification system or taxonomy defined by the source
  ## attribute.
  attribute code { tei_data.pointer }?,
  empty
tei_model.persNamePart =
  tei_surname
  | tei_forename
  | tei_genName
  | tei_nameLink
  | tei_addName
  | tei_roleName
tei_model.persNamePart_sequence =
  tei_surname,
  tei_forename,
  tei_genName,
  tei_nameLink,
  tei_addName,
  tei_roleName
tei_model.persNamePart_sequenceOptional =
  tei_surname?,
  tei_forename?,
  tei_genName?,
  tei_nameLink?,
  tei_addName?,
  tei_roleName?
tei_model.persNamePart_sequenceOptionalRepeatable =
  tei_surname*,
  tei_forename*,
  tei_genName*,
  tei_nameLink*,
  tei_addName*,
  tei_roleName*
tei_model.persNamePart_sequenceRepeatable =
  tei_surname+,
  tei_forename+,
  tei_genName+,
  tei_nameLink+,
  tei_addName+,
  tei_roleName+
tei_att.personal.attributes =
  att.personal.attribute.type,
  att.personal.attribute.full,
  att.personal.attribute.sort,
  empty
att.personal.attribute.type =
  
  ## provides more culture- linguistic- or application- specific
  ## information used to categorize this name component.
  attribute type { tei_data.enumerated }?
att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an
  ## abbreviation or simply as an initial.
  [ a1:defaultValue = "yes" ]
  attribute full {
    
    ## (the name component is spelled out in full.) 
    "yes"
    | 
      ## (the name component is given in an
      ## abbreviated form.) 
      "abb"
    | 
      ## (the name component is indicated only by
      ## one initial.) 
      "init"
  }?
att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation
  ## to others within the personal name.
  attribute sort { xsd:nonNegativeInteger }?
tei_graph =
  
  ## encodes a graph, which is a collection of nodes, and arcs which
  ## connect the nodes.
  element graph { tei_graph.content, tei_graph.attributes }
tei_graph.content =
  (tei_label, tei_model.global*)?,
  (((tei_node, tei_model.global*)+, (tei_arc, tei_model.global*)*)
   | ((tei_arc, tei_model.global*)+, (tei_node, tei_model.global*)+))
tei_graph.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## describes the type of graph.
  ## Suggested values include: 1] undirected (undirected graph); 2] directed (directed graph); 3] transitionNetwork (a directed graph with distinguished initial and final nodes); 4] transducer (a transition network with up to two labels on each arc)
  attribute type { tei_data.enumerated }?,
  
  ## states the order of the graph, i.e., the number of its nodes.
  attribute order { tei_data.count }?,
  
  ## states the size of the graph, i.e., the number of its arcs.
  attribute size { tei_data.count }?,
  empty
tei_node =
  
  ## encodes a node, a possibly labeled point in a graph.
  element node { tei_node.content, tei_node.attributes }
tei_node.content = (tei_label, tei_label?)?
tei_node.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of a node, which is a feature structure or
  ## other analytic element.
  attribute value { tei_data.pointer }?,
  
  ## provides a type for a node.
  ## Suggested values include: 1] initial (initial node in a transition network); 2] final (final node in a transition network)
  attribute type { tei_data.enumerated }?,
  
  ## gives the identifiers of the nodes which are adjacent to the current node.
  attribute adjTo {
    list { tei_data.pointer+ }
  }?,
  
  ## gives the identifiers of the nodes which are adjacent from the current
  ## node.
  attribute adjFrom {
    list { tei_data.pointer+ }
  }?,
  
  ## gives the identifiers of the nodes which are both adjacent to and
  ## adjacent from the current node.
  attribute adj {
    list { tei_data.pointer+ }
  }?,
  
  ## gives the in degree of the node, the number of nodes which
  ## are adjacent from the given node.
  attribute inDegree { tei_data.count }?,
  
  ## gives the out degree of the node, the number of nodes which
  ## are adjacent to the given node.
  attribute outDegree { tei_data.count }?,
  
  ## gives the degree of the node, the number of arcs with which
  ## the node is incident.
  attribute degree { tei_data.count }?,
  empty
tei_arc =
  
  ## encodes an arc, the connection from one node to another in a graph.
  element arc { tei_arc.content, tei_arc.attributes }
tei_arc.content = (tei_label, tei_label?)?
tei_arc.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives the identifier of the node which is adjacent from this arc.
  attribute from { tei_data.pointer },
  
  ## gives the identifier of the node which is adjacent to this arc.
  attribute to { tei_data.pointer },
  empty
tei_tree =
  
  ## encodes a tree, which is made up of a root, internal nodes,
  ## leaves, and arcs from root to leaves.
  element tree { tei_tree.content, tei_tree.attributes }
tei_tree.content =
  tei_label?,
  ((tei_leaf | tei_iNode)*, tei_root, (tei_leaf | tei_iNode)*)
tei_tree.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives the maximum number of children of the root and internal
  ## nodes of the tree.
  attribute arity { tei_data.count }?,
  
  ## indicates whether or not the tree is ordered, or if it is
  ## partially ordered.
  [ a1:defaultValue = "true" ]
  attribute ord {
    
    ## (indicates that all of the branching nodes of the tree are ordered.) 
    "true"
    | 
      ## (indicates that some of the branching nodes of the tree are ordered
      ## and some are unordered.) 
      "partial"
    | 
      ## (indicates that all of the branching nodes of the tree are
      ## unordered.) 
      "false"
  },
  
  ## gives the order of the tree, i.e., the number of its nodes.
  attribute order { tei_data.count }?,
  empty
tei_root =
  
  ## (root node) represents the root node of a tree.
  element root { tei_root.content, tei_root.attributes }
tei_root.content = tei_label?
tei_root.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of the root, which is a feature structure or
  ## other analytic element.
  attribute value { tei_data.pointer }?,
  
  ## provides a list of identifiers of the elements which are the children of
  ## the root node.
  attribute children {
    list { tei_data.pointer+ }
  },
  
  ## indicates whether or not the root is ordered.
  attribute ord {
    
    ## (indicates that the children of the root are ordered.) 
    "true"
    | 
      ## (indicates that the children of the root are unordered.) 
      "false"
  }?,
  
  ## gives the out degree of the root, the number of its children.
  attribute outDegree { tei_data.count }?,
  empty
tei_iNode =
  
  ## (intermediate (or internal) node) represents an intermediate (or internal) node of a tree.
  element iNode { tei_iNode.content, tei_iNode.attributes }
tei_iNode.content = tei_label?
tei_iNode.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of an intermediate node, which is a feature
  ## structure or other analytic element.
  attribute value { tei_data.pointer }?,
  
  ## provides a list of identifiers of the elements which are the children of
  ## the intermediate node.
  attribute children {
    list { tei_data.pointer+ }
  },
  
  ## provides the identifier of the element which is the parent of this node.
  attribute parent { tei_data.pointer }?,
  
  ## indicates whether or not the internal node is ordered.
  attribute ord {
    
    ## (indicates that the children of the intermediate node are ordered.) 
    "true"
    | 
      ## (indicates that the children of the intermediate node are unordered.) 
      "false"
  }?,
  
  ## provides an identifier of
  ## the element which this node
  ## follows.
  attribute follow { tei_data.pointer }?,
  
  ## gives the out degree of an intermediate node, the number of its
  ## children.
  attribute outDegree { tei_data.count }?,
  empty
tei_leaf =
  
  ## encodes the leaves (terminal nodes) of a tree.
  element leaf { tei_leaf.content, tei_leaf.attributes }
tei_leaf.content = tei_label?
tei_leaf.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of a leaf, which is a feature
  ## structure or other analytic element.
  attribute value { tei_data.pointer }?,
  
  ## provides the identifier of parent of a leaf.
  attribute parent { tei_data.pointer }?,
  
  ## provides an identifier of an element which this leaf follows.
  attribute follow { tei_data.pointer }?,
  empty
tei_eTree =
  
  ## (embedding tree) provides an alternative to tree element for representing
  ## ordered rooted tree structures.
  element eTree { tei_eTree.content, tei_eTree.attributes }
tei_eTree.content = tei_label?, (tei_eTree | tei_triangle | tei_eLeaf)*
tei_eTree.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of an embedding tree, which is a feature
  ## structure or other analytic element.
  attribute value { tei_data.pointer }?,
  empty
tei_triangle =
  
  ## (Underspecified embedding tree, so called because of its
  ##   characteristic shape when drawn.) provides for an underspecified eTree, that is, an eTree with
  ##   information left out.
  element triangle { tei_triangle.content, tei_triangle.attributes }
tei_triangle.content =
  tei_label?, (tei_eTree | tei_triangle | tei_eLeaf)*
tei_triangle.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of a triangle, which is the identifier of a feature
  ## structure or other analytic element.
  attribute value { tei_data.pointer }?,
  empty
tei_eLeaf =
  
  ## (Leaf of an embedding tree.) provides explicitly for a leaf of an embedding tree, which may also
  ## be encoded with the eTree element.
  element eLeaf { tei_eLeaf.content, tei_eLeaf.attributes }
tei_eLeaf.content = tei_label?
tei_eLeaf.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## provides the value of an embedding leaf, which is a feature
  ## structure or other analytic element.
  attribute value { tei_data.pointer }?,
  empty
tei_forest =
  
  ## provides for groups of rooted trees.
  element forest { tei_forest.content, tei_forest.attributes }
tei_forest.content = (tei_tree | tei_eTree | tei_triangle)+
tei_forest.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the type of the forest.
  attribute type { tei_data.enumerated }?,
  empty
tei_forestGrp =
  
  ## (Forest group) provides for groups of forests.
  element forestGrp { tei_forestGrp.content, tei_forestGrp.attributes }
tei_forestGrp.content = tei_forest+
tei_forestGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the type of the forest group.
  attribute type { tei_data.enumerated }?,
  empty
tei_u =
  
  ## (utterance) a stretch of speech usually preceded and followed by
  ## silence or by a change of speaker.
  element u { tei_u.content, tei_u.attributes }
tei_u.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.divPart.spoken
   | tei_model.global)*
tei_u.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  att.declaring.attribute.decls,
  att.ascribed.attribute.who,
  
  ## indicates the nature of the transition between this utterance
  ##           and the previous one.
  [ a1:defaultValue = "smooth" ]
  attribute trans {
    
    ## (this  utterance begins without unusual pause or rapidity.) 
    "smooth"
    | 
      ## (this utterance begins with a markedly shorter pause than normal.) 
      "latching"
    | 
      ## (this utterance begins before the previous one has finished.) 
      "overlap"
    | 
      ## (this utterance begins after a noticeable pause.) 
      "pause"
  }?,
  empty
tei_pause =
  
  ## a pause either between or within utterances.
  element pause { tei_pause.content, tei_pause.attributes }
tei_pause.content = empty
tei_pause.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  att.ascribed.attribute.who,
  empty
tei_vocal =
  
  ## (Vocalized semi-lexical) any vocalized but not necessarily lexical phenomenon, for example
  ## voiced pauses, non-lexical backchannels, etc.
  element vocal { tei_vocal.content, tei_vocal.attributes }
tei_vocal.content = tei_macro.glossSeq
tei_vocal.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  att.ascribed.attribute.who,
  
  ## indicates whether or not the phenomenon is repeated.
  [ a1:defaultValue = "false" ]
  attribute iterated {
    
    ## (the phenomenon is repeated.
    ##     ) 
    "true"
    | 
      ## (the phenomenon is atomic.
      ##     ) 
      "false"
    | 
      ## (unknown or unmarked.
      ##    ) 
      "unknown"
  }?,
  empty
tei_kinesic =
  
  ## (Non-vocalized quasi-lexical) any communicative phenomenon, not necessarily vocalized, for
  ## example a gesture, frown, etc.
  element kinesic { tei_kinesic.content, tei_kinesic.attributes }
tei_kinesic.content = tei_macro.glossSeq
tei_kinesic.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  att.ascribed.attribute.who,
  
  ## indicates
  ## whether or not the phenomenon is repeated.
  [ a1:defaultValue = "false" ]
  attribute iterated {
    
    ## (the phenomenon is repeated.
    ##     ) 
    "true"
    | 
      ## (the phenomenon is atomic.
      ##     ) 
      "false"
    | 
      ## (unknown or unmarked.
      ##     ) 
      "unknown"
  }?,
  empty
tei_event =
  
  ## any phenomenon or occurrence, not necessarily vocalized or
  ## communicative, for example incidental noises or other events affecting
  ## communication.
  element event { tei_event.content, tei_event.attributes }
tei_event.content = tei_macro.glossSeq
tei_event.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.timed.attribute.start,
  att.timed.attribute.end,
  att.timed.attribute.dur,
  att.ascribed.attribute.who,
  
  ## indicates whether or not the phenomenon is repeated.
  [ a1:defaultValue = "false" ]
  attribute iterated {
    
    ## (the phenomenon is repeated. ) 
    "true"
    | 
      ## (the phenomenon is atomic. ) 
      "false"
    | 
      ## (unknown or unmarked.) 
      "unknown"
  }?,
  empty
tei_writing =
  
  ## (Writing) a passage of written text revealed to participants in the course
  ## of a spoken text.
  element writing { tei_writing.content, tei_writing.attributes }
tei_writing.content = tei_macro.paraContent
tei_writing.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.ascribed.attribute.who,
  
  ## categorizes the kind of writing in some way, for example
  ##       as a subtitle, noticeboard etc.
  attribute type { tei_data.enumerated }?,
  
  ## points to a bibliographic citation in the header giving
  ##       a full description of the source or script of the writing.
  attribute script { tei_data.code }?,
  
  ## indicates whether the writing is revealed all at once or
  ##         gradually.
  attribute gradual {
    
    ## (the writing is revealed gradually.) 
    "true"
    | 
      ## (the writing is revealed all at once.) 
      "false"
    | 
      ## (unknown or unmarked.) 
      "unknown"
  }?,
  empty
tei_shift =
  
  ## marks the point at which some paralinguistic feature of a series of
  ## utterances by any one speaker changes.
  element shift { tei_shift.content, tei_shift.attributes }
tei_shift.content = empty
tei_shift.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## a
  ## paralinguistic feature.
  attribute feature {
    
    ## (speed of utterance.
    ##     ) 
    "tempo"
    | 
      ## (loudness.
      ##     ) 
      "loud"
    | 
      ## (pitch range.
      ##     ) 
      "pitch"
    | 
      ## (tension or stress pattern.
      ##     ) 
      "tension"
    | 
      ## (rhythmic qualities.
      ##     ) 
      "rhythm"
    | 
      ## (voice quality.
      ##     ) 
      "voice"
  }?,
  
  ## specifies the new state of the paralinguistic feature specified.
  [ a1:defaultValue = "normal" ] attribute new { tei_data.enumerated }?,
  empty
tei_model.divPart.spoken =
  tei_u
  | tei_pause
  | tei_vocal
  | tei_kinesic
  | tei_event
  | tei_writing
  | tei_shift
tei_model.divPart.spoken_sequence =
  tei_u,
  tei_pause,
  tei_vocal,
  tei_kinesic,
  tei_event,
  tei_writing,
  tei_shift
tei_model.divPart.spoken_sequenceOptional =
  tei_u?,
  tei_pause?,
  tei_vocal?,
  tei_kinesic?,
  tei_event?,
  tei_writing?,
  tei_shift?
tei_model.divPart.spoken_sequenceOptionalRepeatable =
  tei_u*,
  tei_pause*,
  tei_vocal*,
  tei_kinesic*,
  tei_event*,
  tei_writing*,
  tei_shift*
tei_model.divPart.spoken_sequenceRepeatable =
  tei_u+,
  tei_pause+,
  tei_vocal+,
  tei_kinesic+,
  tei_event+,
  tei_writing+,
  tei_shift+
tei_app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional
  ## lemma and at least one reading.
  element app { tei_app.content, tei_app.attributes }
tei_app.content =
  tei_model.global*,
  (tei_lem, tei_model.global*, (tei_wit, tei_model.global*)?)?,
  ((tei_model.rdgLike, tei_model.global*, (tei_wit, tei_model.global*)?)
   | (tei_rdgGrp, tei_model.global*, (tei_wit, tei_model.global*)?))*
tei_app.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## classifies the variation contained in this element according to
  ## some convenient typology.
  attribute type { tei_data.enumerated }?,
  
  ## identifies the beginning of the lemma in the base text, if
  ## necessary.
  attribute from { tei_data.pointer }?,
  
  ## identifies the endpoint of the lemma in the base text, if
  ## necessary.
  attribute to { tei_data.pointer }?,
  
  ## indicates the location of the variation, when the
  ## location-referenced method of apparatus markup is used.
  attribute loc {
    list { tei_data.word+ }
  }?,
  empty
tei_lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation.
  element lem { tei_lem.content, tei_lem.attributes }
tei_lem.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global
   | tei_model.rdgPart)*
tei_lem.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.textCritical.attribute.wit,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.resp,
  att.textCritical.attribute.hand,
  empty
tei_rdg =
  
  ## (reading) contains a single reading within a textual variation.
  element rdg { tei_rdg.content, tei_rdg.attributes }
tei_rdg.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global
   | tei_model.rdgPart)*
tei_rdg.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.textCritical.attribute.wit,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.resp,
  att.textCritical.attribute.hand,
  empty
tei_rdgGrp =
  
  ## (reading group) within a textual variation,
  ## groups two or more readings perceived to have a genetic
  ## relationship or other affinity.
  element rdgGrp { tei_rdgGrp.content, tei_rdgGrp.attributes }
tei_rdgGrp.content =
  ((tei_rdgGrp, tei_wit?)
   | ((tei_lem, tei_wit?)?, (tei_model.rdgLike, tei_wit?))*)+
tei_rdgGrp.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.textCritical.attribute.wit,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.resp,
  att.textCritical.attribute.hand,
  empty
tei_witDetail =
  
  ## gives further information about a particular witness, or
  ## witnesses, to a particular reading.
  element witDetail { tei_witDetail.content, tei_witDetail.attributes }
tei_witDetail.content = tei_macro.phraseSeq
tei_witDetail.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.placement.attribute.place,
  
  ## indicates the identifier for the reading, or readings, to which
  ## the witness detail refers.
  attribute target {
    list { tei_data.pointer+ }
  },
  
  ## identifies the individual responsible for  identifying the
  ## witness
  attribute resp { tei_data.pointer }?,
  
  ## indicates the sigil or sigla for the witnesses to which the
  ## detail refers.
  attribute wit { tei_data.code },
  
  ## describes the type of information given about the witness.
  attribute type {
    list { tei_data.word+ }
  }?,
  empty
tei_wit =
  
  ## contains a list of one or more sigla of witnesses attesting a
  ## given reading, in a textual variation.
  element wit { tei_wit.content, tei_wit.attributes }
tei_wit.content = tei_macro.phraseSeq
tei_wit.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.rdgPart.attribute.wit,
  empty
tei_witList =
  
  ## (witness list) contains a list of all the witnesses referred to in
  ## wit elements or wit attributes
  ## within the critical apparatus.
  element witList { tei_witList.content, tei_witList.attributes }
tei_witList.content =
  tei_model.global*, (tei_witness, tei_model.global*)+
tei_witList.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_witness =
  
  ## contains either a description of a single witness referred to
  ## within the critical apparatus, or a list of witnesses which is to be
  ## referred to by a single sigil.
  element witness { tei_witness.content, tei_witness.attributes }
tei_witness.content = tei_macro.paraContent
tei_witness.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates which other witnesses are included in a witness group.
  attribute included {
    list { tei_data.pointer+ }
  }?,
  empty
tei_witStart =
  
  ## indicates the beginning, or resumption, of the text of a
  ## fragmentary witness.
  element witStart { tei_witStart.content, tei_witStart.attributes }
tei_witStart.content = empty
tei_witStart.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.rdgPart.attribute.wit,
  empty
tei_witEnd =
  
  ## indicates the end, or suspension, of the text of a fragmentary
  ## witness.
  element witEnd { tei_witEnd.content, tei_witEnd.attributes }
tei_witEnd.content = empty
tei_witEnd.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.rdgPart.attribute.wit,
  empty
tei_lacunaStart =
  
  ## indicates the beginning of a lacuna in the text of a mostly
  ## complete textual witness.
  element lacunaStart {
    tei_lacunaStart.content, tei_lacunaStart.attributes
  }
tei_lacunaStart.content = empty
tei_lacunaStart.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.rdgPart.attribute.wit,
  empty
tei_lacunaEnd =
  
  ## indicates the end of a lacuna in a mostly complete textual
  ## witness.
  element lacunaEnd { tei_lacunaEnd.content, tei_lacunaEnd.attributes }
tei_lacunaEnd.content = empty
tei_lacunaEnd.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.rdgPart.attribute.wit,
  empty
tei_model.rdgLike = tei_rdg
tei_model.rdgLike_sequence = tei_rdg
tei_model.rdgLike_sequenceOptional = tei_rdg?
tei_model.rdgLike_sequenceOptionalRepeatable = tei_rdg*
tei_model.rdgLike_sequenceRepeatable = tei_rdg+
tei_model.rdgPart =
  tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd
tei_model.rdgPart_sequence =
  tei_wit, tei_witStart, tei_witEnd, tei_lacunaStart, tei_lacunaEnd
tei_model.rdgPart_sequenceOptional =
  tei_wit?, tei_witStart?, tei_witEnd?, tei_lacunaStart?, tei_lacunaEnd?
tei_model.rdgPart_sequenceOptionalRepeatable =
  tei_wit*, tei_witStart*, tei_witEnd*, tei_lacunaStart*, tei_lacunaEnd*
tei_model.rdgPart_sequenceRepeatable =
  tei_wit+, tei_witStart+, tei_witEnd+, tei_lacunaStart+, tei_lacunaEnd+
tei_att.rdgPart.attributes = att.rdgPart.attribute.wit, empty
att.rdgPart.attribute.wit =
  
  ## contains a list of one or more sigla indicating the witnesses
  ## which begin or end at this point.
  attribute wit {
    list { tei_data.pointer+ }
  }?
tei_att.textCritical.attributes =
  att.textCritical.attribute.wit,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.resp,
  att.textCritical.attribute.hand,
  empty
att.textCritical.attribute.wit =
  
  ## contains a list of one or more pointers indicating the witnesses
  ## which attest to a given reading.
  attribute wit {
    list { tei_data.pointer+ }
  }?
att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## Sample values include: 1] substantive (the reading offers a substantive variant.); 2] orthographic (the reading differs only orthographically, not in substance,
  ## from other readings.)
  attribute type { tei_data.enumerated }?
att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to
  ## any appropriate typology of possible origins.
  ## Sample values include: 1] homeoteleuton; 2] homeoarchy; 3] paleographic-confusion; 4] haplography; 5] dittography; 6] false-emendation
  attribute cause { tei_data.enumerated }?
att.textCritical.attribute.varSeq =
  
  ## provides a number indicating the position of this reading in a
  ## sequence, when there is reason to presume a sequence to the variants
  ## on any one lemma.
  attribute varSeq { xsd:nonNegativeInteger }?
att.textCritical.attribute.resp =
  
  ## identifies the editor responsible for asserting a
  ##	particular reading in the witness.
  attribute resp { tei_data.pointer }?
att.textCritical.attribute.hand =
  
  ## signifies the hand responsible for a particular reading in the
  ## witness.
  attribute hand { tei_data.pointer }?
tei_TEI =
  
  ## (TEI document) contains a single TEI-conformant document,
  ## comprising a TEI header and a text, either in isolation or as part of a
  ## teiCorpus element.
  element TEI { tei_TEI.content, tei_TEI.attributes }
tei_TEI.content = tei_teiHeader, tei_text
tei_TEI.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## The version of the TEI scheme
  [ a1:defaultValue = "5.0" ] attribute version { xsd:decimal }?,
  empty
tei_text =
  
  ## contains a single text of any kind, whether unitary or
  ## composite, for example a poem or drama, a collection of essays, a novel,
  ## a dictionary, or a corpus sample.
  element text { tei_text.content, tei_text.attributes }
tei_text.content =
  tei_model.global*,
  (tei_front, tei_model.global*)?,
  (tei_body | tei_group),
  tei_model.global*,
  (tei_back, tei_model.global*)?
tei_text.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  empty
tei_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter.
  element body { tei_body.content, tei_body.attributes }
tei_body.content =
  tei_model.global*,
  (tei_model.divWrapper, (tei_model.global | tei_model.divWrapper)*)?,
  (tei_model.divGenLike, (tei_model.global | tei_model.divGenLike)*)?,
  ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
   | (tei_model.div1Like, (tei_model.global | tei_model.divGenLike)*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
       | (tei_model.div1Like,
          (tei_model.global | tei_model.divGenLike)*)+)?)),
  (tei_model.divWrapper.bottom, tei_model.global*)*
tei_body.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  empty
tei_group =
  
  ## contains the body of a composite text, grouping together a
  ## sequence of distinct texts (or groups of such texts) which are regarded
  ## as a unit for some purpose, for example the collected works of an
  ## author, a sequence of prose essays, etc.
  element group { tei_group.content, tei_group.attributes }
tei_group.content =
  (tei_model.divWrapper | tei_model.global)*,
  ((tei_text | tei_group), (tei_text | tei_group | tei_model.global)*),
  tei_model.divWrapper.bottom*
tei_group.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  empty
tei_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a
  ## text.
  element div { tei_div.content, tei_div.attributes }
tei_div.content =
  (tei_model.divWrapper | tei_model.global)*,
  ((((tei_div | tei_divGen), tei_model.global*)+
    | ((tei_macro.component, tei_model.global*)+,
       ((tei_div | tei_divGen), tei_model.global*)*)),
   ((tei_model.divWrapper | tei_model.divWrapper.bottom),
    tei_model.global*)*)?
tei_div.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div1 =
  
  ## (level-1 text division) contains a first-level subdivision of the front, body, or back
  ## of a text.
  element div1 { tei_div1.content, tei_div1.attributes }
tei_div1.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div2Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div2Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div1.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div2 =
  
  ## (level-2 text division) contains a second-level subdivision of the front, body, or back of a
  ##  text.
  element div2 { tei_div2.content, tei_div2.attributes }
tei_div2.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div3Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div3Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div2.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div3 =
  
  ## (level-3 text division) contains a third-level subdivision of the front, body, or back of a
  ##  text.
  element div3 { tei_div3.content, tei_div3.attributes }
tei_div3.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div4Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div4Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div3.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div4 =
  
  ## (level-4 text division) contains a fourth-level subdivision of the front, body, or back of a
  ##  text.
  element div4 { tei_div4.content, tei_div4.attributes }
tei_div4.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div5Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div5Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div4.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div5 =
  
  ## (level-5 text division) contains a fifth-level subdivision of the front, body, or back of a
  ##  text.
  element div5 { tei_div5.content, tei_div5.attributes }
tei_div5.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div6Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div6Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div5.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div6 =
  
  ## (level-6 text division) contains a sixth-level subdivision of the front, body, or back of a
  ##  text.
  element div6 { tei_div6.content, tei_div6.attributes }
tei_div6.content =
  (tei_model.divWrapper | tei_model.global)*,
  (((tei_model.div7Like | tei_model.divGenLike), tei_model.global*)+
   | ((tei_macro.component, tei_model.global*)+,
      ((tei_model.div7Like | tei_model.divGenLike),
       tei_model.global*)*)),
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div6.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_div7 =
  
  ## (level-7 text division) contains the smallest possible subdivision of the front, body or
  ## back of a text, larger than a paragraph.
  element div7 { tei_div7.content, tei_div7.attributes }
tei_div7.content =
  (tei_model.divWrapper | tei_model.global)*,
  (tei_macro.component, tei_model.global*)+,
  ((tei_model.divWrapper | tei_model.divWrapper.bottom),
   tei_model.global*)*
tei_div7.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.divLike.attribute.type,
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part,
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  att.declaring.attribute.decls,
  empty
tei_trailer =
  
  ## (trailer) contains a closing title or footer appearing at the end of
  ## a division of a text. 
  element trailer { tei_trailer.content, tei_trailer.attributes }
tei_trailer.content = tei_macro.phraseSeq
tei_trailer.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_byline =
  
  ## contains the primary statement of responsibility given for a work
  ## on its title page or at the head or end of the work.
  element byline { tei_byline.content, tei_byline.attributes }
tei_byline.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_docAuthor
   | tei_model.global)*
tei_byline.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_dateline =
  
  ## contains a brief description of the place, date, time, etc. of
  ##	production of a letter, newspaper story, or other work, prefixed or
  ##	suffixed to it as a kind of heading or trailer. 
  element dateline { tei_dateline.content, tei_dateline.attributes }
tei_dateline.content = tei_macro.phraseSeq
tei_dateline.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_argument =
  
  ## A formal list or prose description of the topics addressed by
  ##	a subdivision of a text.
  element argument { tei_argument.content, tei_argument.attributes }
tei_argument.content =
  tei_model.global*,
  (tei_head, tei_model.global*)?,
  (tei_macro.component, tei_model.global*)+
tei_argument.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_epigraph =
  
  ## (epigraph) contains a quotation, anonymous or attributed, appearing at
  ## the start of a section or chapter, or on a title page. 
  element epigraph { tei_epigraph.content, tei_epigraph.attributes }
tei_epigraph.content = tei_macro.componentSeq
tei_epigraph.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_opener =
  
  ## groups together dateline, byline, salutation, and similar
  ## phrases appearing as a preliminary group at the start of a
  ## division, especially of a letter.
  element opener { tei_opener.content, tei_opener.attributes }
tei_opener.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_argument
   | tei_byline
   | tei_dateline
   | tei_epigraph
   | tei_salute
   | tei_signed
   | tei_model.global)*
tei_opener.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_closer =
  
  ## groups together dateline, byline, salutation, and similar
  ## phrases appearing as a final group at the end of a
  ## division, especially of a letter.
  element closer { tei_closer.content, tei_closer.attributes }
tei_closer.content =
  (text
   | tei_model.gLike
   | tei_signed
   | tei_dateline
   | tei_salute
   | tei_model.phrase
   | tei_model.global)*
tei_closer.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword,
  ## dedicatory epistle, or other division of a text, or the
  ## salutation in the closing of a letter, preface, etc.
  element salute { tei_salute.content, tei_salute.attributes }
tei_salute.content = tei_macro.phraseSeq
tei_salute.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword,
  ## dedicatory epistle, or other division of a text. 
  element signed { tei_signed.content, tei_signed.attributes }
tei_signed.content = tei_macro.phraseSeq
tei_signed.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front
  ## or back matter. 
  element titlePage { tei_titlePage.content, tei_titlePage.attributes }
tei_titlePage.content =
  tei_model.global*,
  tei_model.titlepagePart,
  (tei_model.titlepagePart | tei_model.global)*
tei_titlePage.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## classifies the title page according to any convenient typology.
  attribute type { tei_data.enumerated }?,
  empty
tei_docTitle =
  
  ## (document title) contains the title of a document, including all its
  ## constituents, as given on a title page.
  element docTitle { tei_docTitle.content, tei_docTitle.attributes }
tei_docTitle.content =
  tei_model.global*, (tei_titlePart, tei_model.global*)+
tei_docTitle.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_titlePart =
  
  ## (title part) contains a subsection or division of the title of a work, as
  ## indicated on a title page.
  element titlePart { tei_titlePart.content, tei_titlePart.attributes }
tei_titlePart.content = tei_macro.paraContent
tei_titlePart.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## specifies the role of this subdivision of the title.
  ## Suggested values include: 1] main (main title of the work
  ##         ); 2] sub (subtitle  of the work
  ##         ); 3] alt (alternative title  of the work
  ##         ); 4] short (abbreviated form of title); 5] desc (descriptive paraphrase of the work 
  ##    )
  [ a1:defaultValue = "main" ] attribute type { tei_data.enumerated }?,
  empty
tei_docAuthor =
  
  ## (document author) contains the name of the author of the document, as given on the
  ## title page (often but not always contained in a byline).
  element docAuthor { tei_docAuthor.content, tei_docAuthor.attributes }
tei_docAuthor.content = tei_macro.phraseSeq
tei_docAuthor.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_imprimatur =
  
  ## contains a formal statement authorizing the publication of
  ## a work, sometimes required to appear on a title page or its verso.
  element imprimatur {
    tei_imprimatur.content, tei_imprimatur.attributes
  }
tei_imprimatur.content = tei_macro.paraContent
tei_imprimatur.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_docEdition =
  
  ## (document edition) contains an edition statement as presented on a title page of a
  ## document.
  element docEdition {
    tei_docEdition.content, tei_docEdition.attributes
  }
tei_docEdition.content = tei_macro.paraContent
tei_docEdition.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication,
  ## publisher name), as given
  ## (usually) at the foot of a title page.
  element docImprint {
    tei_docImprint.content, tei_docImprint.attributes
  }
tei_docImprint.content =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_pubPlace
   | tei_docDate
   | tei_publisher
   | tei_model.global)*
tei_docImprint.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_docDate =
  
  ## (document date) contains the date of a document, as given
  ## (usually) on a title page.
  element docDate { tei_docDate.content, tei_docDate.attributes }
tei_docDate.content = tei_macro.phraseSeq
tei_docDate.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives the value of the date in a standard form, generally YYYY-MM-DD.
  attribute value { tei_data.temporal }?,
  empty
tei_front =
  
  ## (front matter) contains any prefatory matter (headers,
  ## title page, prefaces, dedications, etc.)
  ## found  at the start of a document, before the main body.
  element front { tei_front.content, tei_front.attributes }
tei_front.content =
  (tei_model.frontPart | tei_model.pLike.front | tei_model.global)*,
  ((tei_model.div1Like,
    (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
   | (tei_model.divLike,
      (tei_model.frontPart | tei_model.divLike | tei_model.global)*))?
tei_front.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  empty
tei_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a
  ## text.
  element back { tei_back.content, tei_back.attributes }
tei_back.content =
  (tei_model.frontPart | tei_model.global | tei_model.divWrapper)*,
  ((tei_model.divLike, (tei_model.global | tei_model.frontPart)*)+
   | (tei_model.div1Like, (tei_model.global | tei_model.frontPart)*)+)?,
  tei_model.divWrapper.bottom*
tei_back.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.declaring.attribute.decls,
  empty
tei_addSpan =
  
  ## (added span of text) marks the beginning of a longer sequence of text added by an
  ##   author, scribe, annotator or corrector (see also add).
  element addSpan { tei_addSpan.content, tei_addSpan.attributes }
tei_addSpan.content = empty
tei_addSpan.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.authorialIntervention.attribute.hand,
  att.authorialIntervention.attribute.status,
  att.authorialIntervention.attribute.type,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.placement.attribute.place,
  att.spanning.attribute.spanTo,
  empty
tei_delSpan =
  
  ## (deleted span of text) marks the beginning of a longer sequence of text deleted,
  ## marked as deleted, or otherwise signaled as superfluous or spurious by an
  ## author, scribe, annotator, or corrector.
  element delSpan { tei_delSpan.content, tei_delSpan.attributes }
tei_delSpan.content = empty
tei_delSpan.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  att.authorialIntervention.attribute.hand,
  att.authorialIntervention.attribute.status,
  att.authorialIntervention.attribute.type,
  att.spanning.attribute.spanTo,
  empty
tei_restore =
  
  ## indicates restoration of text to an earlier state by
  ## cancellation of an editorial or authorial marking or instruction.
  element restore { tei_restore.content, tei_restore.attributes }
tei_restore.content = tei_macro.paraContent
tei_restore.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## characterizes  the means of restoration.
  attribute means { tei_data.code }?,
  
  ## indicates the action cancelled by the restoration.
  attribute type { tei_data.name }?,
  
  ## signifies the hand of the agent which made the restoration.
  attribute hand { tei_data.pointer }?,
  empty
tei_supplied =
  
  ## signifies text supplied by the transcriber or editor in place
  ## of text which cannot be read, either because of physical damage or
  ## loss in the original or because it is illegible for any
  ## reason.
  element supplied { tei_supplied.content, tei_supplied.attributes }
tei_supplied.content = tei_macro.paraContent
tei_supplied.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## indicates why the text has had to be supplied.
  attribute reason {
    list { tei_data.word+ }
  }?,
  
  ## where the presumed loss of text leading to the supplying of
  ## text arises from action (partial deletion, etc.) assignable to an
  ## identifiable hand, signifies the hand responsible for the action.
  attribute hand { tei_data.pointer }?,
  
  ## In the case of text which has been supplied  because of damage, categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing (damage results from rubbing of the
  ##   leaf edges); 2] mildew (damage results from mildew on the leaf surface); 3] smoke (damage results from smoke)
  attribute agent { tei_data.enumerated }?,
  
  ## states the source of the supplied text.
  attribute source {
    list { tei_data.word+ }
  }?,
  empty
tei_hand =
  
  ## used in the header to define each distinct scribe or
  ## handwriting style.
  element hand { tei_hand.content, tei_hand.attributes }
tei_hand.content = empty
tei_hand.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## gives the name of,or other identifier for, the scribe.
  attribute scribe { tei_data.code }?,
  
  ## indicates recognized writing styles.
  attribute style { tei_data.enumerated }?,
  
  ## indicates dominant language of hand.
  attribute mainLang { tei_data.language }?,
  
  ## describes tint or type
  ## of ink, e.g. brown.  May also be used to indicate the writing medium, e.g. pencil
  attribute ink { tei_data.enumerated }?,
  
  ## describes other characteristics of the hand,
  ## particularly those related to the quality of the writing.
  ## Sample values include: 1] shaky (handwriting is shaky); 2] thick (strokes are unusually thick); 3] regular (writing is regular)
  attribute writing { tei_data.enumerated }?,
  
  ## indicates whether or
  ## not this is the first or main scribe of the document.
  attribute first { tei_data.truthValue }?,
  
  ## indicates the editor or transcriber responsible for identifying
  ## the hand.
  attribute resp { tei_data.code }?,
  empty
tei_handShift =
  
  ## marks the beginning of a sequence of text written in a new
  ## hand, or of a change in the scribe, writing style, ink or character
  ## of the document hand.
  element handShift { tei_handShift.content, tei_handShift.attributes }
tei_handShift.content = empty
tei_handShift.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## identifies the new hand.
  attribute new { tei_data.code },
  
  ## identifies the old hand.
  attribute old { tei_data.code }?,
  
  ## indicates recognized
  ## writing styles.
  attribute style { tei_data.enumerated }?,
  
  ## describes tint or type
  ## of ink, e.g. brown.  May also be used to indicate the writing medium, e.g. pencil
  attribute ink { tei_data.enumerated }?,
  
  ## describes other characteristics of the hand,
  ## particularly those related to the quality of the writing.
  ## Sample values include: 1] shaky (handwriting is shaky); 2] thick (strokes are unusually thick); 3] regular (writing is regular)
  attribute writing { tei_data.enumerated }?,
  
  ## signifies the editor or transcriber responsible for identifying
  ## the change of hand.
  attribute resp { tei_data.code }?,
  empty
tei_handList =
  
  ## contains a series of hand elements listing the
  ## different hands of the source.
  element handList { tei_handList.content, tei_handList.attributes }
tei_handList.content = tei_hand*
tei_handList.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_damage =
  
  ## contains an area of damage to the text witness.
  element damage { tei_damage.content, tei_damage.attributes }
tei_damage.content = tei_macro.paraContent
tei_damage.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.editLike.attribute.cert,
  att.editLike.attribute.resp,
  att.editLike.attribute.evidence,
  
  ## classifies the damage according to any convenient typology.
  attribute type { tei_data.enumerated }?,
  
  ## indicates approximately how much text is in the damaged area,
  ## in letters, minims, inches, or any appropriate unit, where this
  ## cannot be deduced from the contents of the tag.  For example, the
  ## damage may span structural divisions in the text so that the tag must
  ## then be empty of content.
  attribute extent {
    list { tei_data.word+ }
  }?,
  
  ## In the case of damage (deliberate defacement, etc.) assignable
  ## to an identifiable hand, signifies the hand responsible for the
  ## damage.
  attribute hand { tei_data.pointer }?,
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing (damage results from rubbing of the
  ##   leaf edges); 2] mildew (damage results from mildew on the leaf surface); 3] smoke (damage results from smoke)
  attribute agent { tei_data.enumerated }?,
  
  ## Signifies the degree of damage according to a convenient scale.
  ## The damage tag with the degree attribute should
  ## only be used where the text may be read with some confidence; text
  ## supplied from other sources should be tagged as supplied.
  attribute degree { tei_data.probability | tei_data.certainty }?,
  empty
tei_space =
  
  ## indicates the location of a significant space in the copy text.
  element space { tei_space.content, tei_space.attributes }
tei_space.content = empty
tei_space.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  
  ## indicates whether the space is horizontal or vertical.
  attribute dim {
    
    ## (the space is horizontal.) 
    "horizontal"
    | 
      ## (the space is vertical.) 
      "vertical"
  }?,
  
  ## indicates approximately how large the space is, in letters,
  ## minims, inches, or other appropriate unit.
  attribute extent {
    list { tei_data.word+ }
  }?,
  
  ## indicates the individual responsible for identifying and measuring
  ## the space.
  attribute resp { tei_data.pointer }?,
  empty
tei_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or
  ##   similar material appearing on the current page.
  element fw { tei_fw.content, tei_fw.attributes }
tei_fw.content = tei_macro.phraseSeq
tei_fw.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.placement.attribute.place,
  
  ## classifies the material encoded according to some useful typology.
  ## Sample values include: 1] header (a running title at the top of the page); 2] footer (a running title at the bottom of the page); 3] pag (a page number or foliation symbol); 4] sig (a signature or gathering symbol); 5] catch (a catch-word)
  attribute type { tei_data.enumerated }?,
  empty
tei_caesura =
  
  ## marks the point at which a metrical line may be divided.
  element caesura { tei_caesura.content, tei_caesura.attributes }
tei_caesura.content = empty
tei_caesura.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  empty
tei_rhyme =
  
  ## marks the rhyming part of  a metrical line.
  element rhyme { tei_rhyme.content, tei_rhyme.attributes }
tei_rhyme.content = tei_macro.paraContent
tei_rhyme.attributes =
  att.global.attribute.xmlspace,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.xmlbase,
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select,
  att.global.analytic.attribute.ana,
  att.typed.attribute.type,
  att.typed.attribute.subtype,
  
  ## provides a label to identify which part of a rhyme
  ##	scheme this rhyming string instantiates.
  attribute label { xsd:string }?,
  empty
tei_model.divPart.verse = notAllowed
tei_model.divPart.verse_sequence = empty
tei_model.divPart.verse_sequenceOptional = empty
tei_model.divPart.verse_sequenceOptionalRepeatable = empty
tei_model.divPart.verse_sequenceRepeatable = notAllowed
tei_att.metrical.attributes =
  att.metrical.attribute.met,
  att.metrical.attribute.real,
  att.metrical.attribute.rhyme,
  empty
att.metrical.attribute.met =
  
  ## contains a user-specified encoding for the conventional
  ## metrical structure of the element.
  attribute met { xsd:string }?
att.metrical.attribute.real =
  
  ## contains a user-specified encoding for the actual realization
  ## of the conventional metrical structure applicable to the element.
  attribute real { xsd:string }?
att.metrical.attribute.rhyme =
  
  ## specifies the rhyme scheme applicable to a group of verse lines.
  attribute rhyme { xsd:string }?
tei_att.enjamb.attributes = att.enjamb.attribute.enjamb, empty
att.enjamb.attribute.enjamb =
  
  ## indicates that the end of a verse line is marked by enjambement.
  ## Sample values include: 1] no (the line is end-stopped
  ##     ); 2] yes (the line in question runs on into the next
  ##     ); 3] weak (the line is weakly enjambed
  ##     ); 4] strong (the line is strongly enjambed)
  attribute enjamb { tei_data.enumerated }?
tei_include =
  
  ## The W3C XInclude element
  element xi:include { tei_include.content, tei_include.attributes }
tei_include.content = tei_fallback?
tei_include.attributes =
  
  ## pointer to the resource being included
  attribute href { tei_data.pointer }?,
  
  ##
  [ a1:defaultValue = "xml" ]
  attribute parse {
    
    ##
    "xml"
    | 
      ##
      "text"
  }?,
  
  ##
  attribute xpointer { text }?,
  
  ##
  attribute encoding { text }?,
  
  ##
  attribute accept { text }?,
  
  ##
  attribute accept-charset { text }?,
  
  ##
  attribute accept-language { text }?,
  empty
tei_fallback =
  
  ## Wrapper for fallback elements if an XInclude fails
  element xi:fallback { tei_fallback.content, tei_fallback.attributes }
tei_fallback.content = tei_AnyThing
tei_fallback.attributes = empty
s:pattern [
  name = "spanTo_required"
  "\x{a}" ~
  "    "
  s:rule [
    context = "addSpan"
    "\x{a}" ~
    "      "
    s:assert [
      test = "@spanTo"
      "The spanTo= attribute of "
      s:name [ ]
      " is required."
    ]
    "\x{a}" ~
    "    "
  ]
  "\x{a}" ~
  "  "
]
s:pattern [
  name = "spanTo_required"
  "\x{a}" ~
  "    "
  s:rule [
    context = "delSpan"
    "\x{a}" ~
    "      "
    s:assert [
      test = "@spanTo"
      "The spanTo= attribute of "
      s:name [ ]
      " is required."
    ]
    "\x{a}" ~
    "    "
  ]
  "\x{a}" ~
  "  "
]
start = tei_TEI | tei_teiCorpus
